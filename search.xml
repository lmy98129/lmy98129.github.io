<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Notes About Recent Projects 1]]></title>
    <url>%2F2018%2F02%2F15%2FNotes-About-Recent-Projects-1%2F</url>
    <content type="text"><![CDATA[Programming never matters that much.Experience really does. 此处收录一些近期的项目笔记，虽然大部分是数月以前的事情。 校会官网项目地址：https://www.ustbsu.cn/ 项目简介 这是北京科技大学校学生会的官方首页，管理方是北京科技大学校学生会宣传中心网络部，本人先后作为网络部干事、部长，与其他部内同事共同进行网站的日常管理、功能开发、内容更新等工作。 网站的创建具体时间不详，上线时间已达6年，经历两次大改。上一版（或最初版，不详）的网站仍在校学生会ibeike下属服务器运行，地址是hometest.ibeike.com。网站基于WordPress技术，使用的WP主题是dt-armada，首页幻灯片使用revolution slider插件，后端采用标准的LNMP架构。服务器提供商是腾讯云，服务器与域名均已备案，2018年4月域名备案将进行续约。 项目技术细节由于部门发展计划、人员技术水平等限制，网站当前仍处于技术维护阶段，并未添加过多实质性功能。 在暑期开发以及2017秋季学期的开发过程中，以加快网站加载速度、提升网站搜索排名、适应现代浏览器（尤其是对https协议）的要求为目标，向网站添加了百度统计代码、百度站长平台代码、SSL（https）证书等功能，并将站点所依托的Nginx升级至最新版本（采用http2.0协议、加快加载速度，升级过程中发生了一些问题，曾导致服务器崩溃3日，所幸抢修得当，数据未受损失），取消了上一届遗留的360cdn谷歌字体代码（360cdn关闭反而拖慢了加载速度）。曾采用百度cdn进行文件加速以及安全防护，后因效果不理想而暂停。 项目访问方式 SSH服务器命令行后台访问：使用Putty，IP地址123.206.79.61，端口22，用户root，默认密码。 网站根目录为“/a/domains/wordpress/public_html/”， WP主题目录为该目录下的“wp-content/themes/dt-armada”， 上传文件目录为“wp-content/uploads”， 插件目录为“wp-content/plugins”， 缓存目录为“wp-content/cache”(若发现网站更改不能及时应用，本地缓存又已清除时，可以考虑删除服务器上的网站缓存) FTP服务器文件传输：使用FileZila，其余同上。 腾讯云账号访问（服务器优惠券领取、充值及其他管理）：部门公共QQ号，默认密码 环境配置 Nginx 因Nginx升级时采用的是LNMP安装包（这个之前一篇文章提到过，现在服务器上的安装包地址被解析到了这里），因此腾讯云提供的Nginx连同其他套件均已失效，目录均在“/a/apps/”下，但仍有一部分配置文件可供参考，SSL证书仍保存在此文件夹中，因此切勿删除此文件夹，否则后果严重。 新的Nginx安装地址为“/usr/local/nginx”，目前只有该目录下的“conf/nginx.conf”写有与该站点相关的配置信息，包括网站根目录、SSL证书、域名解析、域名跳转（利用了正则表达式）、http2.0等配置信息，可参照网上相关教程进行阅读 Nginx配置文件更改、Nginx崩溃等情况发生时，请参考网上教程在命令行界面对Nginx进行重启操作（重启命令种类较多，若失败可以多尝试几种） MySQL 网站的数据库名为wordpress_db，数据库用户密码等信息均设定于网站根目录的wp-config.php文件内 进入数据库命令为mysql -u root -p，需输入密码，密码存储于/root/passwd.txt文件内 网站数据库备份时，无需进入数据库，使用mysqldump -u root -p --databases wordpress_db &gt; ./wordpresss_db.sql即可将数据库内数据导出到当前文件夹下的wordpress_db.sql文件中。 恢复数据时，需要进入MySQL，输入show databases;查看当前数据库列表，如无名为wordpress_db，则新建同名数据库wordpress_db即create database wordpress_db;，并输入use wordpress_db;、source sql文件所在目录/wordpress_db.sql;即可导入文件到新的数据库。切记若与先前已存在的数据库重名，如此操作将不会覆盖而是新旧数据共存，易导致冲突。只能先将原数据库删除或改名（数据库改名十分麻烦，因此请务必小心命名） 若站点备份至本地环境并其需要运行，导入数据库后请进入MySQL将wp_options表内的siturl、home字段的https://www.ustbsu.cn改为http://localhost,否则运行出错，具体修改命令一般为UPDATE 表名 SET 字段名=&#39;内容&#39; WHERE 数据过滤条件，教程可以搜索得到（“增删改查”是数据库的基本操作。若此方法无效，尝试在wp-config.php内添加define(&#39;WP_HOME&#39;,&#39;http://localhost&#39;);、define(&#39;WP_SITEURL&#39;,&#39;http://localhost&#39;);） 最后，数据无价，谨慎操作 PHP PHP版本为5.x，切勿升级至PHP7.x，因为站点的WordPress版本较旧。 除非必要，升级往往会造成各种依赖的错误，若依赖错误过于底层，后果不堪设想。谨慎操作！ CentOS 服务器Centos为6.6版本，不建议更新至7.x版本，因为新版系统组件更换较多，可能造成依赖问题。若必须更新，请做好备份。 工作笔记 部分更改已在上文“环境配置”中Nginx配置信息部分提及，此处不再赘述。 WordPress后台登录地址为https://www.ustbsu.cn/wp-admin，用户名为admin，密码为默认密码（首次进入时会出现点击任意链接均报404的问题，当前并未找到bug的原因，一般通过点按左上角WordPress的“W”徽标，跳转到“关于”页面后再点击其他链接来解决。） 除新闻文章的具体内容采用wordpress自带编辑器编辑外，包括首页在内的大部分页面均采用Visual Composer工具进行编辑。直接在服务器上的WordPress后台编辑不仅加载缓慢，而且容易出现功能缺失、无法保存等错误。（大部分是Linux的文件权限导致的） 建议操作：将网站文件通过Putty登录后台，使用命令行整站打包成zip文件，导出数据库sql文件，FileZila下载后再部署到搭建好的本地环境里进行修改，修改完成后再回传重新部署。（如果频繁修改，本地和服务器都建好站点，且只有内容上的改变，不更改基本配置，可以只打包wp-content下的文件夹和数据库文件导入本地，效果一般相同） 注意：由于网站当前界面为2015届技术人员开发，大部分的Visual Composer编辑原理本届部门人员尚未完全清楚，如需深入研究，可以按照以上方法将站点下载到本地，切勿直接在服务器上尝试未知的操作，勤做备份。 发布新闻文章时注意以下几个要点： 点左侧“文章”-&gt;“写文章”而不是“页面”-&gt;“新建页面” 分类目录要点选“新闻活动”，否则发表后“新闻活动”页面将不显示文章信息 先上传文章需要的图片到媒体库，然后写文章界面里有一个“特色图像”，点击“设为特色图像”，选取媒体库的相关图片，这样在“新闻活动”页面能够生成一张文章配图 勾选“Hide featured image on post page”，防止特色图像重复出现 编辑完文章后选择“可视化”旁的“文本”选项卡，在需要作为文章摘要的内容后插入more标签，这个标签之前的所有内容将作为文章的摘要显示在“新闻活动”页面上 WP主题是响应式主题，即会根据屏幕尺寸自动调整页面元素，以实现同一代码在桌面端、移动端等不同屏幕同样适用的效果，技术原理是CSS3的新特性以及部分JS代码的作用 首页的幻灯片基于Revolution Slider插件，在WordPress后台的左下角（滑动到底部即可看见）。除常规设置外，支持对单张幻灯片插入html代码，以实现幻灯片上悬浮按钮的特效。 踩坑提示：部分页面元素的颜色虽可以在主题dt-armada的目录内的某些css文件内修改（可以使用浏览器的开发者工具查看具体引用的文件），但是如若通过WordPress后台修改dt-armada主题的部分设置，或许会使先前的修改无效化，因为主题会生成一个新的css文件替代之前的。 百度站长平台的统计代码、百度统计平台的统计代码一般放置在了主题目录下的footer.php中，用于搜索引擎抓取以及点击量统计，两个平台的账号为技术人员私人账号，部门换届交接后可以注册公共账号并更换新的统计代码。 关于谷歌字体问题：WordPress中的插件、主题多为国外开发，在线字体多采用谷歌服务器上的字体文件，然而由于众所周知的原因，国内在很长一段时间访问谷歌相关服务器的速度为零或十分缓慢，所以在加载引用了谷歌字体的页面时，就会出现加载缓慢的情况。后来360推出了临时的谷歌字体cdn地址，为多数WordPress国内站点所采用。但是近年谷歌在北京架设了服务器以解决这一问题，所以360便关闭了自己的谷歌字体地址访问，而网站在本届技术人员接管时还未及时更改地址回原来的谷歌服务器地址，现已完全修改成功，可以在命令行后台到网站根目录输入命令find &quot;fonts.googleapis.com&quot; . -r -n查看受到谷歌字体影响的文件。 网站服务器曾接入百度cdn免费版服务，后因加速效果不理想、不支持https等原因暂停接入，具体做法请参见官方教程。 网站SSL证书是在腾讯云上申请的一年免费证书，可重复申请，安装方法见官方教程。（安装原因是微信小程序项目要求与服务器采用https协议通信） 服务器每月初续费，可领取腾讯“云+校园”优惠券将费用抵扣至4元。但是由于用户所认证学生证的所有者当前为大三年级学生，因此该生毕业时需添加新的学生认证 新生手册电子版项目地址：https://www.ustbsu.cn/2017new/new.html 项目简介 这是北京科技大学校学生会编写的2017新生手册电子版，管理方是北京科技大学校学生会宣传中心网络部，本人作为网络部部长，承担了本项目的改造和部署工作。 创建时间为2017年暑期，系上届网络部作品的改造版本。文件服务为九云图（后因技术原因，移除了九云图在线存储，改为由校会服务器自行存储），目录插件为mmenu.js。 项目技术细节本项目最初的实现原理是：将九云图的在线文件浏览页面代码复制至服务器html文件内，并添加mmenu.js的jQuery插件作为目录。然而本人接管时发现九云图的在线文件浏览页面出现了访问错误，故与源网页对比后发现了问题：复制的代码中指向九云图服务器上新生手册页面文件的地址是以约半天为周期变化的。若半天后不再更新文件地址，则地址失效，无法显示手册页面文件。经过考虑后本人将源网页的新生手册svg图片文件下载到服务器，并将html文件中的页面文件地址批量改为服务器地址，解决了问题 项目访问方式服务器文件地址：/a/domains/wordpress/public_html/2017new 图片文件、各类js插件均存于2016new内，new.html为主文件，css文件夹放置css文件，2017newtest文件夹放置新生手册pdf文件以及其他杂项文件 工作笔记 mmenu.js插件能够将带有特定class的html代码处理成目录菜单结构，因此更改目录内容只需在new.html内更改即可。目录跳转原理是类似&lt;a href=&quot;#yuntu_page1&quot;&gt;&lt;/a&gt;的锚文本，每一页的图片文件都会有一个形如id=&quot;yuntu_page1&quot;的属性，点击锚文本即可跳转到对应id元素的所在位置。 需要的svg图片文件下载链接需要先到九云图网站上传pdf文件，得到在线浏览页面后，通过开发者工具查看页面代码获得。具体下载方法可以手工复制下载链接或者通过代码批量处理（当时本人技术太差，以至于直接靠手工将几百页新生手册的地址给一条一条复制下来了，不建议此类操作，正则表达式+文件输入输出流即可解决问题）。 建议：希望下届新生手册电子版项目可以采用PDF.js方案，使用JS加载服务器上pdf文件的形式实现在线浏览，从而不再受到九云图相关技术的限制 最后，这是本站的第三篇正式发文，感谢阅读。如有意见和建议，欢迎通过首页的联系方式联系作者。本文参考资料来源于部门内部及网络，北科大校会网络部保留相关权利，严禁转载。]]></content>
      <tags>
        <tag>experience</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Understanding on HTML]]></title>
    <url>%2F2018%2F02%2F14%2FUnderstanding-on-HTML%2F</url>
    <content type="text"><![CDATA[Take something for example,which seems to be far more effctive at times. 讲一些对于HTML的理解，顺带讲讲CSS和JavaScript水平有限，如有偏颇，多多包涵。 框架 · 模板 · 控制HTML，全称是“超文本标记语言”百度百科CSS，全称是“层叠样式表”百度百科JavaScript，额……没有全称，不要在意这些细节。百度百科 首先，概念不可避。此处不是科普，而是经验谈，有需要的同学可以上百度百科先阅读一下~ 虽然正统的MVC框架其实是这样的，但是我仍然想套用它的概念，毕竟是比较经典的讲法，能够在一定程度上提高本文的逼格。（以及，能够被以后前来访问的大牛和我自己笑话一下。） 我这么菜，我也很无奈呀.jpg 框架——HTML Chrome开发者工具中显示的HTML代码 HTML代码是网页最根本的骨架，也是大部分网页呈现在浏览器上的最终形式之一。举个栗子，请打开你正在使用的任意一款浏览器，访问任意一个页面，然后打开浏览器自带的开发者工具（如果不知道如何打开，百度一下）。该开发者工具中的某一个选项卡（通常是第一个）中展示的正是该网站的HTML代码。大致结构一般如下： 123456789&lt;html&gt; ... &lt;head&gt; ... &lt;/head&gt; &lt;body&gt; ... &lt;/body&gt;&lt;/html&gt; 这些用尖括号和斜杠组成的HTML标签，是网页的框架，正如你阅读的书籍，在初始状态下是从上到下，自然地顺序排版的。被标签包裹着的文本内容、各种由诸如&lt;img&gt;、&lt;video&gt;等标签衍生出的图片、视频等多媒体内容，都在HTML这个框架之下，分布于整个网页的各自位置当中。看着十分理想，场面非常和谐。 但是，燃鹅，BUT…… 模板——CSS “这个对话框我想浮在页面最顶层，然后点完就消失，对，要有特效的那种！”“给我弄个像这个图纸这样的网页。什么？两个纵向栏，报纸都排版得出来，你写不出来？”“怎么都是黑漆漆一片的，文字和按钮要有颜色，有质感，有特效，这么丑会辣眼睛的啦！”“……哼！” 是的，你眼前的网页之所以不是一场灾难，一坨从左往右写，从上往下读的纯文本，正是因为除HTML代码之外，还有CSS代码，作为网页样式的模板，批量而精确地定义着每一个网页元素的各种属性。 是的，各种属性：长宽，距离，边框，形状，颜色，排版，显示，隐藏…… 12345678910111213.mod-class&#123; width: 10px; height: 20px; ...&#125;#special-item&#123; margin: 0 auto; padding: 8px; color: #000; background-color: transparent; ...&#125; 这样的css代码，作用于形如以下的html元素中 1234567&lt;div class="mod-class"&gt; ...&lt;/div&gt;...&lt;div id="special-item"&gt; ...&lt;/div&gt; 元素标签可以不仅仅是&lt;div&gt;，而只要class或id吻合，无论这个元素是什么，就会受到相应CSS语句的约束，就像一个放之四海而皆准的模板一样这就是CSS作为页面样式模板的力量。 而且，这不仅仅是静态的。现代的CSS版本，拥有着能够做出各种动态特效、多平台响应等一系列高级特性。 “那么CSS代码在哪里呢？我在开发者工具中找了半天没找到诶。” Chrome开发者工具中显示的CSS代码 一般在显示HTML代码的开发者工具界面的右侧。而这些CSS属性都是通过在HTML文件中引用.css格式的文件、或者直接插入&lt;style&gt;标签来实现的： 1234567891011121314//引入文件&lt;link href="./***.css" rel="stylesheet" type="text/css"/&gt;//引入文件&lt;style&gt; @import"mystyle.css"; &lt;/style&gt;//直接插入代码&lt;style&gt; .custom-class&#123; .... &#125;&lt;/style&gt;//直接在元素中插入代码&lt;div style="display: none"&gt; 但是，燃鹅，BUT…… 控制——JavaScript，以及更多 “网页不错, 我想弄个账户登录什么的。这样可以让用户有个性化的体验”“弄个banner挂幻灯片吧，自动播放的那种，现在网站主页不都这么做吗？”“听说小游戏挺火的，‘跳一跳’啥的，什么写的，难不成是flash？”“额……” 如果网页是纯HTML和CSS编写出来的话，同样是一场灾难： 无论何时，所有人都只能访问通过一模一样的网页 要创建新的网页，只能手工重新编写新的网页文件 无法提供用户输入的功能，更无法在浏览过程的前中后，对用户输出特定的反馈（内容的变化，事件的产生） …… 那么如果网页引入了我们熟悉的程序代码呢？ 不同的用户，访问具有不同内容的同一个网页，正如我们打开同一个APP，看不同的推荐一样 创建新的网页，正如安装新的程序一样，是一个自动的过程 每一次手指的触摸、鼠标的单击，程序的界面都会有相应的变化 …… 那么就需要一种、多种编程语言参与到网页乃至网站的编写过程中来了。JavaScript，这个带着Java名字，却和Java毫无关系的编程语言应运而生，担负了赋予网页灵魂的工作——控制网页的各类功能。 在你看着网页加载的时候，在你浏览网页的时候，在你按下网页上一个提交按钮的时候，在你点击屏幕跳一跳的时候（没错，微信小游戏的游戏逻辑也是JS写的） JavaScript都在你看不见的地方，静静地运行着。（它和HTML、CSS一样，被下载到浏览器，在浏览器提供的本地引擎中运行着，而不是服务器之类的远程平台）是的，它是货真价实的编程语言，让网页拥有程序一样的功能。 Chrome开发者工具中显示的可调试jQuery（JS的一个分支）代码的控制台 （一般在开发者工具显示HTML代码界面的下方，或者名为控制台的选项卡内） 与css一样，它也有引入文件和使用&lt;script&gt;标签直接插入代码的方式。 123456&lt;script type="text/javascript" src="***.js"&gt;&lt;/script&gt;//或者&lt;script&gt; var a = 0; ...&lt;/script&gt; 但是，燃鹅，BUT…… 好了好了，这里就不另开一小节讲了。 JS的优势正是所有浏览器都拥有的统一的JavaScript引擎，可以让JS一次编写，处处下载，均能兼容运行。但是它的劣势也就在于本地运行，占用了本地的资源，增大了客户端设备的负担，不能在网页加载之前对网页结构进行灵活的改变，（举个简单的栗子，如果要根据不同省份、地区、国家的访客的ip地址，提供大量的不同内容，对于网页的处理总不可能永远都是边加载边修改）。况且，JS并没有解决： 既然有了用户数据交互的渠道，那数据存在哪里？又从哪里取出？ 如何在部署了网站的服务器上设定好域名、访问权限等，并且能够自动地拒绝非法的请求 所以，需要： 一个能够在服务器端，根据客户端提交来的请求，在加载之前就能够将内容做一定处理的编程语言 一个能够规范地管理并与网页进行实时数据交换的数据库 一个能够有效管理服务器上传下载、ip域名映射、访问进程等事项的服务器管理程序 是的，这些服务器端的需求，与我们之前提到的浏览器端，也即客户端的需求相对。两者的对比就产生了网页开发中最重要的两大分类： 前端和后端 网页前端开发：HTML+CSS+JS网页后端开发：服务器管理+数据库管理+预处理控制（后端框架） 两者有着很多很有趣的矛盾统一性，例如： 网页前端开发因为需要跨浏览器甚至跨平台的兼容，因此使用的技术一般是统一的HTML+CSS+JS。 后端开发却相反，由于服务器本身平台的多样性（Linux或Windows）以及对其性能、规模等其他需求的多样性，导致后端采用的技术框架呈现百花齐放的姿态，例如WordPress采用的LAMP或LNMP，基于python的Django，基于Node.js的Express，基于Java的Spring等等，此处就不过多赘述了。 …… PS：不仅仅是网页开发分前端和后端，任意一个web项目，例如手机APP、桌面程序、微信小程序……都需要有前端后端的开发划分，以便于厘清项目结构和开发安排 总结：在跑题万里之后 （以及，能够被以后前来访问的大牛和我自己笑话一下。） 我这么菜，我也很无奈呀.jpg 我一直在思考自己为什么会跑题。最后发现答案就在上面这两句引用里面。是啊，我很菜。 我当前对于技术的理解，根本无法给予我把控这些庞杂概念的能力。说是讲自己对HTML的理解，但更多的是谈到了围绕HTML+CSS+JS的网页前端基础。虽然也没什么毛病，俗话说“不讲相关知识点的讲评，就是在耍流氓”。 但是我依然要写，毕竟只有写出来点什么，才能知道自己脑袋里面装的东西是有多么地可笑，才能放下自己那些绷在脸面上放不下的所谓自大和狂妄。正如高中时期孜孜不倦地在一切空白处记下的笔记，就算我记下之后不再去看它，至少在我记录的时候，知识在我的大脑中不断流转、不断处理，最终呈现在我的笔下，我的眼前。这个过程，不正是自我纠错、自我提高的过程吗？ 为自己而写，调动自己的思维，不要让大脑日渐沦为一台生锈的机器。 那么最后总结一下吧：HTML作为现代网页的基本骨架，只有在CSS、JavaScript乃至整个服务器后端的协同下，才能够正常地发挥现代网页的基本机能，以及为更多新鲜的需求、新颖的功能带来无限的开发潜能。 学习网页开发，最重要的不是一句两句语法，而是在动手和借鉴的过程中，从微观的角度，理解整个项目的运作逻辑，和技术背后的高明之处。（虽然我还是在需求导向型的歧途上越走越远，但是读得懂源码的程序员，才能开发出真正的好产品，这是不变的真理，迟早有一天我仍然会兜一个大圈子，回到这里的） 建议 · 福利其实上面已经写一些建议了。但是我还想另外开一个大节讲一讲。 建议不多，就是先不要想着自己搭一个什么牛逼的网站，先做一个简单的HTML+CSS+JS的小页面，理解清楚他们之间的作用机理，顺带踩一部分的坑。 之后或许你会停滞一段时间，因为说实话，其实在修改一些开源项目供你自己项目需求的时候，这些已经完全够用了，前辈写的足够优秀了，后端的东西你一旦配置好了就可以专心改界面了。 但是，会有一个时刻，你会发现只搞这些根本满足不了需求，或许是你自己看到了别人写的项目，或许是你突然要调用数据库做一个新的功能，或许是你发现项目提供的API根本没法用，要自己写一个。 不懂后端的前端，只可能是个巨坑。所以你从一个大坑（网页前端），纵身一跃，跳进了另一个大坑（网页后端）。之后再多跳几次，从网站到移动APP，从移动APP到桌面端，从软件到物联网硬件，然后，然后…… 然后，你就乖乖回前端啦！（并不） 福利？福利是不可能有的，这辈子都不可能有的。就是稍微推荐几个网站把读者带坑里去这样子 学习站点： FreeCodeCamp.cn：闯（shua）关（ti）式的前端编程教学网站（也是我真正开始接触前端编程的地方） w3school：可以当工具书用，有些知识点较老，但是不影响使用（百度HTML相关知识点，不出意外前几个就是它了） 萌码：又一个闯（shua）关（ti）式的编程练习平台（虽然没用过但是身边的同学在用） 练手推荐： GitHub：多看优秀项目的代码，并且多练习一些优秀项目的部署和使用，如果不知道找什么就去看排行榜上的项目。（CSDN同理） Student Developer Pack：使用学校提供的学生邮箱注册GitHub账号，可以领取Education Pack，内含免费一年DigitalOcean服务器和Namecheap域名。（踩坑提示：DO的服务器要使用VISA卡或者PayPal预交约合32元人民币才能开户，建议使用PayPal，一年后全价略坑，现已转bandwagon。服务器在境外，可以找教程kexueshangwang） WordPress：搜一个教程并对照着在服务器上搭建一个WordPress站点吧！本博客程序是Hexo，但我依然推荐WP，毕竟越著名的程序出问题时能够获得的帮助（教程）也就阅读。同时也有助于你理解LNMP/LAMP内部各个部分的联系和配置方法。如果肯花心思去美化、修改你的站点那就更好了。（WordPress是一个优秀的PHP项目，类似的还有论坛程序Discuz、PHPwind、Wecenter、Tipask，在修改它们的过程中你也可以理解PHP在站点中起到的作用，如果你还想尝试其他架构的例如Java或Python的，也可以去搜索并尝试部署到你的服务器上） 微信小程序：使用你当前掌握的前端、后端知识去开发微信小程序吧~ 工具下载： Baidu：是的，搜索引擎是知识的源泉，（貌似并不用下载），掌握好问题的描述方式，输入少量的、但足以描述整体的关键词，大部分的问题都能够找得到答案。 VS Code：近乎万能的代码编辑器，你值得拥有。 FileZila：好用的FTP上传下载工具，与服务器进行文件传输的首选。 Putty：SSH客户端，使用命令行远程操作你的服务器，顺带学习一下Linux命令的使用 LNMP：在你的服务器上快速配置LNMP环境，免除各种依赖冲突的烦恼 XAMPP：在你的服务器上快速配置LAMP环境，同样也支持在本地环境（Windows桌面端）配置，便于你站点的本地调试（本地调试后上传能避免很多必要的麻烦） 最后，这是本站的第二篇正式发文，感谢阅读。如有意见和建议，欢迎通过首页的联系方式联系作者，本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。]]></content>
      <tags>
        <tag>experience</tag>
        <tag>understanding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[First to NeXT]]></title>
    <url>%2F2018%2F02%2F14%2FFirst-to-NeXT%2F</url>
    <content type="text"><![CDATA[Maybe it is the first.But in my view, that may be the NeXT. 名字不重要，形式也不重要，重要的是内容。这里将会陆续发布一些技术工作的经验谈，然而仅仅是经验谈而已。 更多的都是需要读者自己去探索，这一方天地下，比我们的视野更远的地方。 12hexo new "First to NeXT"hexo d -g 这是本站第一篇正式发文，感谢阅读！]]></content>
      <tags>
        <tag>intro</tag>
      </tags>
  </entry>
</search>
