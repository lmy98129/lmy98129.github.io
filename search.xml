<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Notes About Recent Projects 3]]></title>
    <url>%2F2018%2F06%2F28%2FNotes-About-Recent-Projects-3%2F</url>
    <content type="text"><![CDATA[The most stupid workmight be the most important one to cherish. 此处收录一些近期的项目笔记，这次真的是最近正在干的事情了。 没上锁的原因？是因为我从校会网络部光荣退休了吧。。。讲点别的项目。 贝壳计通讲师团项目访问方式：微信小程序搜索“贝壳计通讲师团”即可 项目简介 小程序主界面，更多预览请直接打开小程序或阅读本文后续内容 这是北京科技大学计算机与通信工程学院学生讲师团的官方小程序，管理方是北京科技大学计算机与通信工程学院学生讲师团，开发和维护方是北京科技大学计算机与通信工程学院的计算机科学与技术专业大二学生本人以及我的搭档fafnir，本人作为小程序的主要开发者之一，完成了本小程序的数据库结构设计、前端小程序开发、Node.js后端开发工作，并进行了多次版本迭代。搭档fafnir完成的工作主要为开发基于Python的Django Xadmin搭建的小程序后台管理网站。 项目创建的具体时间应与本博客的创建时间相差不多，开发时间长达3个月，上线时间已达1个月，经历两次大改。目前最新版本为v0.4.1。小程序前端基于腾讯微信小程序开发工具的原生组件，后端基于Node.js框架Express，数据库使用MySQL，数据库访问使用Node.js的MySQL库。其中，前端的通信模块以及后端的数据库访问模块均采用Promise异步编程封装。 注：我们计划在将本程序进行适当重构后，将本程序的前后端代码适时发布至GitHub。当前程序内的敏感信息较多，公布后风险较大故暂不考虑。 项目技术细节本项目的最初需求来源是：在2017秋季学期计通学院学生讲师团旧有线上预约平台网站开发维护人员即将毕业离校，讲师团负责人员联系辅导员提出了寻找学生进行下一代线上辅导预约平台的开发和维护工作的需求，最终确定采用小程序的形式进行开发，并招募了开发人员。原定计划为寒假一个多月时间内完成开发任务，但由于人员技术水平有限，以及在开发过程中遇到的种种挫折，我们前后花费了将近3个月的时间，经历两次大改才将目前接近成品的版本v0.4.1付诸上线使用。 项目第一版 第一版小程序主界面，更多预览请阅读本文后续内容 项目的第一版完成了基本的需求分析、技术选型、数据库表设计、设备部署以及初步的技术实现等工作。其中需求分析与数据库表设计均由我来完成，并根据MySQL的通行命名规范，编写了本项目的第一份需求分析以及数据库表结构稿件。出于安全考虑，不在此处公布数据库各表的具体字段。由于我们与需求方之间初期的沟通较少，导致我们对于需求方的理解有一定的偏差，但根据我们之后的需求更改情况，可以看出大方向上是无误的。 需求分析我们在第一版设计时的具体需求（大部分为开发方在开发过程中，帮助需求方总结的需求）为： 小程序前端搭载学生端和讲师端两套代码，在用户登录过程中，使用微信提供的用户id查询数据库结果决定显示哪一界面，普通用户默认为学生用户。（虽然在历次提交审查中，微信方面的小程序测试人员并未对此提出任何疑问，但可以说确实是一种逃避审查的潜在手段，希望微信方面改进审查机制加以防范） 讲师发布课程内容，包括课程名称、日期、时间、地点、人数上限、备注等，其中人数上限、地点、备注为选填项。（早期版本中未考虑到人数上限问题，是后期加入的字段） 学生可以进入课程列表对讲师发布的课程进行预约或取消预约，其中达到人数上限、课程取消等情况下提示学生不得预约，课程列表发生的更改将在触发课程列表本身更改的同时，实时触发首页列表的刷新。（课程超时不得预约的功能较为复杂，也是后期加入的字段） 学生端以及讲师端首页均显示自己已预约的课程或已发布的课程情况，以及对课程进行相应的编辑操作：学生可以取消课程预约，讲师可以取消、删除、编辑课程，讲师的编辑操作也将触发其首页列表的刷新。 在课程列表以及首页中点击单个课程卡片可以查看课程详情。 “我的”页面中普通学生用户可以申请成为讲师，需提交真实姓名以及电话号码，通过后台管理网站的管理员核对后通过认证成为讲师。 后台管理网站应该能自由编辑、删除任何讲师发布的课程，应在开发后期对讲师每月授课情况统计，并进行展示（截至文章发布，授课情况统计功能暂未全部完成）。 数据库表根据以上的需求分析，大致能够分成以下的数据库表（具体字段不予公布） 用户预约总表 讲师课程列表 管理员认证讲师资格列表 管理员账户列表 程序功能从这些数据库表可以分析得出的功能表如下： 用户 查看当前可预约课程列表 提交预约 取消预约 查看自己当前的预约 提交讲师认证申请 讲师 查看当前已发布课程以及预约情况（预约人数） 提交课程 取消课程 修改课程 管理员 查看并编辑当前所有课程以及预约 操作讲师认证申请 查看当前所有讲师每月的授课情况 技术选型项目第一版的技术选型由fafnir完成，总体情况是采用了腾讯云提供的wafer小程序一站式解决方案，具体来说应该是wafer1，选择的理由是相比于wafer2中服务器无法取得完整访问权的形式，wafer1可以直接在服务器上部署后台管理网站。（虽然后来的经费结算显示，使用wafer2方案可能会更经济一些，而且截至文章发布，腾讯云已经不再主推wafer1，并撤换下了多个wafer小程序一站式解决方案的访问入口，当前能够全新购买的解决方案的只剩下基于开发者工具的wafer2方案，两者之间的不同以及基本架构可以看这里）当时的具体项目选型如下： 技术模块 采用技术 备注 小程序前端 wafer小程序一站式解决方案小程序demo 项目地址，与后端通信采用的是wafer自带的腾讯云SDK，采用的是基于socket的全双工信道通信，部分界面元素直接复用了demo中的界面 服务器后端 wafer小程序站式解决方案Node.js后端demo 项目地址，部署于wafer一站式解决方案的业务服务器上，基于Node.js框架Express，与前端通信采用的同样是wafer自带的腾讯云SDK，采用的是基于socket的全双工信道通信，前后端的会话通信可以直接通过API地址进行，但是信道通信必须经过一站式解决方案的信道服务器进行（请记住这一点，在之后的版本迭代中就发生了问题），与数据库通信采用的是Node.js的MySQL库的线程池模式（此时并未对其进行任何的封装） 数据库 MySQL 5.6 部署于wafer一站式解决方案的云数据库上，通过wafer一站式解决方案的信道服务器进行远程访问 后台管理网站 基于Python的Django Xadmin 部署于wafer一站式解决方案的业务服务器上，与后端访问操作同一数据库 开发难点及笔记JavaScript的异步单线程特性由于对Node.js乃至JavaScript的异步单线程的特性，尤其是回调函数的理解还较为浅薄（可能也是在之前并未直接接触过前后端通信以及数据库通信的原因造成的。是的我之前的工作真的就是改改开源PHP项目的代码，没怎么认真研读过代码以及文档），所以在设计后端服务器与数据库通信模块时，仍然将思路停留在C/C++之类的线性思路上，例如有如下代码：12345678910var res = 'nothing';connection.query("USE "+database);connection.query('SELECT * FROM '+databaseForm, function (error, results, fields) &#123; if (error) throw error; if (results) &#123; res = results; console.log(res); &#125;&#125;);console.log(res); 其执行结果按照我的想象应该是：123nothing(查询的结果)(查询的结果) 结果是：123nothing(查询的结果)nothing 相当于查询结果并未真正传给变量res，若我想在第二个console.log(res);的位置进行查询结果向前端的回传，则回传的结果将仍是nothing。具体原因？简单来说就是JavaScript作为一种在浏览器引擎中工作的语言，在大多数情况下只能单线程运行，此时只能先将一些阻塞整个线程运行的工作进行挂起处理（就例如前后端通信，若后端在某次查询时迟迟不回传，不应该将这个查询之外的其他工作全部停止，选择等待查询结果的到来，而是将其挂起，当后端查询结果回传时，再回过头来进行查询结果的处理等与查询结果相关的工作），这个挂起处理就是通过回调函数callback实现的，也就是上面第二个connection.query中的function函数。因此，正确的实现应该是:1234567connection.query("USE "+database);connection.query('SELECT * FROM '+databaseForm, function (error, results, fields) &#123; if (error) throw error; if (results) &#123; TunnelService.emit(tunnelId, messageId, results); //直接在回调函数中进行回传 &#125;&#125;); Node.js中MySQL库的单语句查询、参数化查询等防注入机制后端服务器与MySQL通信使用的库为Node.js通用的MySQL库，安装命令为npm install mysql。根据我们后期的开发经验，事实上不应该使用该库而应该使用更加专业的ORM框架（ORM的定义）来方便我们对数据库操作命令进行js化的直接编写，而非只用SQL语句进行直接查询，虽然学习SQL语句也不是一件坏事。是的，本项目基本上用到的也就是增删改查、左联右联内联、COUNT计数、建表建库等基本SQL语句。 但是，问题在于该MySQL库本身的最佳实践中提到了其参数化查询、单语句查询的等防注入攻击的机制。其中参数化查询并非开发难点，此处可以略过，但是其默认单语句查询的功能实在是增加了开发难度。也就是必须在单条SQL语句当中完成所有查询，不允许进行多次查询后通过中间变量进行合并得到最终结果。这一设定的出发点是好的，万一API接口被传入一些带“;”的参数，且允许多语句查询，我们并不知道这些参数是否会导致SQL注入攻击的发生。 诚然，大多数查询通过本人的努力都实现了单语句查询的效果，虽然SQL语句看起来又臭又长，外人难以读懂（这也是我反思之后决定日后学习ORM的主要原因之一）。但是若出现某些根据上一次查询结果进行分支操作的情况，单语句查询就显得十分吃力了。例如，我们遇到了这一种情况： 所以在项目的第一版中，我们采用了Node.js的async库中的waterfall进行同步顺序编程，之后的版本我发现了Promise是个好东西（虽然理解起来有难度）然后就把通信模块统统重写了个遍在MySQL通信模块中解决这一问题的一个库函数实例如下：也可以看出采用了参数化查询的防注入机制，以及MySQL的线程池。12345678910111213141516171819202122232425262728293031323334353637383940414243static mysqlReserveClassStu(tunnelId, messageId, openId, classId, nickName) &#123; var tasks = [function(callback) &#123; pool.getConnection(function(error,connection) &#123; connection.query("SELECT * FROM user_reserve WHERE class_id=? AND user_id=?", [classId, openId], function (error, results_1, fields) &#123; if (error) throw error; if (results_1) &#123; connection.release(); callback(error, results_1); &#125; &#125;); &#125;); &#125;, function(results_1, callback) &#123; if(results_1[0] == null)&#123; pool.getConnection(function(error,connection) &#123; connection.query("INSERT INTO user_reserve (user_id,user_nickname,class_id,submission_date) VALUES(?,?,?,NOW())", [openId,nickName,classId], function(error, results_2, fields) &#123; if(error) throw error; if(results_2) &#123; connection.release(); TunnelService.emit(tunnelId, messageId, results_2); callback(error); &#125; &#125;); &#125;); &#125; else &#123; pool.getConnection(function(error,connection) &#123; connection.query("UPDATE user_reserve SET status=1 WHERE class_id=? AND user_id=?", [classId,openId], function(error,results_3, fields)&#123; if(error) throw error; if(results_3) &#123; connection.release(); TunnelService.emit(tunnelId, messageId, results_3); callback(error); &#125; &#125;) &#125;) &#125; &#125;]; async.waterfall(tasks, function(error, results) &#123; if(error) throw error; &#125;);&#125; 这个代码块确定没把数据库表的字段抖出来了吗。。。emmmm，还好吧。各位高抬贵手，高抬贵手。。。 前端、后端、数据库三者之间的时间不统一以及时间格式的处理问题这里由于我自己也记不大清楚当初的处理思路（尤其是小程序前端在处理过程中使用的“幻数”），很可能都是我无意识情况下的“瞎调试”的成果。这个说实话我是极其不提倡这么干的，虽然有的时候的确有用此处提供各模块的关键代码供大家参阅：服务器后端MySQL通信模块上的初始化操作，关键就是设置时区到正确的时间123456789101112131415process.env.TZ = 'Asia/Shanghai';var pool;class MysqlExecute&#123;static mysqlInit() &#123; pool = mysql.createPool(&#123; connectionLimit: 10, host : mysqlHost, user : mysqlUser, password : mysqlPassword, database : mysqlDatabase, timezone : process.env.TZ &#125;) &#125; 小程序前端的时间处理相关代码format，关键就是正则表达式+暴力剪切+暴力连接（其中用了微信开发者工具的默认小程序demo里面的util.js时间处理函数）12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667const utils = require('./util');var currentDate = utils.formatTime(new Date());var currentDateAnnual = new Date();var classContentStr;const timeFormat = (str) =&gt; &#123; for (var i = 0; i &lt; str.length; i++) &#123; var start = str[i].class_timestart; var end = str[i].class_timend; var date = new Date(str[i].class_date.slice(0, 10)); date = date.getFullYear() + "年" + (parseInt(date.getMonth()) + 1).toString() + "月" + date.getDate() + "日"; start = start.slice(0, 5) if (start.slice(0, 1) == "0") &#123; start = start.slice(1, 5) &#125; end = end.slice(0, 5) if (end.slice(0, 1) == "0") &#123; end = end.slice(1, 5) &#125; str[i].class_date = date; str[i].class_timestart = start; str[i].class_timend = end &#125; return str;&#125;const dateFormat = (options, that) =&gt; &#123; that.setData(&#123; dateIndex: currentDate, ateLimitStart: currentDate, &#125;); currentDateAnnual.setFullYear(currentDateAnnual.getFullYear() + 1); currentDateAnnual.setDate(currentDateAnnual.getDate() - 1); that.setData(&#123; dateLimitEnd: currentDateAnnual &#125;); if (options.class_content != null) &#123; classContentStr = JSON.parse(options.class_content); if (classContentStr.student_limit == '0') &#123; that.setData(&#123; studentLimit: '' &#125;) &#125; else &#123; that.setData(&#123; studentLimit: classContentStr.student_limit &#125;) &#125; classContentStr.class_date = classContentStr.class_date.replace("年", "-"); classContentStr.class_date = classContentStr.class_date.replace("月", "-"); classContentStr.class_date = classContentStr.class_date.replace("日", ""); that.setData(&#123; className: classContentStr.class_name, classIntro: classContentStr.class_intro, dateIndex: classContentStr.class_date, classPlace: classContentStr.class_place, timeEndIndex: classContentStr.class_timend, timeStartIndex: classContentStr.class_timestart, &#125;) &#125; return classContentStr;&#125;module.exports = &#123; timeFormat: timeFormat, dateFormat: dateFormat&#125; 看着相当的难受啊，这x一样的代码风格😂没毛病，（下一版）会改的会改的🙏（没错，之后的版本我直接把那个又臭又长的classContentStr给改了。。。） 12345var date = new Date(str[i].class_date.slice(0, 10)); //这里得到的结果格式应该类似于yyyy-mm-dddate = date.getFullYear() + "年" + (parseInt(date.getMonth()) + 1).toString() + "月" + date.getDate() + "日"; 想看幻数的同学看上面，我把它截取下来了。是这样的：月份数诡异地被我加了一个1，然后居然就对了。。。我也不知道这个到底是怎么一回事，在JavaScript里有什么奇异的原理导致了这个结果，有人知道的话可以告诉我吗? 后续：我查到了，因为getMonth()是以数组形式来存储月份的，下标是0~11 人数上限的数据格式转换，以及人数已满等状态下阻止用户预约 你还别说，我一边写这个笔记，一边还在最新版本的小程序里发现各种蜜汁有趣的bug呢😂 人数上限作为讲师发布课程时的一个选填项，可以说是本项目数据处理的一个难点，其处理方式在本项目中也起到了一种模范的形式难点在于：人数上限分为两种情况：“无上限”和存在数字上限，我们只能利用0这个数字来表示“无上限”，因为基本上不可能开设一个人也没有的课程，至少的人数上限也应该是1。但是反过来说，用户在填写表单时不可能特别将无上限填写为0，这在用户体验上只有留空才更加符合一般的表单填写习惯。 所以我们在用户点击上传按钮触发的函数中就将人数上限进行处理转换：1234567var studentLimitFormat;if(this.data.studentLimit == '')&#123; studentLimitFormat = '0';&#125; else &#123; studentLimitFormat = this.data.studentLimit;&#125;//之后传到后端的就是studentLimitFormat 并在从后端回传的过程中也一样进行相应的处理，这里以课程内容页代码为例：123456789if(classContentStr.student_limit == '0')&#123; this.setData(&#123; studentLimit: '无上限' &#125;)&#125; else &#123; this.setData(&#123; studentLimit: classContentStr.student_limit &#125;)&#125; 同时，也应当在人数已满时阻止用户预约。在微信小程序中，我们使用&lt;block wx:if&gt;的wxml标签形式进行分类，通过条件判断来决定显示何种按钮，并只在“预约”和“取消预约”按钮上添加相应的函数钩子，这里以课程列表的上传按钮为例：1234567891011121314151617181920&lt;block wx:if="&#123;&#123;item.student_sum &gt;= item.student_limit &amp;&amp; item.student_limit &gt; 0&#125;&#125;"&gt; &lt;view class="reserve-button" data-content='&#123;&#123;item&#125;&#125;'&gt; 人数已满 &lt;/view&gt;&lt;/block&gt;&lt;block wx:elif="&#123;&#123;item.status == 0&#125;&#125;"&gt; &lt;view class="reserve-button" data-content='&#123;&#123;item&#125;&#125;'&gt; 已取消 &lt;/view&gt;&lt;/block&gt;&lt;block wx:elif="&#123;&#123;item.reserve_status == null || item.reserve_status != 1&#125;&#125;"&gt; &lt;view class="reserve-button" bindtap="bindReserve" data-content='&#123;&#123;item&#125;&#125;'&gt; 预约 &lt;/view&gt;&lt;/block&gt;&lt;block wx:elif="&#123;&#123;item.reserve_status == 1&#125;&#125;"&gt; &lt;view class="reserve-button" bindtap="bindCancelReserve" data-content='&#123;&#123;item&#125;&#125;'&gt; 取消预约 &lt;/view&gt;&lt;/block&gt; 当然，我们也在后端数据库表的设计中，将讲师课程表的人数上限字段的默认值设置为0。这算是最后一道防线吧，防止其他非法输入对数据的影响。 提交表单前的各种格式检查是的，以人数上限的数据上传前进行处理为范本，我们普遍采用了if() { return; }的形式对非法输入进行检查，而这些非法输入的多样性之丰富，远远超出了我们的想象。例如：有时间的非法输入，直接用正则表达式替换掉时间中的冒号+暴力的数字比较（new Date说实话多此一举了）：12345678910if(new Date(this.data.timeStartIndex.replace(/:/g, "")) &gt; new Date(this.data.timeEndIndex.replace(/:/g, "")))&#123; wx.showModal(&#123; title: '提示', content: '开始时间应小于结束时间', showCancel: false, confirmColor: '#17abe3', confirmText: '好的' &#125;) return;&#125; 有人数上限输入非数字时，调用isNaN()函数的同时防止将留空代表“无上限”也拦截：12345678910if (isNaN(this.data.studentLimit) &amp;&amp; !(this.data.studentLimit == undefined)) &#123; wx.showModal(&#123; title: '提示', content: '人数上限应输入数字', showCancel: false, confirmColor: '#17abe3', confirmText: '好的' &#125;) return;&#125; 甚至对是否产生了无效的预约时间也进行了合法性检查：12345678910if ((currentDate &gt; selectedDate) || ((currentDate == selectedDate) &amp;&amp; (currentTime &gt; selectedTime)) &#123; wx.showModal(&#123; title: '提示', content: '预约时间应大于当前时间', showCancel: false, confirmColor: '#17abe3', confirmText: '好的' &#125;) return;&#125; 我们在合法性检查上花费了大量的时间，但也只能够对非法情况进行枚举性质的检测，若有一些我们不了解的业界最佳实践，欢迎联系我们探讨这一问题。 程序测试程序测试确实是开发过程当中的重要一环，由于团队资源有限，且微信账号确实具有不可模拟性，所以我们在不足以拿到足够的微信测试账号以及测试机时，借助微信开发者工具和自己的手机号，建立了一个仅有两个核心测试账号、一台安卓测试机的测试体系（后期在发现iOS独有bug时，我们也找了临时的iPhone测试机和测试微信账号）。 两个测试账号一个默认为普通学生用户，另一个通过后台管理网站通过讲师认证注册为讲师（在后台管理网站还未部署时，其实是通过手工向数据库表加入记录实现的），两号均在微信公众平台上注册为开发者 一般情况下，在PC端微信开发者工具上登录其中一个用户，手机端也登录这一用户，以测试学生端或讲师端在开发者工具的模拟器和实机上效果是否一致，也可以通过远程调试定位实机上的bug 若想测试讲师端与学生端的数据互动效果，可以在开发者工具登录一个用户，另一个用户在手机上通过微信最新版本的“切换用户”功能登录小程序 若想测试多个教师或多个学生产生数据的效果，可以通过后台管理网站同时认证讲师或取消讲师认证来实现身份上的同一性。 若想在临时的iPhone测试机上进行远程调试，记得先将该机的测试微信号加入开发者列表，如此方能远程调试成功，测试结束后记得再删除即可。 小程序最终界面UI设计上大量采用了腾讯云一站式小程序解决方案小程序demo的配色和界面元素。（其实就是没精力去设计UI啦。。。）基本设计思想更偏向WP式的平面风格 第一版小程序主界面（此时小程序名称还没改） 第一版小程序主界面（无预约时显示的欢迎+提示语） 第一版小程序课程列表 第一版小程序讲师端主界面 第一版小程序讲师端编辑课程界面 第一版小程序“我的”页面 项目第二版项目第二版的迭代原因是十分偶然的。由于微信官方对于小程序用户登录API的调整影响了wafer1一站式解决方案中的腾讯云小程序SDK以及Node.js服务器端SDK通过信道服务器对用户身份进行认证的正常操作进行，导致了SDK提供的信道全双工通信对于新注册用户不再可用，最终使小程序的大多数功能处于不可用状态。（据悉，wafer2的SDK信道登录方式暂未受到影响，估计是腾讯方面在wafer1逐渐下架的情况下忽视了使用wafer1的老用户，测试不全面而导致这一情况发生） 为了解决这一重大bug，我们团队仔细研读了微信官方的登录API调整公告以及腾讯云SDK文档，最终采用了“添加首次登录用户认证界面+全面弃用信道通信方式并采用原生通信方式全面重写”的改进方案。值得一提的是，在重写过程中我们着重采用了JavaScript中的异步Promise编程，对小程序前端通信模块、后端服务器MySQL通信模块进行封装重写。在开发过程中，本人收获了更多的JS异步编程经验，并对Promise为代表的异步编程解决方案有了更加深刻的理解 由于第二版着重于bug的修复和代码的重写，并未对UI界面设计做出太多调整，所以此处不再展示小程序主界面截图。若想知道第一版与最新版UI变化为何如此之大，请继续往下阅读，感谢您的理解！ 开发难点及笔记微信登录API调整后小程序前端后端相应的修复解决方案根据微信官方的说法，若想像之前那样获得完备的用户基本信息: 必须使用&lt;button&gt;组件，并将open-type指定为getUserInfo类型，用户允许授权后，可获取用户基本信息。 而另一种使用&lt;open-data&gt;组件展示用户信息的方式，就真的只有展示功能了。。。可能也是我太菜，根本没办法在JS获取到组件内部加载出来的用户信息。 所以就相当于只能让用户点击一次按钮来完成整个用户信息获取的工作。根据我们当初设计的数据库表结构，用户信息，尤其是其唯一标识码openId，在本项目中起到了相当关键的作用，若不能获取这些信息，则根本无法正常使用小程序的各项基本功能，所以我们在小程序的首页设计了一个遮罩层，若未进行用户信息授权的话，用户看见的只有遮罩层上的提示和用户授权登录的按钮。 我们具体的实现结果如下所示:wxml代码：12345678910111213141516&lt;block wx:if="&#123;&#123;!hasUserInfo&#125;&#125;" &gt; &lt;view class="auth-page"&gt; &lt;view class="auth-page-note"&gt; &lt;image src="../../images/reserve-hl.png"&gt;&lt;/image&gt; &lt;text&gt;请允许微信授权登录后\n继续使用小程序&lt;/text&gt; &lt;/view&gt; &lt;view class="auth-page-button"&gt; &lt;button wx:if="&#123;&#123;canIUse&#125;&#125;" open-type="getUserInfo" bindgetuserinfo="bindGetUserInfo"&gt; 授权登录 &lt;/button&gt; &lt;view class="auth-page-uncomp-note" wx:else&gt; 不支持授权登录，请升级微信版本 &lt;/view&gt; &lt;/view&gt; &lt;/view&gt;&lt;/block&gt; JS代码（index页面内的钩子函数）：12345678910111213141516171819202122232425bindGetUserInfo: function (e) &#123; if(e.detail.userInfo)&#123; var userInfo = e.detail.userInfo; console.log('用户授权：', userInfo); wx.setStorageSync('nickName',userInfo.nickName); wx.setStorageSync('avatarUrl', userInfo.avatarUrl); auth.showAuthPage(this); wx.showToast(&#123; title: "正在登录", icon: "loading", duration: 1500, mask: true &#125;) //说实话有点蠢这里，设置了一个硬性的1.5s时间，主要是因为貌似有点bug， //我如果设置wx.showToast一直显示，然后在用户信息拿到后再调用wx.hideToast， //经常性失灵，很绝望。可能真的是只能在当前页面中的js调用。但是很奇怪的是，wx.stopPullDownRefresh就不用这么干。。。 &#125; else &#123; console.log('用户授权：拒绝'); &#125;&#125;, JS代码（上面调用的auth所在的auth.js）：1234567891011121314151617181920212223242526const showAuthPage = that =&gt; &#123; if(wx.getSetting) &#123; wx.getSetting(&#123; success: res =&gt; &#123; var auth = res.authSetting, nickName = wx.getStorageSync('nickName'), hasUserInfo; console.log("授权情况：", auth); if (auth['scope.userInfo'] &amp;&amp; nickName) hasUserInfo = true; else hasUserInfo = false; console.log("授权标记：", hasUserInfo); that.setData(&#123; hasUserInfo: hasUserInfo &#125;) &#125; &#125;) &#125;&#125;module.exports = &#123; showAuthPage: showAuthPage&#125; 感觉上小程序的底层应该也是像Vue、Angular、React那样写了一个有DOM更新之类功能的前端引擎，基本上hasUserInfo更新了之后，那个遮罩层直接就消失了，DOM更新的速度相当快。也有人吐槽小程序的JS风格就像Vue+React。。。 第二版小程序用户登录授权页面（请忽略那个远程调试用的黑框😂） 前端通信模块以及后端MySQL通信模块的重写和Promise封装有人说，你们不是又重新实现了用户信息获取了吗？为什么还是不能用原来的信道通信方式？而且再不济重新写一个socket类型的通信方式岂不美哉（可以实现全局广播，这样可以及时通知用户是否有数据发生了更改）？ emmmm，技术菜，只是主要原因之一。（我承认我确实还不会写socket。。。） 关键是那个腾讯云SDK它就是用原来的登录方式（划重点）获取用户信息的啊，现在微信方面彻头彻尾地改了，你不去重写它，还有其他办法吗？ 第一步，先别急着把采用信道通信的代码全删了，至少通信时数据的格式你得看看吧。 然后，我确实菜，所以只能在前端通信模块乖乖地上原生wx.request请求了。。。真的，我就觉得这就是AJAX啊。首先还是先写一个简单的post函数，把wx.request定制化封装一下。 123456789101112131415161718const post = (obj) =&gt; &#123; return new Promise((resolve, reject) =&gt; &#123; wx.request(&#123; url: config.service.testUrl, data: obj, success: res =&gt; &#123; if(res.data.results) &#123; resolve(res.data.results); &#125; else &#123; reject(res.data.error); &#125; &#125;, error: error =&gt; &#123; reject('网络出错'); &#125; &#125;); &#125;);&#125; 为什么要用promise对wx.request进行封装呢？理由很简单，依然是我们之前提到的JavaScript的单线程特性，需要使用回调函数callback()对一些可能阻塞整个JS代码执行的操作进行封装，让它们先挂起，让代码先继续执行下去，等需要进行这些操作的时候再回过头来执行——这就是异步非阻塞的编程模式。而大部分可以调用的函数都提供了回调的使用方法，以及你自己定义的函数也可以提供回调。 回调作为一种异步编程的解决方法，看起来很美好。但如果在这样的一种场景下你估计就笑不出来了： 例如，你向后端的一个API请求一个数据。好，数据拿到了，现在你要根据这个数据再去请求后端的另一个API的数据……如此下去，你请求了3个API，OK，你终于拿到了想要的最终数据，然后你还要将这个数据处理一下才能展示到界面里面 这样的话，你写的代码大概像这样： 1234567891011121314151617wx.request(&#123; //... success: res =&gt; &#123; wx.request(&#123; //... success: res =&gt; &#123; //... wx.request(&#123; //... success: res =&gt; &#123; //format your final data. &#125; &#125;) &#125; &#125;) &#125;&#125;) 如果再多几次回调函数的嵌套，估计你自己看这代码也差不多要阵亡了。没错，这就是所谓的回调地狱。后端与MySQL之类的数据库通信也同理，你输入了一条SQL语句的结果是下一条SQL语句的内容…… 那么除了疯狂地筑起一个回调金字塔之外，还有什么别的办法能够解决异步非阻塞编程问题呢？Promise就是其中之一。当然我之前用的async也是一种，但是那个写起来说实话更加别扭，至少Promise允许你用封装函数的方式进行编程，显然比写一些蜜汁有趣的函数数组正常多了。 好了，我之前提到了我用Promise封装了一个post函数，现在我就展示一个使用Promise解决异步问题的实例：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102const initUserInfo = (that) =&gt; &#123; wx.login(&#123; success: res =&gt; &#123; if(res.code) &#123; console.log('获取用户登录凭证：', res.code); post(&#123; 'msgType': 'wxAuth', "code": res.code &#125;).then(res =&gt; &#123; console.log("收到消息：", res); getApp().data.openId = res; return post(&#123; 'msgType': 'checkIsTeachAuth', 'openId': getApp().data.openId &#125;) &#125;).then(res =&gt; &#123; console.log("收到消息：", res); if (res.isTeachAuth == true) &#123; getApp().data.isTeachmodeGlobal = 2; getApp().data.teacherRealName = res.realName; getApp().data.teacherAuthId = res.teacherId; getApp().data.teachAuthStatus = res.status; that.setData(&#123; isTeachMode: 2 &#125;) return post(&#123; 'msgType': 'getClassDataTeach', 'openId': getApp().data.openId &#125;) &#125; else &#123; getApp().data.isTeachmodeGlobal = 1; getApp().data.teachAuthStatus = res.status; that.setData(&#123; isTeachMode: 1 &#125;) return post(&#123; 'msgType': 'getReservedClass', 'openId': getApp().data.openId &#125;) &#125; &#125;).then(res =&gt; &#123; console.log("收到消息：", res); if (getApp().data.isTeachmodeGlobal == 1)&#123; that.setData(&#123; reserveArray: format.timeFormat(res).reverse(), emptyNote: '', emptyIntro: '', emptyUserName: true &#125;) if (res[0] == null) &#123; that.setData(&#123; emptyNote: welcomeQuote, emptyIntro: userWelcomeIntro, emptyUserName: false &#125;) &#125; wx.stopPullDownRefresh(); &#125; else &#123; that.setData(&#123; classArray: format.timeFormat(res).reverse(), emptyNote: '', emptyIntro: '', emptyUserName: true &#125;) if (res[0] == null) &#123; that.setData(&#123; emptyNote: getApp().data.teacherRealName + " 欢迎！", emptyIntro: teacherWelcomeIntro, emptyUserName: false &#125;) &#125; wx.stopPullDownRefresh(); &#125; &#125;).catch(error =&gt; &#123; console.log('发生错误：', error); &#125;) &#125; else &#123; console.log('获取用户登录态失败：', res.errMsg); &#125; &#125; &#125;)&#125; 是不是超长无比。。。再联想一下刚才我演示的回调地狱，用回调不知道要套多少层了。。。而且一个post函数可以反复使用，因为其传入的参数只有一个obj，就是发送到后端的json数据包，除此之外其他的操作都可以快速的复用，并且从后端返回的数据结果也可以由Promise传到下一个.then函数中。 除了post之外，我也仿造了信道通信方式，搞了一个emit函数。信道通信方式其实更加地先进，它是将所有的信道监听函数在初始化页面的时候就规定好了，也就是说把所有接收到后端数据之后的success操作都先写好了，之后再到需要向后端服务器发送数据的地方调用emit函数，这样也更加地灵活，发送数据时只管输入数据的格式和内容就OK了。 但是，本项目基本上除了用户在初始化数据或表单时需要将后端返回的数据进行存储和展示操作外，其他的通信操作基本上属于更新数据的范畴，也就是后端返回数据更新成功的结果后，只需调用一下数据刷新函数让服务器将更新好的数据回传即可。既然emit函数的功能如此确定，我也就直接将它封装好了，当然也得用用Promise了，既然都写好了，再多写个回调版本的函数就浪费了： 12345678910111213141516171819202122const emit = (obj,that) =&gt; &#123; post(obj).then(res =&gt; &#123; console.log('收到消息：', res); if (getApp().data.isTeachModeGlobal == 2) getApp().data.isTeachDataUpdated = true; else getApp().data.isStuDataUpdated = true; if (obj.msgType == 'reserveClass' || obj.msgType == 'editClass' || obj.msgType == 'classDataUpload') &#123; wx.showToast(&#123; icon: 'success', title: '数据上传成功', duration: 3000 &#125;) &#125; wx.startPullDownRefresh(&#123; success: that.onPullDownRefresh &#125;) &#125;).catch(error =&gt; &#123; console.log('发生错误：', error); &#125;)&#125; emit函数实际用起来也就是这样的，多传了一个this指针而已：123456req.emit(&#123; 'msgType': 'reserveClass', 'openId': getApp().data.openId, 'nickName': wx.getStorageSync('nickName'), 'classId': e.currentTarget.dataset.content.id&#125;,this); 既然后端MySQL通信模块也要Promise封装，那么肯定也是要先定义一个用Promise封装的函数12345678910111213static queryProm(sql, params) &#123; return new Promise((resolve, reject) =&gt; &#123; pool.getConnection((error,connection) =&gt; &#123; if(error) &#123; reject(error); throw error; &#125; connection.query(sql, params, (error, results, fields) =&gt; &#123; if(results) &#123; resolve(results); connection.release(); &#125; &#125;) &#125;) &#125;)&#125; 当然，我后来也发现其实大部分的操作其实都只需要一步回调就能解决问题了，所以我也写了一个回调版本的1234567891011static query(sql, params, callback) &#123; pool.getConnection((error,connection) =&gt; &#123; connection.query(sql, params, (error, results, fields) =&gt; &#123; if (error) throw error; if (results) &#123; callback(error, results); connection.release(); &#125; &#125;) &#125;) &#125; 然后这里也有一个比较模棱两可的经验，就是前端传到后端的json数据包内定义了msgType，可以在传入后端的地址是同一个时，根据msgType消息的类型进行不同的操作。具体操作在后端是怎样分类的，我这里用了比较原始的switch-case语句，但是说实话，这样会造成代码整体的可读性下降。因为消息类型一多，全挤在一层switch里面了，修改和查找都相当困难，这也是我需要改进的地方——代码的合理化、层次化和结构化。 最后用Promise的效果就是这样的（这个就是之前在项目第一版中用async写过的那个操作）：12345678910111213141516171819202122case 'reserveClass': sql.queryProm("SELECT * FROM user_reserve WHERE class_id=? AND user_id=?", [req.query.classId, req.query.openId] ).then(response =&gt; &#123; if(response[0] == null) return sql.queryProm( "INSERT INTO user_reserve (user_id,user_nickname,class_id,submission_date) VALUES(?,?,?,NOW())", [req.query.openId, req.query.nickName, req.query.classId] ); else return sql.queryProm( "UPDATE user_reserve SET status=1 WHERE class_id=? AND user_id=?", [req.query.classId, req.query.openId] ); &#125;).then(response =&gt; &#123; res.send(&#123;results: response&#125;); &#125;).catch(err =&gt; &#123; res.send(&#123;error: err&#125;); &#125;); //不要啥都写res，想啥呢 break; 这个“想啥呢”的注释是这样的，Express框架本身有一个回传数据功能的对象参数叫res，然后我写函数也习惯把数据本身叫res，这下好了，相当于我用回传的数据去调用他的成员函数send()，这一个数据哪儿来的send()函数啊？当然前端就没有收到任何回传的数据了。我纳闷了很久怎么Promise好好的就不能用了呢，最后登了服务器上去翻了翻log才发现问题，这也充分说明log在debug中的极端重要性。 当然用回调的效果是这样的： 12345678case 'cancelReserve': sql.query("UPDATE user_reserve SET status=0 WHERE class_id=? AND user_id=?",[req.query.classId, req.query.openId], (error, results) =&gt; &#123; if(error) res.send(&#123;error: error&#125;); else res.send(&#123;results: results&#125;); &#125;); break; 那么既然也在服务器后端弃用了信道通信所在的腾讯云SDK，我也采用了Express原生的路由方式来将请求定位到以上MySQL通信模块所在的文件上。 最终效果 别看我，我就是凑个小节数的，要不然就一个笔记太尴尬了。。。 本次版本迭代，通过添加用户授权登录界面、从底层用原生请求方式重写前端通信模块和后端MySQL通信模块，并使用Promise进行异步编程封装，基本上修复了信道通信因登录API调整而无法使用，导致整个程序无法正常运行的bug。 项目第三版 小程序第三版主界面，更多预览请直接打开小程序或阅读本文后续内容 项目第三版的迭代原因是需求方提议加入普通学生用户端也能够发起一对一辅导预约，然后讲师能够对此进行接单的“辅导预约”功能。我们开发方也趁着本次迭代的机会，对小程序的前端界面UI进行了大范围的重写，从而能够彻底弃用原先大范围采用腾讯云一站式小程序解决方案小程序demo的配色和界面元素的旧UI。 在此特别感谢Jason Gao同学以及他的“有通知”小程序对本项目UI重写提供的设计参考和技术支持！ 在新UI的开发过程中的技术难点在于： 取消了微信小程序的顶部、底部菜单栏后，小程序界面对于不同尺寸以及刘海屏手机的适配； 取消了底部菜单栏后，自行开发的底部菜单栏的路由结构问题； 取消了顶部菜单栏后，下拉刷新、返回导航、页面标题等顶部菜单栏功能不再实用的情况下的自主开发。 tab标签式导航栏的实现 同时，我们也修复了众多之前两个版本未发现的、以及在本版本开发过程中遇到的逻辑功能上的bug，例如： 预约时间相对于当前时间已经过期的未采取过期处理； 未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况； 对于人数上限、备注等留空项目的前端数据处理不当； iOS系统下“我的页面”用户头像被背景图案覆盖的问题； 还有其他的一些细节小bug； 开发难点及笔记在谈UI开发之前，我首先得回答这个问题：为什么要隐藏顶部菜单栏以及底部菜单栏呢？ 理由有两个： 功能上的需要：主要是微信小程序自带的底部菜单栏定制性奇差，必须得每一个菜单项对应的路径、图标、颜色、文字，乃至菜单项的数量，全部都在app.json里写死了，而且样式清一色都是死板的文字/图标/文字+图标，无法进行更高级别的个性化定制。就像本项目这样加一个高度明显超出菜单栏本身的大大的加号按钮，或者加一点其他的特殊样式，用微信小程序自带的底部菜单栏都是无法实现的。同理，微信小程序自带的顶部菜单栏同样也无法像本项目这样放置一个可点击的刷新按钮。 设计上的需要：从本文中的小程序界面效果图可以看出，这种底色完全一致的、通透的视觉效果，明显区别于直接采用微信小程序自带方案的其他大多数小程序的界面，是十分夺人眼球的设计（虽然直接采用微信小程序自带方案也可以做得相当美观）。 UI难点之一：屏幕尺寸适配微信小程序事实上就是一种webview套壳应用的变体，这个是众所周知的事情了。所以不难联想到当使用微信小程序自带的顶部菜单栏时，小程序的wxml界面自上而下渲染的起点，应当是在顶部菜单栏的下方的，就像一般的带标题栏的安卓webview页面，都是顶部的元素帮助撑起了手机系统顶部的状态栏以及顶部的菜单栏在内的一个相当大的高度。如果隐藏了顶部菜单栏的话，就会出现wxml界面直接从状态栏下方开始渲染的情况，而且一般状态栏都是最顶层的，也就是说状态栏会遮挡一部分wxml内容。。。大概像下面这样： 在iPhone X上有刘海的话就更加尴尬了。。。 所以需要的就是将这一部分的位置空出来，尤其是对iPhone X的刘海要额外进行适配（后来在开发者工具中的测试我们也发现了iPhone 4/iPhone 5这一类小尺寸屏幕的手机也需要额外适配）。所以我们的思路就是动态定义包裹所有其他元素的&lt;view class=&quot;root&quot;&gt;的padding-topwxss属性。尽管wxss无法使用JS进行动态更改，wxml还是能用JS进行动态更改的。所以就想出了动态定义class属性的内容就OK了，代码如下——wxml代码：123&lt;view class="root &#123;&#123;isIpx?'root-ipx':''&#125;&#125; &#123;&#123;isIp4?'root-ip4':''&#125;&#125;"&gt; &lt;!-- content --&gt;&lt;/view&gt; JS代码：12345678910111213141516var that = this;wx.getSystemInfo(&#123; success: function(res) &#123; if(res.model == 'iPhone X')&#123; getApp().data.isIpx = true; that.setData(&#123; isIpx: getApp().data.isIpx &#125;) &#125; else if(res.model == 'iPhone 5' || res.model == 'iPhone 4')&#123; getApp().data.isIp4 = true; that.setData(&#123; isIp4: getApp().data.isIp4 &#125;) &#125; &#125;,&#125;) wxss代码：1234567.root-ip4 &#123; padding-top: 30rpx; &#125;.root-ipx &#123; padding-top: 60rpx; &#125; 但是在之后的测试中发现，一旦预约课程的表单变长，可以滚动起来了以后，状态栏底下会出现本来应该被遮罩了的表单。。这是因为padding-top只是把顶部元素下移了，状态栏本身是透明的，所以肯定无法遮罩滚动到顶部的表单。解决方法和上面是一样的，自己再定义一个&lt;view&gt;元素，用来遮挡状态栏底部的其他元素就OK了，同样要对特殊尺寸的屏幕做适配，此处就不再赘述了。 UI难点之二：自行开发的底部菜单栏的路由结构为什么要如此强调路由结构呢？因为你需要知道你当前用底部菜单栏打开的页面是哪一个。否则底部菜单栏如何将当前打开页面对应的按钮进行高亮或者其他处理，来对用户形成一种辅助的标识呢？我们在这里使用了一个相当讨巧的办法来解决这个问题： 我们并不删除底部菜单栏在app.json中的代码使之彻底消失，只是通过微信小程序API函数wx.hideTabBar对其进行隐藏，这样其基本的路由结构依然存在，无需另外写一个公共的路由代码。页面跳转可以使用wx.switchTab。然后由于自定义的底部菜单栏是重复出现在页面上的，准确来说应该是首页和“我的”页面上，所以我们采用了微信小程序的模板类型元素&lt;template&gt;来进行代码的复用：wxml代码的写法是：12345678910111213141516171819&lt;template name="tabbar"&gt; &lt;view class="tabbar-wrap"&gt; &lt;view class="tabbar-index" bindtap="tabbarRoute" data-index="0"&gt; &lt;image src="&#123;&#123;indexActive?'/images/index-hl.png':'/images/index.png'&#125;&#125;"&gt;&lt;/image&gt; &lt;view style="color: &#123;&#123;indexActive?'#17abe3':'#bfbfbf'&#125;&#125;"&gt; 首页 &lt;/view&gt; &lt;/view&gt; &lt;view class="tabbar-reserve"&gt; &lt;image src="/images/new-hl.png" bindtap="tabbarRoute" data-index="1" &gt;&lt;/image&gt; &lt;/view&gt; &lt;view class="tabbar-user" bindtap="tabbarRoute" data-index="2"&gt; &lt;image src="&#123;&#123;userpageActive?'/images/user-hl.png':'/images/user.png'&#125;&#125;"&gt;&lt;/image&gt; &lt;view style="color: &#123;&#123;userpageActive?'#17abe3':'#bfbfbf'&#125;&#125;"&gt; 我的 &lt;/view&gt; &lt;/view&gt; &lt;/view&gt;&lt;/template&gt; 在对应的页面中引用的方法也很简单123&lt;import src="/template/tabbar" /&gt; &lt;!-- content --&gt;&lt;template is="tabbar" data="&#123;&#123;...tabStatus&#125;&#125;"&gt;&lt;/template&gt; 其中，三点运算符表示传进tabStatus的全部子成员（这个tabStatus有两个成员：indexActive和userpageActive），也就意味着上面代码块里的&lt;template&gt;中的所有indexActive和userpageActive不用再写成tabStatus.indexActive和tabStatus.userpageActive了，很方便吧，这可是ES6的特性哦！wxss的代码也贴一下，这样也可以直接套用样式：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647.tabbar-wrap &#123; display: flex; flex-direction: row; justify-content: space-around; width: 100%; position: fixed; height: 90rpx; bottom: 0; padding-top: 20rpx; padding-bottom: 35rpx; border-top: .5px solid #cccccc; background-color: rgba(256,256,256,0.9);&#125;.tabbar-wrap view &#123; width: 30%; display: flex; flex-direction: column; justify-content: space-around;&#125;.tabbar-wrap .tabbar-reserve &#123; position:fixed; bottom:30rpx;&#125;.tabbar-wrap view image &#123; width: 60rpx; height: 60rpx; margin: 0 auto;&#125;.tabbar-wrap .tabbar-reserve image&#123; width: 115rpx; height: 115rpx; margin-bottom: 20rpx; background-color: #fff; border-radius: 50%;&#125;.tabbar-wrap view view &#123; font-size: 25rpx; width: 100%; text-align: center; margin-top: 1rpx; font-weight: bold;&#125; 以上操作的教程来源是这里。 UI难点之三：重写返回导航、页面标题和刷新组件既然隐藏了顶部菜单栏，可以说也相当于在打开新页面时也失去了微信小程序自动生成的标题和返回按钮，然后下拉刷新也别扭了很多（尤其是在iPhone X上，你下拉刷新的时候根本看不到那个刷新动画。。。），这就意味着以上功能全部都得自主开发。 我的解决方案也异常简单，返回导航直接使用微信小程序的API函数wx.navigateBack，刷新也不过是在图标上绑定钩子函数，这里的主要难点在于刷新动画的协调性。具体怎么说呢？wxss本质上就是CSS，刷新动画的一般实现都是一个圆形刷新图标的旋转，而这个旋转一般都是CSS的效果。但是若像本项目一样使用带箭头的圆环，则会出现一个很尴尬的情况：当你正在“加载数据”这一状态时，圆环是不停旋转的，而当“数据加载结束”时，圆环需要处于一个静止的状态。若将静止状态设置为一个固定的图片，例如说刷新图标的箭头处于图标的正12点方向，则你会发现，”加载数据”这一状态结束时，箭头并不一定处于正12点，而在切换到“数据加载结束”这一状态时，箭头突然就跳到了正12点方向。 可以先看看“有通知”小程序的刷新动画实现方法，基本上就是点击刷新后固定地转一圈，这样既避免了上述尴尬的情况，也可以让用户体验到类似于“转了一圈就加载了”的“快速加载”的观感。 那么我们是如何实现的呢？可以说是一次很成功的尝试吧：让“数据加载结束”这一静止状态不再是一张固定的图片，而是在下一次加载时箭头直接从之前停下的方向继续开始转动！这样给用户的体验就不再是十分突兀的，反而有一种很自然自然的流畅感和美感。 实现方法也很简单，设定好不同状态下的CSS属性即可，只不过需要JS在与后端通信的加载过程中向wxml里刷新图标的style=&quot;&quot;传入不同的变量，以启用或关闭不同的动画。 12345678910111213141516171819202122232425262728.line .title-wrap .refresh-button &#123; font-size: 45rpx !important; line-height: 90rpx; padding-left: 10rpx; padding-top: 15rpx; color: #6d6d72; animation: spin 800ms infinite linear; animation-play-state: paused;&#125;.line .title-wrap .refresh-button.active &#123; animation-play-state: running;&#125;@keyframes spin &#123; 0% &#123; transform: rotate(360deg); transform-origin: 60% 55%; -webkit-transform: rotate(360deg); -webkit-transform-origin: 60% 55%; &#125; 100% &#123; transform: rotate(0deg); transform-origin: 60% 55%; -webkit-transform: rotate(0deg); -webkit-transform-origin: 60% 55%; &#125;&#125; 可以看到这个animation-play-state相当关键，就是这一属性支持了我们的刷新开始和结束的自然切换。 哦对了，貌似还有页面标题没讲，这个其实就是自己添加标题写在相应的位置，如果需要动态标题则往wxml中添加变量。注意给返回、刷新之类的按钮留好位置即可。 UI难点之四：tab标签式导航栏的实现这个说实话网络上教程相当多，但是这里仍然有一些亮点，例如在高亮标签下的“下划线”。这并不是简单的用CSS的下划线属性实现的，而是使用了CSS的伪类概念。说实话，在后来其他项目的开发过程中，我才真正开始理解并有意识地使用起了伪类，给某一页面元素的正上方或正下方添加一些附属元素。 1234567891011121314&lt;view class="navbar"&gt; &lt;!-- tabbar标签式导航栏 --&gt; &lt;text wx:for="&#123;&#123;navArrayStu&#125;&#125;" data-index="&#123;&#123;index&#125;&#125;" class="item &#123;&#123;currentNavTab==index?'active':''&#125;&#125;" wx:key="unique" bindtap="bindNavbarTap"&gt; &#123;&#123;item&#125;&#125; &lt;/text&gt;&lt;/view&gt;&lt;block wx:if="&#123;&#123;currentNavTab==0&#125;&#125;"&gt; &lt;!-- 当currentNavTab==0时显示这里的内容 --&gt;&lt;/block&gt;&lt;block wx:if="&#123;&#123;currentNavTab==1&#125;&#125;"&gt; &lt;!-- 当currentNavTab==1时显示这里的内容 --&gt;&lt;/block&gt; 12345bindNavbarTap(e) &#123; this.setData(&#123; currentNavTab: e.currentTarget.dataset.index &#125;)&#125;, 123456789101112131415161718192021222324.navbar .item &#123; position: relative; text-align: center; line-height: 30rpx; font-size: 40rpx; font-weight: lighter;&#125;.navbar .item.active &#123; font-weight: bolder;&#125;/* 伪类的使用 */.navbar .item.active::after &#123; content: ""; display: block; position: absolute; bottom: -20rpx; left: 0; right: 0; height: 5rpx; background: #6d6d72;&#125; BUG解决之一：预约时间相对于当前时间已经过期的未采取过期处理过期处理说实话确实是个败笔，因为这个东西本来应该是后端完成的东西，我却非常不厚道的在小程序里面加入了这个功能（不是在批评某些“大前端”思想，但是这个确实后端来做会更好一点，毕竟数据量一大还不如后端处理好了再发给前端，某些过期数据的体积也可以适当压缩一下，况且我到现在都还没做分页，感觉药丸。。。）。而且这个过期处理确实挺重要的，在这种预约类小程序里面，所以我也在寻找更好的解决方案，希望（如果有坚持读到这里的）大佬能够联系我提供一些建议，不胜感激！ 我的想法是一拿到数据就交给某个工具函数去处理数据，处理完之后再返回数据。这里我直接把过期处理添加到了时间处理函数里面，具体工具函数如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859var curDate= utils.formatTime(new Date());var curDateFull = new Date();const timeFormat = (str, contentType) =&gt; &#123; for (var i = 0; i &lt; str.length; i++) &#123; if (contentType == 'class') &#123; var start = str[i].class_timestart; var end = str[i].class_timend; var date = new Date(str[i].class_date.slice(0, 10)); var itemDate = str[i].class_date; &#125; else if (contentType == 'course') &#123; var start = str[i].course_timestart; var end = str[i].course_timend; var date = new Date(str[i].course_date.slice(0, 10)); var itemDate = str[i].course_date; &#125; var curTime = curDateFull.toLocaleString('chinese', &#123; hour12: false &#125;).slice(10, 18).replace(/:/g, ""); var itemTime = start.replace(/:/g, ""); // 过期处理在这儿⬇️ // 如果该记录的日期本身就小于当前的日期，一定过期 // 如果该记录的日期与当前日期相同，但时间比当前时间要早，也一定过期 if((itemDate &lt; curDate) || ((itemDate == curDate) &amp;&amp; (curTime &gt; itemTime)) )&#123; str[i].overtime = 1; &#125; else &#123; str[i].overtime = 0; &#125; date = date.getFullYear() + "年" + (parseInt(date.getMonth()) + 1).toString() + "月" + date.getDate() + "日"; start = start.slice(0, 5) if (start.slice(0, 1) == "0") &#123; start = start.slice(1, 5) &#125; end = end.slice(0, 5) if (end.slice(0, 1) == "0") &#123; end = end.slice(1, 5) &#125; if (contentType == 'class') &#123; str[i].class_date = date; str[i].class_timestart = start; str[i].class_timend = end &#125; else if (contentType == 'course') &#123; str[i].course_date = date; str[i].course_timestart = start; str[i].course_timend = end &#125; &#125; console.log("时间处理后：", str); return str;&#125; BUG解决之二：未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况“辅导预约”这个功能事实上也就是用户“课程预约”功能的一个翻转：讲师自由发布课程，多个用户预约一个讲师的课程，人数上限可以有也可以不设置。反之，用户自由发布辅导需求，多个讲师预约一个用户的课程，但是是一对一的课程，所以人数上限其实是1。但我这里没有再使用人数上限的功能了，而是采用了一个很清奇的绑定思路：多表左联合查询。 这个说实话也是个败笔😂（没错，包括上面那个在内，你在本文看到的所有bug解决的思路，都是些让你觉得很滑稽的解决方式，因为我当时是真的没办法快速找到一些最佳实践的。。。）正常情况下的思路应该是要去维护一个新的数据库字段，就是“是否已经有讲师预约”这样的一个标志字段。但是我这里的处理思路就很清奇，既然已经被讲师预约了的话，那是不是可以让用户的预约数据库表和讲师的接单数据库表进行一个左联合查询，然后如果某个字段联合查询后查询不到讲师的信息（例如昵称nickname之类的）就可以认为是未被讲师接单呢？反之是不是就可以被认为是已经被接单呢？这个清奇的思路事实上是很差劲的，因为这个涉及到一个查询效率的问题，联合查询总的来说肯定要比单表查询要慢很多，数据一多肯定影响性能，而且这样返回前台数据不可避免地泄露了讲师的信息。 当然，还是那句老话，安全起见，后端数据库表结构以及相应的SQL查询语句我是不可能公开的。所以这里就只有描述，没有代码了。 BUG解决之三：对于人数上限、备注等留空项目的前端数据处理不当这是个相当玄学的问题，什么叫“处理不当”呢？这涉及到用户体验与数据库管理之间的矛盾。用户当然希望这样的功能实现：在填写的时候，“人数上限”一栏留空，就代表人数上限为无上限，填入数字再表示有一个确定的上限，“备注”留空，就代表没有备注，填入备注就代表有一段备注。但是数据库管理的时候，一个字段的格式一般是固定的，我不可能为了存储“无上限”这一信息就让一个人数上限的字段同时支持整型数和字符或者别的什么，所以我只能无奈地让数字0代表无上限。同时，备注也可以存储为一个“NULL”来代表无备注。但是问题来了，当上传到后端时，前端至少需要对数据做一个预处理：把人数上限从undefined改成0，把备注从undefined改成NULL。我当时就考虑到这里，但是后来才发现：等等，那后端返回到前端呢？不是也得再经历一次相反的转换吗？ 大概就是这样一个逻辑：123456789101112131415161718192021if (classItem.student_limit == '0') &#123; this.setData(&#123; studentLimit: '无上限' &#125;)&#125; else &#123; this.setData(&#123; studentLimit: classItem.student_limit &#125;)&#125;if (classItem.student_sum == null) &#123; this.setData(&#123; studentSum: '0' &#125;)&#125; else &#123; this.setData(&#123; studentSum: classItem.student_sum &#125;)&#125;if (classItem.class_intro == "undefined") &#123; classItem.class_intro = "无";&#125; BUG解决之四：iOS系统下“我的页面”用户头像被背景图案覆盖的问题这个确实是个意想不到的BUG，在正式上线之后才发现Safari浏览器的渲染引擎存在着这样的bug：当一个具有transform的CSS属性的元素作为背景，而另外一个图片元素在其上方时，将不能够通过z-index属性来控制它们的层级关系。 之后的解决方案是从网上搜索得出的“以毒攻毒”法。是的，你没有看错，这个方法就是用transform来解决transform带来的问题的。 12345678910111213141516171819202122.avatar-img&#123; width: 140rpx; height: 140rpx; margin:50rpx auto 30rpx; background-color: #bfbfbf; border-radius: 50%; z-index: 99; border: 2px solid #fff; transform: translateZ(100rpx) /* 这个就是解决办法，“以毒攻毒”，简单粗暴 */&#125;.colored-top &#123; position: fixed; top: 0; left: -35rpx; width: 300%; background-color: #17abe3; height: 40%; z-index: 0; transform: rotate(8deg);&#125; 其他小BUG这里将会根据项目当前进度，及时更新一些其他的小BUG以及处理方式，也就相当于一些后续了~ 小程序最终界面 小程序第三版主界面 用户课程预约界面 用户辅导预约界面 讲师辅导接单界面 讲师辅导接单界面 讲师发布课程界面 “我的”界面 “关于”界面 结语 先。。。先容我吐槽一下吧。讲了挺多的，确实，一看发现上千行了😂（至少在markdown里面是这样，1.3k），我打算以后有机会的话拆成两篇文章发布。写的时间跨度一个月吧，因为各种事情，写写停停，甚至在某几次提笔重新开始继续写下去的时候，都发现自己都不知道之前到底写了什么，现在该写什么，写的初心是什么。都快被各种事情给搞忘了。所以说，要想系统性的总结一个东西，很难。况且我这个小程序至少前端代码是必须要放到GitHub上去的，要想再系统性地整理并分享一个东西，更难。 首要的，我还是非常感谢明导和郑导、感谢搭档王云程同学（@fafnir）、感谢提供过帮助过的高亦非同学（Jason Gao）以及感谢计通学院学生讲师团，给予了我这次项目实战的宝贵机会。如果没有这次实战机会的话，估计我也很难得出如此系统的经验，并写出内容如此（冗长而）丰富的文章了吧。这是一次从零开始、至少是从需求开始的一次系统性的开发，虽然过程不免因为个人水平仍处于成长期、个人其他事务的干扰等各种原因有着种种波折起伏，但是所有的过程都是在从宏观到微观、从代码开发到客户沟通再到界面设计，几乎是全方位地锻炼我的各种能力。 所以，再次感谢在开发过程中给予了我各种帮助和指导的所有人，谢谢大家！ 最后，这是本站的第七篇正式发文，感谢阅读。如有意见和建议，欢迎通过首页的联系方式联系作者。本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。]]></content>
      <tags>
        <tag>experience</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Environment Configuration for Yolo-darknet]]></title>
    <url>%2F2018%2F02%2F20%2FEnvironment-Configuration-for-Yolo-darknet%2F</url>
    <content type="text"><![CDATA[Just do it.Just do something new and do it yourself. 记录一些关于yolo-darknet环境配置踩过的坑。能力有限，但求指点，欢迎交流。 搭建环境 OS: Ubuntu 16.04 LTS PC: ASUS K550J (EFI enable) GPU: GTX950M CPU: i5-4200H RAM: 4G DISK: 1T HDD (no SSD) 配置过程安装Ubuntu 用UltraISO把iso文件烧到你的U盘，进BIOS打开EFI引导，并选择EFI模式下的U盘为第一引导项 安装Ubuntu到一个空白分区（可以通过分区压缩获得，如果是全新电脑就直接开始分区了）： 注意根据提示划分那块bios efi的小分区，几十K即可； 划分swap交换分区，一般是你内存大小的3倍大，划在主分区后面； 剩下的划给主分区； 选择安装启动器到Windows使用的那个EFI启动分区。 进入分区界面前有几个选项要注意： 让你顺带安装更新的那个，不要勾选，更新的源大多自动匹配到了国外的，网速你懂的； 让你安装第三方闭源驱动和软件的，必须勾选，能解决很多开源驱动带来的问题。 安装，然后回到BIOS里面你会惊奇的发现出现了Ubuntu的EFI模式引导项（准确来说是两个，估计是那次我多搞了一个/boot）选择它为第一个。 成功进入Ubuntu 安装OpenCV安装OpenCV主要是为了使用外置摄像头进行图像采集。 GitHub上有自动安装版本 12sudo su git clone https://github.com/jayrambhia/Install-OpenCV/tree/master/Ubuntu 进入安装目录下的/2.4，提升*.sh文件的权限并执行 123sudo suchmod a+x *.sh./opencv2_4_10.sh 然后就会开始极其漫长的安装过程。 第一次安装到某个阶段的时候卡死，硬盘灯不闪，鼠标键盘没反应，我还以为安装失败强行重启了。然后又开始一遍，又卡死。我绝望了，但是冷静了下来，想了想——怕是自己电脑配置太渣。然后在安装前关闭了所有无关程序，唯独打开了系统监视器（即Windows下的任务管理器）。之后就非常惊奇地看到卡死的时候：内存+CPU，全部占用100%然后过了大概一个多小时，又全部降回去了，没过三分钟，又是内存飙到100%，CPU反倒正常了目测过了三个多小时，还是这个样子，倒是命令行每隔十几分钟跳一次字，系统时钟已经卡到了和实际时间存在了十分钟到半小时不等的时差，只有某几次命令行跳字的时候，内存占用下来了一点，系统时间一秒刷新了十几分钟最后一脸无奈地睡了。第二天打开笔记本盖子一看，装好了，老大一个success。 安装darknet打开终端123sudo sugit clone http://github.com/pjreddie/darknet.gitcd darknet 用gedit修改makefile文件令OPENCV=1然后在终端输入 1make -j8 安装NVIDIA官方GPU驱动首先禁用开源驱动 新建一个.conf文件 1sudo gedit /etc/modprobe.d/blacklist-nouveau.conf 写入以下内容12345blacklist nouveaublacklist lbm-nouveauoptions nouveau modeset=0alias nouveau offalias lbm-nouveau off 保存，重启后再打开终端，输入1lsmod | grep nouveau 无输出即禁用成功 正式开始安装NVIDIA官方驱动了我这里选择的是直接到系统的“软件和更新”里的“附加驱动”选择安装NVIDIA的专有驱动（不要管他是否显示tested，安装就是了） 等待安装成功后，重启打开终端，输入1nvidia-smi 正确显示你当前GPU的状况就OK了 安装CUDACUDA下载地址：https://developer.nvidia.com/cuda-downloads选项顺序是Linux-x86_64-Ubuntu-16.04-deb(local)1点多G，然后找个下载速度快的地方下了它，推荐迅雷等下载工具，虽然并没有加速，但毕竟服务器在境外，浏览器没法断点续传，连接一断就得重新下载。 然后把下载好的文件包拷到“/home/用户名/”目录下，在终端里面输入（注意你的deb文件名不一定是这个，这个是旧版的了） 123sudo dpkg -i cuda-repo-ubuntu1404-7-5-local_7.5-18_amd64.debsudo apt-get update sudo apt-get install cuda 安装完成后输入（注意你的cuda文件夹不一定是这个7.5的，这个是旧版的了）12export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATHexport PATH=/usr/local/cuda-7.5/bin:$PATH 再次安装darknet再次用gedit打开makefile（注意你的cuda文件夹不一定是这个7.5的，这个是旧版的了）令开头GPU=1，同时令NVCC = /usr/local/cuda-7.5/bin/nvcc后保存退出然后在终端输入 1make -j8 测试darknet下载模型+测试模型到这儿下载*.weight格式的模型：http://pjreddie.com/darknet/yolo/ 终端切换到darknet的安装目录下示例命令如下：12./darknet detect cfg/yolo.cfg yolo.weight data/horses.jpg./darknet yolo test cfg/yolo-tiny.cfg yolo-tiny.weight 使用电脑/手机摄像头采集图像电脑摄像头：1./darknet detector demo cfg/voc.data cfg/tiny-yolo-voc.cfg weights/tiny-yolo-voc.weights 手机摄像头： 先在手机上安装好IP摄像头APP，配置好地址后，先用浏览器访问以确定视频源的路径(因此这里的地址是你配置并确定好视频源的地址)1./darknet detector demo data/coco.data yolo.cfg yolo.weights http://192.168.191.2:8080/video 参考资料 http://blog.csdn.net/samylee/article/details/51684856 http://blog.csdn.net/wjbwjbwjbwjb/article/details/52125475 http://blog.csdn.net/u014696921/article/details/65626751 http://blog.csdn.net/wuzuyu365/article/details/52469131 http://blog.csdn.net/zafir_410/article/details/73188228 http://blog.csdn.net/u013832707/article/details/53438574 https://www.cnblogs.com/jackchen-Net/p/7954138.html 最后，这是本站的第六篇正式发文，感谢阅读。如有意见和建议，欢迎通过首页的联系方式联系作者，本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。]]></content>
      <tags>
        <tag>experience</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Some Tips of Web Programming]]></title>
    <url>%2F2018%2F02%2F18%2FSome-Tips-of-Web-Programming%2F</url>
    <content type="text"><![CDATA[Why did you hate tips but not so now?‘Cause I don’t think it bad to become hateful. 作为一个新手，分享一些毫无技术含量的小技巧水平有限，如有错漏，多多包涵。 工具 · 关联性如果需要在线编辑服务器上的代码，你，或许有一百种方法把文件下载下来；或许有一百种方法把文件上传上去；或许有一百种方法让项目本地测试；或许有一百种方法让项目上线测试。 那么，作为一个（至少没我菜的）新手，如何做一些事情，让一些过程自动简化，哪怕只是那么一丁点呢？ 所以就到了让你使用的工具之间具有关联性的时候了。虽然我也没走版本控制、自动测试之类的正道（哭笑.jpg 好的好的，我知道了。以后会改的，以后会改的。。。 此处示例为：FileZila+Putty+VSCode+Chrome Dev Tool 在线编辑文件（自动上传下载） 将服务器上你需要在线编辑的文件格式的默认打开方式修改为VSCode（或其他你需要的编辑器） 重新打开你的FTP上传下载工具（例如FileZila），登录你的服务器，右键你想要编辑的文件，选择“编辑”（或其他的类似选项，试试便知） 此时你会发现，你的FTP工具自动使用你之前设定的编辑器，打开了这个文件。 你编辑了文件并按了保存。 你的FTP工具提醒你是否要上传该文件的最新版本（你甚至可以设置为无需提醒） 你点击了确定 完美 是不是不需要刻意下载和上传就完成了更改？原理就是FTP工具其实是将服务器上的文件存放在了一个临时文件夹中，供你设定好的编辑器打开它，与此同时，FTP工具顺带存下了文件在服务器上的地址当它发生了更改时，再询问你是否上传或者自动上传，自动按照之前保存的地址，回传并替换了它。 好处？能吃吗？……当，当然啦。 当你需要同时更改好几个不同位置的文件时： 你不需要记得哪些文件是之前改完传上去了的，哪些是还没改完的 你不需要记得这些乱糟糟的文件各自到底存放到了哪里 你只需要找到它，修改它，保存它。 一气呵成，和操作本地文件的逻辑高度一致了 在线备份项目（打包和下载） 使用Putty输入命令对项目文件进行zip打包或者数据导出 使用FileZila对打包好的文件批量下载 没了，你就备份好了呗（不放心的本地搭个环境再本地测试下有没有哪里不对的地方就是了 简单吗？简单。 但是大部分新手想备份下所有的东西，肯定会纠结这么一秒钟： “噢，我的SSH工具下载不了文件。” “唉，我的FTP工具下载文件夹的时间全花在打开路径上啦！” 用你的SSH工具打个包不就好了吗？ 所有人最初都有一个一无所知的时候。过去就好。 在线调试项目（开发者工具的应用）当你想测试一段JS（尤其是jQuery）代码的是否正确应用到相应元素、达到相应效果的时候当你想修改一下你Web项目的CSS属性同时想直接看到效果的时候当你想直接往在线的html页面内添加、修改代码并看到效果的时候当你想看到不同屏幕尺寸下、连续变化的窗口尺寸下响应式界面的变化是否符合预期的时候 开发者工具的重要性就凸显了，没错，按下那个你有些生疏的快捷键，打开它。 有时间多读读它的文档或教程——经过一些简单的配置，你不仅仅能够实时预览的你的更改，抓到看似平稳运行的表面下各种奇形怪状的bug，你甚至还能实时保存你的更改（例如Chrome Dev Tool的WorkSpace功能） 多了解各个选项卡的功能和含义，它们存在的背后都是一个又一个鲜活的需求：响应式页面、加载时间、性能优化、bug修复…… 出现错误和提示时别怕——它意味着你仍然有让你的项目继续优化的方向 低能预警：之后的就不大像Tips了……没错，我在强行凑字数（哭笑.jpg 知识 · 广谱性是的，我用了一个医药学的名词。只想说明：知识不仅仅在于积累的深度和广度而更在于应用的深度和广度 善于使用搜索引擎善于使用Ctrl+F 这段话永不过时。我举双手赞成。 但是，不能只局限于 这段代码好厉害Look, it works! 而是要多想一步： How does it work?Where does it work?How might it work better?Where might it work as well? 以及 Where and how can I find something good like this?Why not try something new? 广积粮。 方案 · 普适性当你还没有到达通过造轮子解决问题这种水平的时候，选择一个使用最广泛的解决方案是最直接、最经济、也是最恰当的。 选择的方案越小众、越特殊，在出现问题以及遇到疑惑时，你能够得到的帮助是越稀少的你的问题越专一，你能够获得对应解决方案的概率也是递减的而一个普适性的方案选择，不仅能够提升工作效率也能有益于你作为一个新手的学习 所以，当你还是一个新手的时候，选择一个普适性的解决方案是最佳的。 坑总会有的，但不是现在。避免踩坑，快速成长 最后，这是本站的第五篇正式发文，感谢阅读。如有意见和建议，欢迎通过首页的联系方式联系作者，本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。]]></content>
      <tags>
        <tag>experience</tag>
        <tag>understanding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Notes About Recent Projects 2]]></title>
    <url>%2F2018%2F02%2F17%2FNotes-About-Recent-Projects-2%2F</url>
    <content type="text"><![CDATA[Enter password here. Incorrect Password! No content to display! ]]></content>
      <tags>
        <tag>experience</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Notes About Recent Projects 1]]></title>
    <url>%2F2018%2F02%2F15%2FNotes-About-Recent-Projects-1%2F</url>
    <content type="text"><![CDATA[Enter password here. Incorrect Password! No content to display! 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]]></content>
      <tags>
        <tag>experience</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Understanding on HTML]]></title>
    <url>%2F2018%2F02%2F14%2FUnderstanding-on-HTML%2F</url>
    <content type="text"><![CDATA[Take something for example,which seems to be far more effctive at times. 讲一些对于HTML的理解，顺带讲讲CSS和JavaScript水平有限，如有偏颇，多多包涵。 框架 · 模板 · 控制HTML，全称是“超文本标记语言”百度百科CSS，全称是“层叠样式表”百度百科JavaScript，额……没有全称，不要在意这些细节。百度百科 首先，概念不可避。此处不是科普，而是经验谈，有需要的同学可以上百度百科先阅读一下~ 虽然正统的MVC框架其实是这样的，但是我仍然想套用它的概念，毕竟是比较经典的讲法，能够在一定程度上提高本文的逼格。（以及，能够被以后前来访问的大牛和我自己笑话一下。） 我这么菜，我也很无奈呀.jpg 框架——HTML Chrome开发者工具中显示的HTML代码 HTML代码是网页最根本的骨架，也是大部分网页呈现在浏览器上的最终形式之一。举个栗子，请打开你正在使用的任意一款浏览器，访问任意一个页面，然后打开浏览器自带的开发者工具（如果不知道如何打开，百度一下）。该开发者工具中的某一个选项卡（通常是第一个）中展示的正是该网站的HTML代码。大致结构一般如下： 123456789&lt;html&gt; ... &lt;head&gt; ... &lt;/head&gt; &lt;body&gt; ... &lt;/body&gt;&lt;/html&gt; 这些用尖括号和斜杠组成的HTML标签，是网页的框架，正如你阅读的书籍，在初始状态下是从上到下，自然地顺序排版的。被标签包裹着的文本内容、各种由诸如&lt;img&gt;、&lt;video&gt;等标签衍生出的图片、视频等多媒体内容，都在HTML这个框架之下，分布于整个网页的各自位置当中。看着十分理想，场面非常和谐。 但是，燃鹅，BUT…… 模板——CSS “这个对话框我想浮在页面最顶层，然后点完就消失，对，要有特效的那种！”“给我弄个像这个图纸这样的网页。什么？两个纵向栏，报纸都排版得出来，你写不出来？”“怎么都是黑漆漆一片的，文字和按钮要有颜色，有质感，有特效，这么丑会辣眼睛的啦！”“……哼！” 是的，你眼前的网页之所以不是一场灾难，一坨从左往右写，从上往下读的纯文本，正是因为除HTML代码之外，还有CSS代码，作为网页样式的模板，批量而精确地定义着每一个网页元素的各种属性。 是的，各种属性：长宽，距离，边框，形状，颜色，排版，显示，隐藏…… 12345678910111213.mod-class&#123; width: 10px; height: 20px; ...&#125;#special-item&#123; margin: 0 auto; padding: 8px; color: #000; background-color: transparent; ...&#125; 这样的css代码，作用于形如以下的html元素中 1234567&lt;div class="mod-class"&gt; ...&lt;/div&gt;...&lt;div id="special-item"&gt; ...&lt;/div&gt; 元素标签可以不仅仅是&lt;div&gt;，而只要class或id吻合，无论这个元素是什么，就会受到相应CSS语句的约束，就像一个放之四海而皆准的模板一样这就是CSS作为页面样式模板的力量。 而且，这不仅仅是静态的。现代的CSS版本，拥有着能够做出各种动态特效、多平台响应等一系列高级特性。 “那么CSS代码在哪里呢？我在开发者工具中找了半天没找到诶。” Chrome开发者工具中显示的CSS代码 一般在显示HTML代码的开发者工具界面的右侧。而这些CSS属性都是通过在HTML文件中引用.css格式的文件、或者直接插入&lt;style&gt;标签来实现的： 1234567891011121314//引入文件&lt;link href="./***.css" rel="stylesheet" type="text/css"/&gt;//引入文件&lt;style&gt; @import"mystyle.css"; &lt;/style&gt;//直接插入代码&lt;style&gt; .custom-class&#123; .... &#125;&lt;/style&gt;//直接在元素中插入代码&lt;div style="display: none"&gt; 但是，燃鹅，BUT…… 控制——JavaScript，以及更多 “网页不错, 我想弄个账户登录什么的。这样可以让用户有个性化的体验”“弄个banner挂幻灯片吧，自动播放的那种，现在网站主页不都这么做吗？”“听说小游戏挺火的，‘跳一跳’啥的，什么写的，难不成是flash？”“额……” 如果网页是纯HTML和CSS编写出来的话，同样是一场灾难： 无论何时，所有人都只能访问通过一模一样的网页 要创建新的网页，只能手工重新编写新的网页文件 无法提供用户输入的功能，更无法在浏览过程的前中后，对用户输出特定的反馈（内容的变化，事件的产生） …… 那么如果网页引入了我们熟悉的程序代码呢？ 不同的用户，访问具有不同内容的同一个网页，正如我们打开同一个APP，看不同的推荐一样 创建新的网页，正如安装新的程序一样，是一个自动的过程 每一次手指的触摸、鼠标的单击，程序的界面都会有相应的变化 …… 那么就需要一种、多种编程语言参与到网页乃至网站的编写过程中来了。JavaScript，这个带着Java名字，却和Java毫无关系的编程语言应运而生，担负了赋予网页灵魂的工作——控制网页的各类功能。 在你看着网页加载的时候，在你浏览网页的时候，在你按下网页上一个提交按钮的时候，在你点击屏幕跳一跳的时候（没错，微信小游戏的游戏逻辑也是JS写的） JavaScript都在你看不见的地方，静静地运行着。（它和HTML、CSS一样，被下载到浏览器，在浏览器提供的本地引擎中运行着，而不是服务器之类的远程平台）是的，它是货真价实的编程语言，让网页拥有程序一样的功能。 Chrome开发者工具中显示的可调试jQuery（JS的一个分支）代码的控制台 （一般在开发者工具显示HTML代码界面的下方，或者名为控制台的选项卡内） 与css一样，它也有引入文件和使用&lt;script&gt;标签直接插入代码的方式。 123456&lt;script type="text/javascript" src="***.js"&gt;&lt;/script&gt;//或者&lt;script&gt; var a = 0; ...&lt;/script&gt; 但是，燃鹅，BUT…… 好了好了，这里就不另开一小节讲了。 JS的优势正是所有浏览器都拥有的统一的JavaScript引擎，可以让JS一次编写，处处下载，均能兼容运行。但是它的劣势也就在于本地运行，占用了本地的资源，增大了客户端设备的负担，不能在网页加载之前对网页结构进行灵活的改变，（举个简单的栗子，如果要根据不同省份、地区、国家的访客的ip地址，提供大量的不同内容，对于网页的处理总不可能永远都是边加载边修改）。况且，JS并没有解决： 既然有了用户数据交互的渠道，那数据存在哪里？又从哪里取出？ 如何在部署了网站的服务器上设定好域名、访问权限等，并且能够自动地拒绝非法的请求 所以，需要： 一个能够在服务器端，根据客户端提交来的请求，在加载之前就能够将内容做一定处理的编程语言 一个能够规范地管理并与网页进行实时数据交换的数据库 一个能够有效管理服务器上传下载、ip域名映射、访问进程等事项的服务器管理程序 是的，这些服务器端的需求，与我们之前提到的浏览器端，也即客户端的需求相对。两者的对比就产生了网页开发中最重要的两大分类： 前端和后端 网页前端开发：HTML+CSS+JS网页后端开发：服务器管理+数据库管理+预处理控制（后端框架） 两者有着很多很有趣的矛盾统一性，例如： 网页前端开发因为需要跨浏览器甚至跨平台的兼容，因此使用的技术一般是统一的HTML+CSS+JS。 后端开发却相反，由于服务器本身平台的多样性（Linux或Windows）以及对其性能、规模等其他需求的多样性，导致后端采用的技术框架呈现百花齐放的姿态，例如WordPress采用的LAMP或LNMP，基于python的Django，基于Node.js的Express，基于Java的Spring等等，此处就不过多赘述了。 …… PS：不仅仅是网页开发分前端和后端，任意一个web项目，例如手机APP、桌面程序、微信小程序……都需要有前端后端的开发划分，以便于厘清项目结构和开发安排 总结：在跑题万里之后 （以及，能够被以后前来访问的大牛和我自己笑话一下。） 我这么菜，我也很无奈呀.jpg 我一直在思考自己为什么会跑题。最后发现答案就在上面这两句引用里面。是啊，我很菜。 我当前对于技术的理解，根本无法给予我把控这些庞杂概念的能力。说是讲自己对HTML的理解，但更多的是谈到了围绕HTML+CSS+JS的网页前端基础。虽然也没什么毛病，俗话说“不讲相关知识点的讲评，就是在耍流氓”。 但是我依然要写，毕竟只有写出来点什么，才能知道自己脑袋里面装的东西是有多么地可笑，才能放下自己那些绷在脸面上放不下的所谓自大和狂妄。正如高中时期孜孜不倦地在一切空白处记下的笔记，就算我记下之后不再去看它，至少在我记录的时候，知识在我的大脑中不断流转、不断处理，最终呈现在我的笔下，我的眼前。这个过程，不正是自我纠错、自我提高的过程吗？ 为自己而写，调动自己的思维，不要让大脑日渐沦为一台生锈的机器。 那么最后总结一下吧：HTML作为现代网页的基本骨架，只有在CSS、JavaScript乃至整个服务器后端的协同下，才能够正常地发挥现代网页的基本机能，以及为更多新鲜的需求、新颖的功能带来无限的开发潜能。 学习网页开发，最重要的不是一句两句语法，而是在动手和借鉴的过程中，从微观的角度，理解整个项目的运作逻辑，和技术背后的高明之处。（虽然我还是在需求导向型的歧途上越走越远，但是读得懂源码的程序员，才能开发出真正的好产品，这是不变的真理，迟早有一天我仍然会兜一个大圈子，回到这里的） 建议 · 福利其实上面已经写一些建议了。但是我还想另外开一个大节讲一讲。 建议不多，就是先不要想着自己搭一个什么牛逼的网站，先做一个简单的HTML+CSS+JS的小页面，理解清楚他们之间的作用机理，顺带踩一部分的坑。 之后或许你会停滞一段时间，因为说实话，其实在修改一些开源项目供你自己项目需求的时候，这些已经完全够用了，前辈写的足够优秀了，后端的东西你一旦配置好了就可以专心改界面了。 但是，会有一个时刻，你会发现只搞这些根本满足不了需求，或许是你自己看到了别人写的项目，或许是你突然要调用数据库做一个新的功能，或许是你发现项目提供的API根本没法用，要自己写一个。 不懂后端的前端，只可能是个巨坑。所以你从一个大坑（网页前端），纵身一跃，跳进了另一个大坑（网页后端）。之后再多跳几次，从网站到移动APP，从移动APP到桌面端，从软件到物联网硬件，然后，然后…… 然后，你就乖乖回前端啦！（并不） 福利？福利是不可能有的，这辈子都不可能有的。就是稍微推荐几个网站把读者带坑里去这样子 学习站点： FreeCodeCamp.cn：闯（shua）关（ti）式的前端编程教学网站（也是我真正开始接触前端编程的地方） w3school：可以当工具书用，有些知识点较老，但是不影响使用（百度HTML相关知识点，不出意外前几个就是它了） 萌码：又一个闯（shua）关（ti）式的编程练习平台（虽然没用过但是身边的同学在用） 练手推荐： GitHub：多看优秀项目的代码，并且多练习一些优秀项目的部署和使用，如果不知道找什么就去看排行榜上的项目。（CSDN同理） Student Developer Pack：使用学校提供的学生邮箱注册GitHub账号，可以领取Education Pack，内含免费一年DigitalOcean服务器和Namecheap域名。（踩坑提示：DO的服务器要使用VISA卡或者PayPal预交约合32元人民币才能开户，建议使用PayPal，一年后全价略坑，现已转bandwagon。服务器在境外，可以找教程kexueshangwang） WordPress：搜一个教程并对照着在服务器上搭建一个WordPress站点吧！本博客程序是Hexo，但我依然推荐WP，毕竟越著名的程序出问题时能够获得的帮助（教程）也就阅读。同时也有助于你理解LNMP/LAMP内部各个部分的联系和配置方法。如果肯花心思去美化、修改你的站点那就更好了。（WordPress是一个优秀的PHP项目，类似的还有论坛程序Discuz、PHPwind、Wecenter、Tipask，在修改它们的过程中你也可以理解PHP在站点中起到的作用，如果你还想尝试其他架构的例如Java或Python的，也可以去搜索并尝试部署到你的服务器上） 微信小程序：使用你当前掌握的前端、后端知识去开发微信小程序吧~ 工具下载： Baidu：是的，搜索引擎是知识的源泉，（貌似并不用下载），掌握好问题的描述方式，输入少量的、但足以描述整体的关键词，大部分的问题都能够找得到答案。 VS Code：近乎万能的代码编辑器，你值得拥有。 FileZila：好用的FTP上传下载工具，与服务器进行文件传输的首选。 Putty：SSH客户端，使用命令行远程操作你的服务器，顺带学习一下Linux命令的使用 LNMP：在你的服务器上快速配置LNMP环境，免除各种依赖冲突的烦恼 XAMPP：在你的服务器上快速配置LAMP环境，同样也支持在本地环境（Windows桌面端）配置，便于你站点的本地调试（本地调试后上传能避免很多不必要的麻烦） 最后，这是本站的第二篇正式发文，感谢阅读。如有意见和建议，欢迎通过首页的联系方式联系作者，本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。]]></content>
      <tags>
        <tag>experience</tag>
        <tag>understanding</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[First to NeXT]]></title>
    <url>%2F2018%2F02%2F14%2FFirst-to-NeXT%2F</url>
    <content type="text"><![CDATA[Maybe it is the first.But in my view, that may be the NeXT. 名字不重要，形式也不重要，重要的是内容。这里将会陆续发布一些技术工作的经验谈，然而仅仅是经验谈而已。 更多的都是需要读者自己去探索，这一方天地下，比我们的视野更远的地方。 12hexo new "First to NeXT"hexo d -g 这是本站第一篇正式发文，感谢阅读！]]></content>
      <tags>
        <tag>intro</tag>
      </tags>
  </entry>
</search>
