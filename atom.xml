<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NeXT</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lmy98129.github.io/"/>
  <updated>2018-11-28T15:38:42.000Z</updated>
  <id>http://lmy98129.github.io/</id>
  
  <author>
    <name>Mengyin Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Training Configuration for Yolo-darknet</title>
    <link href="http://lmy98129.github.io/2018/11/28/Training-Configuration-for-Yolo-darknet/"/>
    <id>http://lmy98129.github.io/2018/11/28/Training-Configuration-for-Yolo-darknet/</id>
    <published>2018-11-28T07:29:03.000Z</published>
    <updated>2018-11-28T15:38:42.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Everything’s coming up roses.</p></blockquote><p>续上次的笔记<br>分享yolo-darknet神经网络训练全过程的配置经验</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于本文中描述的yolo-darknet训练配置流程来源较多，而且训练配置时间为今年暑期，距离本文完稿时间较远，因此本文不可避免地会存在一定的失误和错漏。恳请发现问题的读者不吝赐教，通过首页的联系方式向作者提出宝贵意见。</p><h2 id="数据集的标注、修改"><a href="#数据集的标注、修改" class="headerlink" title="数据集的标注、修改"></a>数据集的标注、修改</h2><p>数据集的采集来源以及采集方式属于项目内容，此处暂时不便叙述。对于采集得到的数据集，尤其是针对yolo-darknet的图片数据集，应当至少满足如下的要求：</p><ul><li>文件名称中不应当出现中文</li><li>多次采集得到的文件应当分开命名前缀，否则存在同名文件覆盖的问题</li><li>最好是同一种后缀格式，例如jpg格式。后缀大写JPG和小写jpg，darknet不会认为是同一种文件类型而报错。另外，png格式比较灵活，可以强行改成jpg后缀且内容仍可以读取</li></ul><p>本项目中除了采集了原始数据之外，也通过python脚本对图片素材进行翻转、随机颜色等基本变换来对数据集规模进行扩充。此为额外操作，不影响yolo-darknet训练过程。</p><p>数据集的标注采用的是基于python的ImageLabel，标注界面是可视化的，流程基本上是：</p><ul><li>设置你标注的物体对应的标签，例如dog，cat等，可以设置默认标签</li><li>打开素材文件夹到程序中，设置当前的标签，对图片进行逐个画框标注</li><li>标注后自动生成数个xml文件，xml文件的内容一般如下</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">annotation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">folder</span>&gt;</span>图片文件夹<span class="tag">&lt;/<span class="name">folder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filename</span>&gt;</span>图片名称<span class="tag">&lt;/<span class="name">filename</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span>&gt;</span>图片路径<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">database</span>&gt;</span>Unknown<span class="tag">&lt;/<span class="name">database</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">size</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">width</span>&gt;</span>600<span class="tag">&lt;/<span class="name">width</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">height</span>&gt;</span>338<span class="tag">&lt;/<span class="name">height</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">depth</span>&gt;</span>3<span class="tag">&lt;/<span class="name">depth</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">size</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">segmented</span>&gt;</span>0<span class="tag">&lt;/<span class="name">segmented</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>标签名字<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pose</span>&gt;</span>Unspecified<span class="tag">&lt;/<span class="name">pose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">truncated</span>&gt;</span>0<span class="tag">&lt;/<span class="name">truncated</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">difficult</span>&gt;</span>0<span class="tag">&lt;/<span class="name">difficult</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bndbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xmin</span>&gt;</span>291<span class="tag">&lt;/<span class="name">xmin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ymin</span>&gt;</span>76<span class="tag">&lt;/<span class="name">ymin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xmax</span>&gt;</span>412<span class="tag">&lt;/<span class="name">xmax</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ymax</span>&gt;</span>192<span class="tag">&lt;/<span class="name">ymax</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bndbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">annotation</span>&gt;</span></span><br></pre></td></tr></table></figure><p>基本上就是对于标注的方框的位置和大小的记录。标注生成的是整个VOC数据集文件夹，一般有两个文件夹：图片文件夹Image和标记文件夹xml。标记文件夹中每一个xml文件的文件名基本上都对应了的图片文件夹中的图片文件。</p><p>应当注意的是，一旦移动了xml文件夹或整个数据集文件夹，必须将所有xml文件中的图片文件夹、图片路径改成对应的新文件夹、新路径，否则必然报错。</p><p>但问题是，一旦数据集规模像本项目一样巨大时，人工逐个更改xml就十分困难。所以需要python脚本进行批量文件处理。此处摘录一部分代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>) </span><br><span class="line"></span><br><span class="line">path = <span class="string">"/home/blean/VOC/validateImage/"</span></span><br><span class="line">oldpath = <span class="string">"/home/blean/VOC/pos/"</span></span><br><span class="line">newpath = <span class="string">"/home/blean/VOC/Image/"</span></span><br><span class="line">filelist = os.listdir(path)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> files <span class="keyword">in</span> filelist:</span><br><span class="line">    <span class="keyword">if</span> os.path.splitext(files)[<span class="number">1</span>] != <span class="string">".jpg"</span> <span class="keyword">and</span> os.path.splitext(files)[<span class="number">1</span>] != <span class="string">".txt"</span>:</span><br><span class="line">        tmp = os.path.splitext(files)[<span class="number">0</span>]</span><br><span class="line">        os.rename(path+files, path+tmp+<span class="string">".jpg"</span>)</span><br><span class="line">        <span class="comment"># 强行将非jpg的后缀，例如JPG大写后缀或png后缀更改成jpg</span></span><br><span class="line">        <span class="keyword">print</span> path+files</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    tree = ET.parse(path+files)</span><br><span class="line">    root = tree.getroot()</span><br><span class="line">    filename = root.findall(<span class="string">'filename'</span>)[<span class="number">0</span>].text</span><br><span class="line">    tmp = os.path.splitext(filename)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># 寻找xml文件中对应的文件名</span></span><br><span class="line">    <span class="keyword">print</span> path+tmp+<span class="string">".xml"</span></span><br><span class="line">    os.rename(path+files, path+tmp+<span class="string">".xml"</span>)</span><br><span class="line">    <span class="comment"># 同样地将xml文件名改成后缀修改后的图片文件名</span></span><br><span class="line">    root.findall(<span class="string">'path'</span>)[<span class="number">0</span>].text = tmp.replace(oldpath, newpath)</span><br><span class="line">    <span class="comment"># 修改路径</span></span><br><span class="line">    tmp = root.findall(<span class="string">'filename'</span>)[<span class="number">0</span>].text</span><br><span class="line">    <span class="keyword">if</span> tmp.find(<span class="string">"捕获"</span>) != <span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">print</span> tmp</span><br><span class="line">        root.findall(<span class="string">'filename'</span>)[<span class="number">0</span>].text = tmp.replace(<span class="string">"捕获"</span>, <span class="string">"buhuo"</span>)</span><br><span class="line">        tree.write(path+files)</span><br><span class="line">    <span class="comment"># 修改某些中文文件名</span></span><br><span class="line">    root.findall(<span class="string">'folder'</span>)[<span class="number">0</span>].text = tmp.replace(<span class="string">"pos"</span>, <span class="string">"Image"</span>)</span><br><span class="line">    <span class="comment"># 修改图片文件夹名称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> i</span><br><span class="line"><span class="comment"># 打印总数</span></span><br></pre></td></tr></table></figure><p>注：以上代码是本人为了修正数据集格式自行编写的，具有很强的临时性，是不同功能的python代码之间的整合，如果不需要某些功能，可以将对应代码手动注释掉</p><h2 id="训练数据集和验证数据集的拆分"><a href="#训练数据集和验证数据集的拆分" class="headerlink" title="训练数据集和验证数据集的拆分"></a>训练数据集和验证数据集的拆分</h2><p>数据集应当分成训练集和验证集，以便于对训练效果进行评估。<br>这里作者直接参考了这篇CSDN上的文章<a href="https://blog.csdn.net/qq_34484472/article/details/73135354" target="_blank" rel="noopener">《YOLO训练自己的数据集》</a>中的python脚本，内容摘录如下：</p><p>&gt;<br>    下载链接：<a href="http://pan.baidu.com/s/1hs22I7U" target="_blank" rel="noopener">http://pan.baidu.com/s/1hs22I7U</a> 密码：wdv0<br>    运行traindata.py：生成trainImage文件夹，存放训练图片；生成trainImageXML文件夹，存放训练图片xml标签；生成validateImage文件夹，存放验证集图片；生成validateImageXML文件夹，存放验证集图片的xml标签。<br>    运行trans.py，生成trainImageLabelTxt文件夹，存放训练图片通过xml标签转化得到的txt文件（若在训练过程提示txt文件找不到，则把此文件夹下的txt文件夹移动到trainImage文件夹）；生成validateImageLabelTxt文件夹，道理一样。<br>    另外得到的trainImagePath.txt和validateImagePath.txt存放着训练图片和验证图片的路径。<br>&gt;</p><p>下载好的python脚本一般不能立即用，根据运行python脚本出现的报错，应当对其进行相应的修改，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">classes = [<span class="string">"cat"</span>] <span class="comment">#把这个标签改成你自己的数据集中标记的标签</span></span><br><span class="line"><span class="comment">#那个sets看起来很奇怪，但是不用改也能用。python研究的少，暂时不知道具体原因</span></span><br></pre></td></tr></table></figure><h2 id="对darknet的配置和更改"><a href="#对darknet的配置和更改" class="headerlink" title="对darknet的配置和更改"></a>对darknet的配置和更改</h2><p>darknet本身并非完全开箱即用的图像识别训练框架，因此需要对它进行有针对性的配置和必要的更改。此处同样是根据<a href="https://blog.csdn.net/qq_34484472/article/details/73135354" target="_blank" rel="noopener">《YOLO训练自己的数据集》</a>以及其他几篇文章的指导和建议进行配置的，主要有以下几点：</p><p>首先，对darknet的cfg/voc.data进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">classes= 标签类别总数</span><br><span class="line">train = 填之前脚本生成的训练集文件列表trainImageId.txt</span><br><span class="line">valid = 填之前脚本生成的验证集文件列表validateImagePath.txt</span><br><span class="line">names = data/xxx.names</span><br><span class="line">backup = 存放训练结果模型的路径</span><br></pre></td></tr></table></figure><p>在data文件夹下的names文件中，每行写一条标签名称</p><p>其次，对要使用的神经网络版本yolo2-voc对应的配置文件yolo2-voc.cfg，应当更改以下几处：</p><pre><code>* 将最后的[region]层神经网络的配置中的classes改为1（即标记类别的总数）* 将最后一个[convolutional]卷积层中的filter改为30（filter的公式filters=(classes+ coords+ 1)* (NUM) ，我的是(1+4+1)* 5=30）</code></pre><p>注：这里coords可以认为是坐标，设置的标记是一个方框则取4。NUM是神经网络的层数。filter公式的来源请参见国外开发者们的讨论：<a href="https://groups.google.com/forum/#!topic/darknet/B4rSpOo84yg" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/darknet/B4rSpOo84yg</a></p><h2 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h2><p>在yolo的官网下载预训练模型，地址：<a href="http://pjreddie.com/media/files/darknet53.conv.74" target="_blank" rel="noopener">http://pjreddie.com/media/files/darknet53.conv.74</a></p><p>并执行训练命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detector train cfg/voc.data cfg/yolov2-voc.cfg darknet53.conv.74</span><br></pre></td></tr></table></figure><p>之后便开始了对神经网络的训练，在1000次训练之内，每100次就在backup文件夹中生成一次权重模型，在1000次训练以上，每10000次生成一次权重模型。本项目的最终训练次数达到了50000次。</p><p><img src="/2018/11/28/Training-Configuration-for-Yolo-darknet/training3.png" alt="训练过程截图"></p><p>上图为训练到500次左右时的结果截图</p><p><img src="/2018/11/28/Training-Configuration-for-Yolo-darknet/training4.png" alt="训练过程截图"></p><p>训练生成的模型文件</p><h2 id="批量测试、评估以及需要对darknet进行的相应修改"><a href="#批量测试、评估以及需要对darknet进行的相应修改" class="headerlink" title="批量测试、评估以及需要对darknet进行的相应修改"></a>批量测试、评估以及需要对darknet进行的相应修改</h2><p>本人<a href="https://lmy98129.github.io/2018/02/20/Environment-Configuration-for-Yolo-darknet">之前的笔记</a>中曾经提到了使用单张图片测试，以及连接计算机摄像头、网络视频推流进行实时识别的命令，命令内容大致如下：</p><p>单张图片：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detect cfg/yolo.cfg yolo.weight data/horses.jpg</span><br></pre></td></tr></table></figure></p><p>电脑摄像头：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detector demo cfg/voc.data cfg/tiny-yolo-voc.cfg weights/tiny-yolo-voc.weights</span><br></pre></td></tr></table></figure></p><p>手机摄像头（通过网络视频实时推流，使用工具为IP摄像头APP）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detector demo data/coco.data yolo.cfg yolo.weights http://192.168.191.2:8080/video</span><br></pre></td></tr></table></figure><p>得到的效果大致如下：</p><p>实地场景：</p><p><img src="/2018/11/28/Training-Configuration-for-Yolo-darknet/testing7.png" alt="测试过程截图"></p><p>网络图片：</p><p><img src="/2018/11/28/Training-Configuration-for-Yolo-darknet/testing1.png" alt="测试过程截图"></p><p>但是，可以看出这样手动输入命令进行逐个测试的方法，在测试上文中提到的从标记数据集中拆分出来的有一定数量图片的验证集时十分地不友好。而且必须手工收集每次测试中得到的准确度信息、手工进行统计计算。</p><p>所以这里参考了CSDN上的另一篇文章<a href="https://blog.csdn.net/mieleizhi0522/article/details/79989754" target="_blank" rel="noopener">《YOLOv3批量测试图片并保存在自定义文件夹下》</a>以及简书上的一篇文章<a href="https://blog.csdn.net/mieleizhi0522/article/details/79989754" target="_blank" rel="noopener">《Darknet 评估训练好的网络的性能》</a>对darknet中的example文件夹下的detector.c文件中的代码进行更改，以便于进行批量测试、统计、评估模型在验证集上的准确度，并输出结果：</p><ol><li>修改validate_detector_recall函数定义和调用为：</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">validate_detector_recall</span><span class="params">(<span class="keyword">char</span> *datacfg, <span class="keyword">char</span> *cfgfile, <span class="keyword">char</span> *weightfile)</span></span></span><br><span class="line"><span class="function"><span class="title">validate_detector_recall</span><span class="params">(datacfg, cfg, weights)</span></span>;</span><br></pre></td></tr></table></figure><ol><li>修改validate_detector_recall的初始化代码</li></ol><p>修改前：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> *plist = get_paths(<span class="string">"data/voc.2007.test"</span>);</span><br><span class="line"><span class="keyword">char</span> **paths = (<span class="keyword">char</span> **)list_to_array(plist);</span><br></pre></td></tr></table></figure></p><p>修改后：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> *options = read_data_cfg(datacfg);</span><br><span class="line"><span class="keyword">char</span> *valid_images = option_find_str(options, <span class="string">"valid"</span>, <span class="string">"/home/blean/VOC/validateImagePath.txt"</span>);</span><br><span class="line"><span class="built_in">list</span> *plist = get_paths(valid_images);</span><br><span class="line"><span class="keyword">char</span> **paths = (<span class="keyword">char</span> **)list_to_array(plist);</span><br></pre></td></tr></table></figure></p><ol><li>修改结束后需要重新编译darknet主程序，命令如下</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br></pre></td></tr></table></figure><p>在完成上述修改后即可使用darknet的recall命令进行评估测试并输出结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detector recall cfg/voc.data cfg/yolov2-voc.cfg backup/yolov2-voc_50000.weights -out drowning_recall.txt</span><br></pre></td></tr></table></figure><p>输出的结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> Number Correct Total Rps/Img IOU Recall </span><br><span class="line"> 0     1     1RPs/Img: 23.00IOU: 71.42%Recall:100.00%</span><br><span class="line"> 1     2     2RPs/Img: 19.00IOU: 66.04%Recall:100.00%</span><br><span class="line"> 2     3     3RPs/Img: 31.00IOU: 65.52%Recall:100.00%</span><br><span class="line"> 3     4     4RPs/Img: 31.75IOU: 65.22%Recall:100.00%</span><br><span class="line"> 4     5     5RPs/Img: 29.40IOU: 65.55%Recall:100.00%</span><br><span class="line"> 5     6     6RPs/Img: 29.67IOU: 67.34%Recall:100.00%</span><br><span class="line"> 6     6     7RPs/Img: 32.00IOU: 60.25%Recall:85.71%</span><br><span class="line"> 7     7     8RPs/Img: 35.12IOU: 59.75%Recall:87.50%</span><br><span class="line"> 8     8     9RPs/Img: 33.11IOU: 60.55%Recall:88.89%</span><br><span class="line"> 9     8    10RPs/Img: 33.20IOU: 59.48%Recall:80.00%</span><br><span class="line">10     9    11RPs/Img: 34.00IOU: 59.27%Recall:81.82%</span><br><span class="line">11    10    12RPs/Img: 33.00IOU: 59.65%Recall:83.33%</span><br><span class="line">12    11    13RPs/Img: 32.00IOU: 60.33%Recall:84.62%</span><br><span class="line">13    12    14RPs/Img: 30.64IOU: 60.85%Recall:85.71%</span><br><span class="line">14    12    14RPs/Img: 29.60IOU: 60.85%Recall:85.71%</span><br><span class="line">15    13    15RPs/Img: 29.62IOU: 61.41%Recall:86.67%</span><br></pre></td></tr></table></figure><p>其中各项参数的解释如下：</p><ul><li>Number表示处理到第几张图片。</li><li>Correct表示正确的识别出了多少bbox（即标记目标物体的方框）。这个值算出来的步骤是这样的，丢进网络一张图片，网络会预测出很多bbox，每个bbox都有其置信概率，概率大于threshold的bbox与实际的bbox，也就是labels中txt的内容计算IOU，找出IOU最大的bbox，如果这个最大值大于预设的IOU的threshold，那么correct加1。</li><li>Total表示实际有多少个bbox。</li><li>Rps/img表示平均每个图片会预测出来多少个bbox。</li><li>IOU： 这个是预测出的bbox和实际标注的bbox的交集 除以 他们的并集。显然，这个数值越大，说明预测的结果越好。</li><li>Recall召回率， 意思是检测出物体的个数 除以 标注的所有物体个数。通过代码我们也能看出来就是Correct除以Total的值。</li></ul><p>可以从最后一条代表处理了全部验证集的统计结果看出，经过验证集的检验，训练得出的模型识别目标物体的总正确率大致在86%左右，可以说训练效果较为理想。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li>YOLO-darknet官网<br><a href="https://pjreddie.com/darknet/yolo/" target="_blank" rel="noopener">https://pjreddie.com/darknet/yolo/</a></li><li>YOLO训练自己的数据集：<br><a href="https://blog.csdn.net/qq_34484472/article/details/73135354" target="_blank" rel="noopener">https://blog.csdn.net/qq_34484472/article/details/73135354</a></li><li>YOLOv3批量测试图片并保存在自定义文件夹下：<br><a href="https://blog.csdn.net/mieleizhi0522/article/details/79989754" target="_blank" rel="noopener">https://blog.csdn.net/mieleizhi0522/article/details/79989754</a></li><li>Darknet 评估训练好的网络的性能：<br><a href="https://blog.csdn.net/mieleizhi0522/article/details/79989754" target="_blank" rel="noopener">https://blog.csdn.net/mieleizhi0522/article/details/79989754</a></li><li>Environment-Configuration-for-Yolo-darknet | NeXT （就是之前的那篇笔记）<br><a href="https://lmy98129.github.io/2018/02/20/Environment-Configuration-for-Yolo-darknet">https://lmy98129.github.io/2018/02/20/Environment-Configuration-for-Yolo-darknet</a></li></ol><blockquote><p>最后，这是本站的第八篇正式发文，感谢阅读。<br>如有意见和建议，欢迎通过首页的联系方式联系作者，<br>本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Everything’s coming up roses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;续上次的笔记&lt;br&gt;分享yolo-darknet神经网络训练全过程的配置经验&lt;/p&gt;
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>Notes About Recent Projects 3</title>
    <link href="http://lmy98129.github.io/2018/06/28/Notes-About-Recent-Projects-3/"/>
    <id>http://lmy98129.github.io/2018/06/28/Notes-About-Recent-Projects-3/</id>
    <published>2018-06-28T15:14:03.000Z</published>
    <updated>2018-07-29T05:23:05.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>The most stupid work<br>might be the most important one to cherish.</p></blockquote><p>此处收录一些近期的项目笔记，<br>这次真的是最近正在干的事情了。</p><a id="more"></a><p>没上锁的原因？<br>是因为我从校会网络部光荣退休了吧。。。<br>讲点别的项目。</p><h2 id="贝壳计通讲师团"><a href="#贝壳计通讲师团" class="headerlink" title="贝壳计通讲师团"></a>贝壳计通讲师团</h2><p>项目访问方式：</p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/QRCODE.jpg" alt="QRCODE"></p><ol><li>扫描上方的小程序码</li><li>微信小程序搜索“贝壳计通讲师团”</li><li><a href="https://github.com/lmy98129/weapp-ustb" target="_blank" rel="noopener">Github</a></li></ol><h3 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h3><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP1.PNG" alt="WEAPP1"></p><p><center>小程序主界面，更多预览请直接打开小程序或阅读本文后续内容</center><br></p><p>这是北京科技大学计算机与通信工程学院学生讲师团的官方小程序，管理方是北京科技大学计算机与通信工程学院学生讲师团，开发和维护方是北京科技大学计算机与通信工程学院的计算机科学与技术专业大二学生本人以及我的搭档fafnir，<strong>本人作为小程序的主要开发者之一，完成了本小程序的数据库结构设计、前端小程序开发、Node.js后端开发工作，并进行了多次版本迭代</strong>。搭档fafnir完成的工作主要为开发基于Python的Django Xadmin搭建的小程序后台管理网站。</p><p>项目创建的具体时间应与本博客的创建时间相差不多，开发时间长达3个月，上线时间已达1个月，经历两次大改。目前最新版本为v0.4.1。<br><strong>小程序前端基于腾讯微信小程序开发工具的原生组件，后端基于Node.js框架Express，数据库使用MySQL，数据库访问使用Node.js的MySQL库。其中，前端的通信模块以及后端的数据库访问模块均采用Promise异步编程封装。</strong></p><blockquote><p>注：我们计划在将本程序进行适当重构后，将本程序的前后端代码适时发布至GitHub。<br>当前程序内的敏感信息较多，公布后风险较大故暂不考虑。</p><p>后续：前端代码已发布至<a href="https://github.com/lmy98129/weapp-ustb" target="_blank" rel="noopener">Github</a></p></blockquote><h3 id="项目技术细节"><a href="#项目技术细节" class="headerlink" title="项目技术细节"></a>项目技术细节</h3><p>本项目的最初需求来源是：在2017秋季学期计通学院学生讲师团旧有线上预约平台网站开发维护人员即将毕业离校，讲师团负责人员联系辅导员提出了寻找学生进行下一代线上辅导预约平台的开发和维护工作的需求，最终确定采用小程序的形式进行开发，并招募了开发人员。原定计划为寒假一个多月时间内完成开发任务，但由于人员技术水平有限，以及在开发过程中遇到的种种挫折，我们前后花费了将近3个月的时间，经历两次大改才将目前接近成品的版本v0.4.1付诸上线使用。</p><h4 id="项目第一版"><a href="#项目第一版" class="headerlink" title="项目第一版"></a>项目第一版</h4><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP2.PNG" alt="WEAPP2"></p><p><center>第一版小程序主界面，更多预览请阅读本文后续内容</center><br></p><p>项目的第一版完成了基本的需求分析、技术选型、数据库表设计、设备部署以及初步的技术实现等工作。其中需求分析与数据库表设计均由我来完成，并根据MySQL的通行命名规范，编写了本项目的第一份需求分析以及数据库表结构稿件。<strong>出于安全考虑，不在此处公布数据库各表的具体字段。</strong>由于我们与需求方之间初期的沟通较少，导致我们对于需求方的理解有一定的偏差，但根据我们之后的需求更改情况，可以看出大方向上是无误的。</p><h5 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h5><p>我们在第一版设计时的具体需求（大部分为开发方在开发过程中，帮助需求方总结的需求）为：</p><ul><li>小程序前端搭载学生端和讲师端两套代码，在用户登录过程中，使用微信提供的用户id查询数据库结果决定显示哪一界面，普通用户默认为学生用户。（虽然在历次提交审查中，<strong>微信方面的小程序测试人员并未对此提出任何疑问</strong>，但可以说确实是一种逃避审查的潜在手段，希望微信方面改进审查机制加以防范）</li><li>讲师发布课程内容，包括课程名称、日期、时间、地点、人数上限、备注等，其中人数上限、地点、备注为选填项。（<strong>早期版本中未考虑到人数上限问题，是后期加入的字段</strong>）</li><li>学生可以进入课程列表对讲师发布的课程进行预约或取消预约，其中达到人数上限、课程取消等情况下提示学生不得预约，课程列表发生的更改将在触发课程列表本身更改的同时，实时触发首页列表的刷新。（<strong>课程超时不得预约的功能较为复杂，也是后期加入的字段</strong>）</li><li>学生端以及讲师端首页均显示自己已预约的课程或已发布的课程情况，以及对课程进行相应的编辑操作：学生可以取消课程预约，讲师可以取消、删除、编辑课程，讲师的编辑操作也将触发其首页列表的刷新。</li><li>在课程列表以及首页中点击单个课程卡片可以查看课程详情。</li><li>“我的”页面中普通学生用户可以申请成为讲师，需提交真实姓名以及电话号码，通过后台管理网站的管理员核对后通过认证成为讲师。</li><li>后台管理网站应该能自由编辑、删除任何讲师发布的课程，应在开发后期对讲师每月授课情况统计，并进行展示（<strong>截至文章发布，授课情况统计功能暂未全部完成</strong>）。</li></ul><h5 id="数据库表"><a href="#数据库表" class="headerlink" title="数据库表"></a>数据库表</h5><p>根据以上的需求分析，大致能够分成以下的数据库表（具体字段不予公布）</p><ol><li>用户预约总表</li><li>讲师课程列表</li><li>管理员认证讲师资格列表</li><li>管理员账户列表</li></ol><h5 id="程序功能"><a href="#程序功能" class="headerlink" title="程序功能"></a>程序功能</h5><p>从这些数据库表可以分析得出的功能表如下：</p><ol><li>用户<ol><li>查看当前可预约课程列表</li><li>提交预约</li><li>取消预约</li><li>查看自己当前的预约</li><li>提交讲师认证申请</li></ol></li><li>讲师<ol><li>查看当前已发布课程以及预约情况（预约人数）</li><li>提交课程</li><li>取消课程</li><li>修改课程</li></ol></li><li>管理员<ol><li>查看并编辑当前所有课程以及预约</li><li>操作讲师认证申请</li><li>查看当前所有讲师每月的授课情况</li></ol></li></ol><h5 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h5><p>项目第一版的技术选型由fafnir完成，总体情况是采用了腾讯云提供的<a href="https://github.com/tencentyun/wafer" target="_blank" rel="noopener">wafer小程序一站式解决方案</a>，具体来说应该是wafer1，选择的理由是相比于wafer2中服务器无法取得完整访问权的形式，wafer1可以直接在服务器上部署后台管理网站。（<strong>虽然后来的经费结算显示，使用wafer2方案可能会更经济一些</strong>，而且截至文章发布，腾讯云已经不再主推wafer1，并撤换下了多个wafer小程序一站式解决方案的访问入口，当前能够全新购买的解决方案的只剩下基于开发者工具的wafer2方案，两者之间的不同以及基本架构可以<a href="https://cloud.tencent.com/developer/article/1007109" target="_blank" rel="noopener">看这里</a>）当时的具体项目选型如下：</p><table><thead><tr><th>技术模块</th><th>采用技术</th><th>备注</th></tr></thead><tbody><tr><td>小程序前端</td><td>wafer小程序一站式解决方案小程序demo</td><td><a href="https://github.com/tencentyun/wafer-client-demo" target="_blank" rel="noopener">项目地址</a>，与后端通信采用的是<a href="https://github.com/tencentyun/wafer-client-sdk" target="_blank" rel="noopener">wafer自带的腾讯云SDK</a>，采用的是基于socket的全双工信道通信，部分界面元素直接复用了demo中的界面</td></tr><tr><td>服务器后端</td><td>wafer小程序站式解决方案Node.js后端demo</td><td><a href="https://github.com/tencentyun/wafer-node-server-demo" target="_blank" rel="noopener">项目地址</a>，部署于wafer一站式解决方案的业务服务器上，基于Node.js框架Express，与前端通信采用的同样是<a href="https://github.com/tencentyun/wafer-node-server-sdk" target="_blank" rel="noopener">wafer自带的腾讯云SDK</a>，采用的是基于socket的全双工信道通信，前后端的会话通信可以直接通过API地址进行，但是信道通信必须经过一站式解决方案的信道服务器进行（<strong>请记住这一点，在之后的版本迭代中就发生了问题</strong>），与数据库通信采用的是Node.js的MySQL库的线程池模式（<strong>此时并未对其进行任何的封装</strong>）</td></tr><tr><td>数据库</td><td>MySQL 5.6</td><td>部署于wafer一站式解决方案的云数据库上，通过wafer一站式解决方案的信道服务器进行远程访问</td></tr><tr><td>后台管理网站</td><td>基于Python的Django Xadmin</td><td>部署于wafer一站式解决方案的业务服务器上，与后端访问操作同一数据库</td></tr></tbody></table><h5 id="开发难点及笔记"><a href="#开发难点及笔记" class="headerlink" title="开发难点及笔记"></a>开发难点及笔记</h5><h6 id="JavaScript的异步单线程特性"><a href="#JavaScript的异步单线程特性" class="headerlink" title="JavaScript的异步单线程特性"></a>JavaScript的异步单线程特性</h6><p>由于对Node.js乃至JavaScript的异步单线程的特性，尤其是回调函数的理解还较为浅薄（可能也是在之前并未直接接触过前后端通信以及数据库通信的原因造成的。是的我之前的工作真的就是改改开源PHP项目的代码，没怎么认真研读过代码以及文档），所以在设计后端服务器与数据库通信模块时，仍然将思路停留在C/C++之类的线性思路上，例如有如下代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> res = <span class="string">'nothing'</span>;</span><br><span class="line">connection.query(<span class="string">"USE "</span>+database);</span><br><span class="line">connection.query(<span class="string">'SELECT * FROM '</span>+databaseForm, <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">    <span class="keyword">if</span> (results) &#123;</span><br><span class="line">        res = results;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br></pre></td></tr></table></figure></p><p>其执行结果按照我的想象应该是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nothing</span><br><span class="line">(查询的结果)</span><br><span class="line">(查询的结果)</span><br></pre></td></tr></table></figure></p><p>结果是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nothing</span><br><span class="line">(查询的结果)</span><br><span class="line">nothing</span><br></pre></td></tr></table></figure></p><p>相当于查询结果并未真正传给变量<code>res</code>，若我想在第二个<code>console.log(res);</code>的位置进行查询结果向前端的回传，则回传的结果将仍是<code>nothing</code>。具体原因？简单来说就是JavaScript作为一种在浏览器引擎中工作的语言，在大多数情况下只能单线程运行，此时只能先将一些阻塞整个线程运行的工作进行挂起处理（就例如前后端通信，若后端在某次查询时迟迟不回传，不应该将这个查询之外的其他工作全部停止，选择等待查询结果的到来，而是将其挂起，当后端查询结果回传时，再回过头来进行查询结果的处理等与查询结果相关的工作），这个挂起处理就是通过回调函数<code>callback</code>实现的，也就是上面第二个<code>connection.query</code>中的<code>function</code>函数。因此，正确的实现应该是:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">connection.query(<span class="string">"USE "</span>+database);</span><br><span class="line">connection.query(<span class="string">'SELECT * FROM '</span>+databaseForm, <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">    <span class="keyword">if</span> (results) &#123;</span><br><span class="line">        TunnelService.emit(tunnelId, messageId, results); <span class="comment">//直接在回调函数中进行回传</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h6 id="Node-js中MySQL库的单语句查询、参数化查询等防注入机制"><a href="#Node-js中MySQL库的单语句查询、参数化查询等防注入机制" class="headerlink" title="Node.js中MySQL库的单语句查询、参数化查询等防注入机制"></a>Node.js中MySQL库的单语句查询、参数化查询等防注入机制</h6><p>后端服务器与MySQL通信使用的库为Node.js通用的MySQL库，安装命令为<code>npm install mysql</code>。根据我们后期的开发经验，事实上不应该使用该库而应该使用更加专业的ORM框架（<a href="https://baike.baidu.com/item/ORM/3583252" target="_blank" rel="noopener">ORM的定义</a>）来方便我们对数据库操作命令进行js化的直接编写，而非只用SQL语句进行直接查询，虽然学习SQL语句也不是一件坏事。是的，本项目基本上用到的也就是增删改查、左联右联内联、COUNT计数、建表建库等基本SQL语句。</p><p>但是，问题在于该MySQL库本身的最佳实践中提到了其参数化查询、单语句查询的等防注入攻击的机制。其中参数化查询并非开发难点，此处可以略过，但是其默认单语句查询的功能实在是增加了开发难度。也就是必须在单条SQL语句当中完成所有查询，不允许进行多次查询后通过中间变量进行合并得到最终结果。这一设定的出发点是好的，万一API接口被传入一些带“;”的参数，且允许多语句查询，我们并不知道这些参数是否会导致SQL注入攻击的发生。</p><p>诚然，大多数查询通过本人的努力都实现了单语句查询的效果，虽然SQL语句看起来又臭又长，外人难以读懂（这也是我反思之后决定日后学习ORM的主要原因之一）。但是若出现某些根据上一次查询结果进行分支操作的情况，单语句查询就显得十分吃力了。例如，我们遇到了这一种情况：</p><p><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuL800gMdUngUBkz-Dd_fY_MBb7HrxPGWp6Vp9xnOj-7ftgdFPgn_Ec7PqxKpdivPeGJMafcceFHY_LA8D4JYwOJfx_VCLr8eoKZD0wi10Q1X2j6LgSMnG4isj3tjcm_HyNnMozEE1IzdBddUjUrPG-EBvOk1xASxjptPl-xPb9rFMxSzRMjzkcwd4eevIY_sJtawUzxptPEVpPi3aKhDAKv5jIil7sZLisaRdYwQzsH7mxEv2o4M4ZOfBoKpZSi1I0531G00"></p><p><center>如果因SSL证书问题无法查看上方的流程图，可以使用其他非Chrome内核的浏览器或使用桌面端浏览器阅读本文</center><br></p><p>所以在项目的第一版中，我们采用了Node.js的<code>async</code>库中的<code>waterfall</code>进行同步顺序编程，<br><strong>之后的版本我发现了Promise是个好东西（虽然理解起来有难度）</strong><br><strong>然后就把通信模块统统重写了个遍</strong><br>在MySQL通信模块中解决这一问题的一个库函数实例如下：<br>也可以看出采用了参数化查询的防注入机制，以及MySQL的线程池。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> mysqlReserveClassStu(tunnelId, messageId, openId, classId, nickName) &#123;</span><br><span class="line">  <span class="keyword">var</span> tasks = [<span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    pool.getConnection(<span class="function"><span class="keyword">function</span>(<span class="params">error,connection</span>) </span>&#123;</span><br><span class="line">      connection.query(<span class="string">"SELECT * FROM user_reserve WHERE class_id=? AND user_id=?"</span>, [classId, openId], <span class="function"><span class="keyword">function</span> (<span class="params">error, results_1, fields</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">        <span class="keyword">if</span> (results_1) &#123;</span><br><span class="line">          connection.release();</span><br><span class="line">          callback(error, results_1);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">results_1, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(results_1[<span class="number">0</span>] == <span class="literal">null</span>)&#123;</span><br><span class="line">      pool.getConnection(<span class="function"><span class="keyword">function</span>(<span class="params">error,connection</span>) </span>&#123;</span><br><span class="line">        connection.query(<span class="string">"INSERT INTO user_reserve (user_id,user_nickname,class_id,submission_date) VALUES(?,?,?,NOW())"</span>,</span><br><span class="line">        [openId,nickName,classId], <span class="function"><span class="keyword">function</span>(<span class="params">error, results_2, fields</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(error) <span class="keyword">throw</span> error;</span><br><span class="line">          <span class="keyword">if</span>(results_2) &#123;</span><br><span class="line">            connection.release();</span><br><span class="line">            TunnelService.emit(tunnelId, messageId, results_2);</span><br><span class="line">            callback(error);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pool.getConnection(<span class="function"><span class="keyword">function</span>(<span class="params">error,connection</span>) </span>&#123;</span><br><span class="line">        connection.query(<span class="string">"UPDATE user_reserve SET status=1 WHERE class_id=? AND user_id=?"</span>,</span><br><span class="line">        [classId,openId], <span class="function"><span class="keyword">function</span>(<span class="params">error,results_3, fields</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(error) <span class="keyword">throw</span> error;</span><br><span class="line">          <span class="keyword">if</span>(results_3) &#123;</span><br><span class="line">            connection.release();</span><br><span class="line">            TunnelService.emit(tunnelId, messageId, results_3);</span><br><span class="line">            callback(error);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span>.waterfall(tasks, <span class="function"><span class="keyword">function</span>(<span class="params">error, results</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(error) <span class="keyword">throw</span> error;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>这个代码块确定没把数据库表的字段抖出来了吗。。。<br>emmmm，还好吧。各位高抬贵手，高抬贵手。。。</p></blockquote><h6 id="前端、后端、数据库三者之间的时间不统一以及时间格式的处理问题"><a href="#前端、后端、数据库三者之间的时间不统一以及时间格式的处理问题" class="headerlink" title="前端、后端、数据库三者之间的时间不统一以及时间格式的处理问题"></a>前端、后端、数据库三者之间的时间不统一以及时间格式的处理问题</h6><p>这里由于我自己也记不大清楚当初的处理思路（尤其是小程序前端在处理过程中使用的“幻数”），<br>很可能都是我无意识情况下的“瞎调试”的成果。<br><strong>这个说实话我是极其不提倡这么干的，虽然有的时候的确有用</strong><br>此处提供各模块的关键代码供大家参阅：<br>服务器后端MySQL通信模块上的初始化操作，关键就是设置时区到正确的时间<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">process.env.TZ = <span class="string">'Asia/Shanghai'</span>;</span><br><span class="line"><span class="keyword">var</span> pool;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MysqlExecute</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> mysqlInit() &#123;</span><br><span class="line">    pool = mysql.createPool(&#123;</span><br><span class="line">    connectionLimit: <span class="number">10</span>,</span><br><span class="line">    host     : mysqlHost,</span><br><span class="line">    user     : mysqlUser,</span><br><span class="line">    password : mysqlPassword,</span><br><span class="line">    database : mysqlDatabase,</span><br><span class="line">    timezone : process.env.TZ</span><br><span class="line">    &#125;)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>小程序前端的时间处理相关代码format，关键就是正则表达式+暴力剪切+暴力连接<br>（其中用了微信开发者工具的默认小程序demo里面的util.js时间处理函数）<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">'./util'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> currentDate = utils.formatTime(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line"><span class="keyword">var</span> currentDateAnnual = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> classContentStr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> timeFormat = <span class="function">(<span class="params">str</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> start = str[i].class_timestart;</span><br><span class="line">        <span class="keyword">var</span> end = str[i].class_timend;</span><br><span class="line">        <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(str[i].class_date.slice(<span class="number">0</span>, <span class="number">10</span>));</span><br><span class="line">        date = date.getFullYear() + <span class="string">"年"</span> +</span><br><span class="line">        (<span class="built_in">parseInt</span>(date.getMonth()) + <span class="number">1</span>).toString() + <span class="string">"月"</span> +</span><br><span class="line">        date.getDate() + <span class="string">"日"</span>;</span><br><span class="line">        start = start.slice(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (start.slice(<span class="number">0</span>, <span class="number">1</span>) == <span class="string">"0"</span>) &#123;</span><br><span class="line">            start = start.slice(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">        &#125;</span><br><span class="line">            end = end.slice(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span> (end.slice(<span class="number">0</span>, <span class="number">1</span>) == <span class="string">"0"</span>) &#123;</span><br><span class="line">            end = end.slice(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        str[i].class_date = date;</span><br><span class="line">        str[i].class_timestart = start;</span><br><span class="line">        str[i].class_timend = end</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dateFormat = <span class="function">(<span class="params">options, that</span>) =&gt;</span> &#123;</span><br><span class="line">    that.setData(&#123; </span><br><span class="line">        dateIndex: currentDate,</span><br><span class="line">        ateLimitStart: currentDate,</span><br><span class="line">    &#125;);</span><br><span class="line">    currentDateAnnual.setFullYear(currentDateAnnual.getFullYear() + <span class="number">1</span>);</span><br><span class="line">    currentDateAnnual.setDate(currentDateAnnual.getDate() - <span class="number">1</span>);</span><br><span class="line">    that.setData(&#123; <span class="attr">dateLimitEnd</span>: currentDateAnnual &#125;);</span><br><span class="line">    <span class="keyword">if</span> (options.class_content != <span class="literal">null</span>) &#123;</span><br><span class="line">        classContentStr = <span class="built_in">JSON</span>.parse(options.class_content);</span><br><span class="line">        <span class="keyword">if</span> (classContentStr.student_limit == <span class="string">'0'</span>) &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                studentLimit: <span class="string">''</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                studentLimit: classContentStr.student_limit</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        classContentStr.class_date = classContentStr.class_date.replace(<span class="string">"年"</span>, <span class="string">"-"</span>);</span><br><span class="line">        classContentStr.class_date = classContentStr.class_date.replace(<span class="string">"月"</span>, <span class="string">"-"</span>);</span><br><span class="line">        classContentStr.class_date = classContentStr.class_date.replace(<span class="string">"日"</span>, <span class="string">""</span>);</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">            className: classContentStr.class_name,</span><br><span class="line">            classIntro: classContentStr.class_intro,</span><br><span class="line">            dateIndex: classContentStr.class_date,</span><br><span class="line">            classPlace: classContentStr.class_place,</span><br><span class="line">            timeEndIndex: classContentStr.class_timend,</span><br><span class="line">            timeStartIndex: classContentStr.class_timestart,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> classContentStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    timeFormat: timeFormat,</span><br><span class="line">    dateFormat: dateFormat</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>看着相当的难受啊，这x一样的代码风格😂<br>没毛病，（下一版）会改的会改的🙏<br>（没错，之后的版本我直接把那个又臭又长的<code>classContentStr</code>给改了。。。）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(str[i].class_date.slice(<span class="number">0</span>, <span class="number">10</span>));</span><br><span class="line"> <span class="comment">//这里得到的结果格式应该类似于yyyy-mm-dd</span></span><br><span class="line">date = date.getFullYear() + <span class="string">"年"</span> +</span><br><span class="line">        (<span class="built_in">parseInt</span>(date.getMonth()) + <span class="number">1</span>).toString() + <span class="string">"月"</span> +</span><br><span class="line">        date.getDate() + <span class="string">"日"</span>;</span><br></pre></td></tr></table></figure><p>想看幻数的同学看上面，我把它截取下来了。<br>是这样的：月份数诡异地被我加了一个1，然后居然就对了。。。<br>我也不知道这个到底是怎么一回事，在JavaScript里有什么奇异的原理导致了这个结果，有人知道的话可以告诉我吗?</p><blockquote><p>后续：我查到了，因为getMonth()是以数组形式来存储月份的，下标是0~11</p></blockquote><h6 id="人数上限的数据格式转换，以及人数已满等状态下阻止用户预约"><a href="#人数上限的数据格式转换，以及人数已满等状态下阻止用户预约" class="headerlink" title="人数上限的数据格式转换，以及人数已满等状态下阻止用户预约"></a>人数上限的数据格式转换，以及人数已满等状态下阻止用户预约</h6><blockquote><p>你还别说，我一边写这个笔记，一边还在最新版本的小程序里发现各种蜜汁有趣的bug呢😂</p></blockquote><p>人数上限作为讲师发布课程时的一个选填项，可以说是本项目数据处理的一个难点，其处理方式在本项目中也起到了一种模范的形式<br>难点在于：人数上限分为两种情况：“无上限”和存在数字上限，我们只能利用0这个数字来表示“无上限”，因为基本上不可能开设一个人也没有的课程，至少的人数上限也应该是1。但是反过来说，用户在填写表单时不可能特别将无上限填写为0，这在用户体验上只有留空才更加符合一般的表单填写习惯。</p><p>所以我们在用户点击上传按钮触发的函数中就将人数上限进行处理转换：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> studentLimitFormat;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>.data.studentLimit == <span class="string">''</span>)&#123;</span><br><span class="line">    studentLimitFormat = <span class="string">'0'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    studentLimitFormat = <span class="keyword">this</span>.data.studentLimit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//之后传到后端的就是studentLimitFormat</span></span><br></pre></td></tr></table></figure></p><p>并在从后端回传的过程中也一样进行相应的处理，这里以课程内容页代码为例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(classContentStr.student_limit == <span class="string">'0'</span>)&#123;</span><br><span class="line">  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    studentLimit: <span class="string">'无上限'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    studentLimit: classContentStr.student_limit</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>同时，也应当在人数已满时阻止用户预约。在微信小程序中，我们使用<code>&lt;block wx:if&gt;</code>的wxml标签形式进行分类，通过条件判断来决定显示何种按钮，并只在“预约”和“取消预约”按钮上添加相应的函数钩子，这里以课程列表的上传按钮为例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;item.student_sum &gt;= item.student_limit &amp;&amp; item.student_limit &gt; 0&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"reserve-button"</span> <span class="attr">data-content</span>=<span class="string">'&#123;&#123;item&#125;&#125;'</span>&gt;</span></span><br><span class="line">        人数已满</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:elif</span>=<span class="string">"&#123;&#123;item.status == 0&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"reserve-button"</span> <span class="attr">data-content</span>=<span class="string">'&#123;&#123;item&#125;&#125;'</span>&gt;</span></span><br><span class="line">        已取消</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:elif</span>=<span class="string">"&#123;&#123;item.reserve_status == null || item.reserve_status != 1&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"reserve-button"</span> <span class="attr">bindtap</span>=<span class="string">"bindReserve"</span> <span class="attr">data-content</span>=<span class="string">'&#123;&#123;item&#125;&#125;'</span>&gt;</span></span><br><span class="line">        预约</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:elif</span>=<span class="string">"&#123;&#123;item.reserve_status == 1&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"reserve-button"</span> <span class="attr">bindtap</span>=<span class="string">"bindCancelReserve"</span> <span class="attr">data-content</span>=<span class="string">'&#123;&#123;item&#125;&#125;'</span>&gt;</span>          </span><br><span class="line">        取消预约</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>当然，我们也在后端数据库表的设计中，将讲师课程表的人数上限字段的默认值设置为0。这算是最后一道防线吧，防止其他非法输入对数据的影响。</p><h6 id="提交表单前的各种格式检查"><a href="#提交表单前的各种格式检查" class="headerlink" title="提交表单前的各种格式检查"></a>提交表单前的各种格式检查</h6><p>是的，以人数上限的数据上传前进行处理为范本，我们普遍采用了<code>if() { return; }</code>的形式对非法输入进行检查，而这些非法输入的多样性之丰富，远远超出了我们的想象。例如：<br>有时间的非法输入，直接用正则表达式替换掉时间中的冒号+暴力的数字比较（<code>new Date</code>说实话多此一举了）：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.data.timeStartIndex.replace(<span class="regexp">/:/g</span>, <span class="string">""</span>)) &gt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.data.timeEndIndex.replace(<span class="regexp">/:/g</span>, <span class="string">""</span>)))&#123;</span><br><span class="line">    wx.showModal(&#123;</span><br><span class="line">        title: <span class="string">'提示'</span>,</span><br><span class="line">        content: <span class="string">'开始时间应小于结束时间'</span>,</span><br><span class="line">        showCancel: <span class="literal">false</span>,</span><br><span class="line">        confirmColor: <span class="string">'#17abe3'</span>,</span><br><span class="line">        confirmText: <span class="string">'好的'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>有人数上限输入非数字时，调用<code>isNaN()</code>函数的同时防止将留空代表“无上限”也拦截：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">isNaN</span>(<span class="keyword">this</span>.data.studentLimit) &amp;&amp; !(<span class="keyword">this</span>.data.studentLimit == <span class="literal">undefined</span>)) &#123;</span><br><span class="line">    wx.showModal(&#123;</span><br><span class="line">        title: <span class="string">'提示'</span>,</span><br><span class="line">        content: <span class="string">'人数上限应输入数字'</span>,</span><br><span class="line">        showCancel: <span class="literal">false</span>,</span><br><span class="line">        confirmColor: <span class="string">'#17abe3'</span>,</span><br><span class="line">        confirmText: <span class="string">'好的'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>甚至对是否产生了无效的预约时间也进行了合法性检查：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((currentDate &gt; selectedDate) || ((currentDate == selectedDate) &amp;&amp; (currentTime &gt; selectedTime)) &#123;</span><br><span class="line">    wx.showModal(&#123;</span><br><span class="line">        title: <span class="string">'提示'</span>,</span><br><span class="line">        content: <span class="string">'预约时间应大于当前时间'</span>,</span><br><span class="line">        showCancel: <span class="literal">false</span>,</span><br><span class="line">        confirmColor: <span class="string">'#17abe3'</span>,</span><br><span class="line">        confirmText: <span class="string">'好的'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们在合法性检查上花费了大量的时间，但也只能够对非法情况进行枚举性质的检测，若有一些我们不了解的业界最佳实践，欢迎联系我们探讨这一问题。</p><h5 id="程序测试"><a href="#程序测试" class="headerlink" title="程序测试"></a>程序测试</h5><p>程序测试确实是开发过程当中的重要一环，由于团队资源有限，且微信账号确实具有不可模拟性，所以我们在不足以拿到足够的微信测试账号以及测试机时，借助微信开发者工具和自己的手机号，建立了一个仅有两个核心测试账号、一台安卓测试机的测试体系（后期在发现iOS独有bug时，我们也找了临时的iPhone测试机和测试微信账号）。</p><ul><li>两个测试账号一个默认为普通学生用户，另一个通过后台管理网站通过讲师认证注册为讲师（在后台管理网站还未部署时，其实是通过手工向数据库表加入记录实现的），两号均在微信公众平台上注册为开发者</li><li>一般情况下，在PC端微信开发者工具上登录其中一个用户，手机端也登录这一用户，以测试学生端或讲师端在开发者工具的模拟器和实机上效果是否一致，也可以通过远程调试定位实机上的bug</li><li>若想测试讲师端与学生端的数据互动效果，可以在开发者工具登录一个用户，另一个用户在手机上通过微信最新版本的“切换用户”功能登录小程序</li><li>若想测试多个教师或多个学生产生数据的效果，可以通过后台管理网站同时认证讲师或取消讲师认证来实现身份上的同一性。</li><li>若想在临时的iPhone测试机上进行远程调试，记得先将该机的测试微信号加入开发者列表，如此方能远程调试成功，测试结束后记得再删除即可。</li></ul><h5 id="小程序最终界面"><a href="#小程序最终界面" class="headerlink" title="小程序最终界面"></a>小程序最终界面</h5><p>UI设计上大量采用了腾讯云一站式小程序解决方案小程序demo的配色和界面元素。<br>（其实就是没精力去设计UI啦。。。）<br>基本设计思想更偏向WP式的平面风格</p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP2.PNG" alt="WEAPP2"></p><p><center>第一版小程序主界面（此时小程序名称还没改）</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP3.PNG" alt="WEAPP3"></p><p><center>第一版小程序主界面（无预约时显示的欢迎+提示语）</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP4.JPEG" alt="WEAPP4"></p><p><center>第一版小程序课程列表</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP5.JPEG" alt="WEAPP5"></p><p><center>第一版小程序讲师端主界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP6.JPEG" alt="WEAPP6"></p><p><center>第一版小程序讲师端编辑课程界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP7.JPEG" alt="WEAPP7"></p><p><center>第一版小程序“我的”页面</center><br></p><h4 id="项目第二版"><a href="#项目第二版" class="headerlink" title="项目第二版"></a>项目第二版</h4><p>项目第二版的迭代原因是十分偶然的。由于<a href="https://developers.weixin.qq.com/blogdetail?action=get_post_info&amp;lang=zh_CN&amp;token=&amp;docid=000aee01f98fc0cbd4b6ce43b56c01" target="_blank" rel="noopener">微信官方对于小程序用户登录API的调整</a>影响了wafer1一站式解决方案中的腾讯云小程序SDK以及Node.js服务器端SDK通过信道服务器对用户身份进行认证的正常操作进行，导致了SDK提供的信道全双工通信对于新注册用户不再可用，最终使小程序的大多数功能处于不可用状态。（据悉，wafer2的SDK信道登录方式暂未受到影响，估计是腾讯方面在wafer1逐渐下架的情况下忽视了使用wafer1的老用户，测试不全面而导致这一情况发生）</p><p>为了解决这一重大bug，我们团队仔细研读了微信官方的登录API调整公告以及腾讯云SDK文档，最终采用了“添加首次登录用户认证界面+全面弃用信道通信方式并采用原生通信方式全面重写”的改进方案。<strong>值得一提的是，在重写过程中我们着重采用了JavaScript中的异步Promise编程，对小程序前端通信模块、后端服务器MySQL通信模块进行封装重写。在开发过程中，本人收获了更多的JS异步编程经验，并对Promise为代表的异步编程解决方案有了更加深刻的理解</strong></p><p>由于第二版着重于bug的修复和代码的重写，并未对UI界面设计做出太多调整，所以此处不再展示小程序主界面截图。若想知道第一版与最新版UI变化为何如此之大，请继续往下阅读，感谢您的理解！</p><h5 id="开发难点及笔记-1"><a href="#开发难点及笔记-1" class="headerlink" title="开发难点及笔记"></a>开发难点及笔记</h5><h6 id="微信登录API调整后小程序前端后端相应的修复解决方案"><a href="#微信登录API调整后小程序前端后端相应的修复解决方案" class="headerlink" title="微信登录API调整后小程序前端后端相应的修复解决方案"></a>微信登录API调整后小程序前端后端相应的修复解决方案</h6><p>根据微信官方的说法，若想像之前那样获得完备的用户基本信息:</p><blockquote><p>必须使用<code>&lt;button&gt;</code>组件，并将<code>open-type</code>指定为<code>getUserInfo</code>类型，用户允许授权后，可获取用户基本信息。</p></blockquote><p>而另一种使用<code>&lt;open-data&gt;</code>组件展示用户信息的方式，就真的只有展示功能了。。。可能也是我太菜，根本没办法在JS获取到组件内部加载出来的用户信息。</p><p>所以就相当于只能让用户点击一次按钮来完成整个用户信息获取的工作。根据我们当初设计的数据库表结构，用户信息，尤其是其唯一标识码openId，在本项目中起到了相当关键的作用，若不能获取这些信息，则根本无法正常使用小程序的各项基本功能，所以我们在小程序的首页设计了一个遮罩层，若未进行用户信息授权的话，用户看见的只有遮罩层上的提示和用户授权登录的按钮。</p><p>我们具体的实现结果如下所示:<br>wxml代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;!hasUserInfo&#125;&#125;"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"auth-page"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"auth-page-note"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"../../images/reserve-hl.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span>&gt;</span>请允许微信授权登录后\n继续使用小程序<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"auth-page-button"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;canIUse&#125;&#125;"</span> <span class="attr">open-type</span>=<span class="string">"getUserInfo"</span> <span class="attr">bindgetuserinfo</span>=<span class="string">"bindGetUserInfo"</span>&gt;</span></span><br><span class="line">                授权登录</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"auth-page-uncomp-note"</span> <span class="attr">wx:else</span>&gt;</span></span><br><span class="line">                不支持授权登录，请升级微信版本</span><br><span class="line">            <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>JS代码（index页面内的钩子函数）：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">bindGetUserInfo: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(e.detail.userInfo)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> userInfo = e.detail.userInfo;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'用户授权：'</span>, userInfo);</span><br><span class="line"></span><br><span class="line">    wx.setStorageSync(<span class="string">'nickName'</span>,userInfo.nickName);</span><br><span class="line">    wx.setStorageSync(<span class="string">'avatarUrl'</span>, userInfo.avatarUrl);</span><br><span class="line">    auth.showAuthPage(<span class="keyword">this</span>);   </span><br><span class="line"></span><br><span class="line">    wx.showToast(&#123;</span><br><span class="line">      title: <span class="string">"正在登录"</span>,</span><br><span class="line">      icon: <span class="string">"loading"</span>,</span><br><span class="line">      duration: <span class="number">1500</span>,</span><br><span class="line">      mask: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//说实话有点蠢这里，设置了一个硬性的1.5s时间，主要是因为貌似有点bug，</span></span><br><span class="line">    <span class="comment">//我如果设置wx.showToast一直显示，然后在用户信息拿到后再调用wx.hideToast，</span></span><br><span class="line">    <span class="comment">//经常性失灵，很绝望。可能真的是只能在当前页面中的js调用。但是很奇怪的是，wx.stopPullDownRefresh就不用这么干。。。</span></span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'用户授权：拒绝'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>JS代码（上面调用的auth所在的auth.js）：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> showAuthPage = <span class="function"><span class="params">that</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(wx.getSetting) &#123;</span><br><span class="line">        wx.getSetting(&#123;</span><br><span class="line">            success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> auth = res.authSetting,</span><br><span class="line">                nickName = wx.getStorageSync(<span class="string">'nickName'</span>),</span><br><span class="line">                hasUserInfo;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"授权情况："</span>, auth);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (auth[<span class="string">'scope.userInfo'</span>] &amp;&amp; nickName)</span><br><span class="line">                    hasUserInfo = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    hasUserInfo = <span class="literal">false</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"授权标记："</span>, hasUserInfo);                    </span><br><span class="line">                that.setData(&#123;</span><br><span class="line">                    hasUserInfo: hasUserInfo</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    showAuthPage: showAuthPage</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>感觉上小程序的底层应该也是像Vue、Angular、React那样写了一个有DOM更新之类功能的前端引擎，基本上hasUserInfo更新了之后，那个遮罩层直接就消失了，DOM更新的速度相当快。也有人吐槽小程序的JS风格就像Vue+React。。。</p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP8.PNG" alt="WEAPP8"></p><p><center>第二版小程序用户登录授权页面（请忽略那个远程调试用的黑框😂）</center><br></p><h6 id="前端通信模块以及后端MySQL通信模块的重写和Promise封装"><a href="#前端通信模块以及后端MySQL通信模块的重写和Promise封装" class="headerlink" title="前端通信模块以及后端MySQL通信模块的重写和Promise封装"></a>前端通信模块以及后端MySQL通信模块的重写和Promise封装</h6><p>有人说，你们不是又重新实现了用户信息获取了吗？为什么还是不能用原来的信道通信方式？而且再不济重新写一个socket类型的通信方式岂不美哉（可以实现全局广播，这样可以及时通知用户是否有数据发生了更改）？</p><blockquote><p>emmmm，技术菜，只是主要原因之一。（我承认我确实还不会写socket。。。）</p></blockquote><p>关键是那个腾讯云SDK它就是用<strong>原来的登录方式</strong>（划重点）获取用户信息的啊，现在微信方面彻头彻尾地改了，你不去重写它，还有其他办法吗？</p><p>第一步，先别急着把采用信道通信的代码全删了，至少通信时数据的格式你得看看吧。</p><p>然后，我确实菜，所以只能在前端通信模块乖乖地上原生wx.request请求了。。。真的，我就觉得这就是AJAX啊。<br>首先还是先写一个简单的<code>post</code>函数，把wx.request定制化封装一下。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> post = <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        wx.request(&#123;</span><br><span class="line">            url: config.service.testUrl,</span><br><span class="line">            data: obj,</span><br><span class="line">            success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(res.data.results) &#123;</span><br><span class="line">                    resolve(res.data.results);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    reject(res.data.error);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                reject(<span class="string">'网络出错'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么要用promise对wx.request进行封装呢？理由很简单，依然是我们之前提到的JavaScript的单线程特性，需要使用回调函数<code>callback()</code>对一些可能阻塞整个JS代码执行的操作进行封装，让它们先挂起，让代码先继续执行下去，等需要进行这些操作的时候再回过头来执行——这就是<strong>异步非阻塞的编程模式</strong>。而大部分可以调用的函数都提供了回调的使用方法，以及你自己定义的函数也可以提供回调。</p><p>回调作为一种异步编程的解决方法，看起来很美好。但如果在这样的一种场景下你估计就笑不出来了：</p><blockquote><p>例如，你向后端的一个API请求一个数据。好，数据拿到了，现在你要根据这个数据再去请求后端的另一个API的数据……<br>如此下去，你请求了3个API，OK，你终于拿到了想要的最终数据，然后你还要将这个数据处理一下才能展示到界面里面</p></blockquote><p>这样的话，你写的代码大概像这样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">wx.request(&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        wx.request(&#123;</span><br><span class="line">            <span class="comment">//...</span></span><br><span class="line">            success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">//...</span></span><br><span class="line">                wx.request(&#123;</span><br><span class="line">                    <span class="comment">//...</span></span><br><span class="line">                    success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                        <span class="comment">//format your final data.</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果再多几次回调函数的嵌套，估计你自己看这代码也差不多要阵亡了。没错，这就是所谓的<strong>回调地狱</strong>。<br>后端与MySQL之类的数据库通信也同理，你输入了一条SQL语句的结果是下一条SQL语句的内容……</p><p>那么除了疯狂地筑起一个回调金字塔之外，还有什么别的办法能够解决异步非阻塞编程问题呢？Promise就是其中之一。当然我之前用的async也是一种，但是那个写起来说实话更加别扭，至少Promise允许你用封装函数的方式进行编程，显然比写一些蜜汁有趣的函数数组正常多了。</p><p>好了，我之前提到了我用Promise封装了一个<code>post</code>函数，现在我就展示一个使用Promise解决异步问题的实例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> initUserInfo = <span class="function">(<span class="params">that</span>) =&gt;</span> &#123;</span><br><span class="line">  wx.login(&#123;</span><br><span class="line">    success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(res.code) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'获取用户登录凭证：'</span>, res.code);</span><br><span class="line"></span><br><span class="line">        post(&#123;</span><br><span class="line">          <span class="string">'msgType'</span>: <span class="string">'wxAuth'</span>, </span><br><span class="line">          <span class="string">"code"</span>: res.code</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">"收到消息："</span>, res);</span><br><span class="line">          getApp().data.openId = res;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> post(&#123;</span><br><span class="line">            <span class="string">'msgType'</span>: <span class="string">'checkIsTeachAuth'</span>,</span><br><span class="line">            <span class="string">'openId'</span>: getApp().data.openId</span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">"收到消息："</span>, res);</span><br><span class="line">          <span class="keyword">if</span> (res.isTeachAuth == <span class="literal">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">            getApp().data.isTeachmodeGlobal = <span class="number">2</span>;</span><br><span class="line">            getApp().data.teacherRealName = res.realName;</span><br><span class="line">            getApp().data.teacherAuthId = res.teacherId;</span><br><span class="line">            getApp().data.teachAuthStatus = res.status;</span><br><span class="line"></span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              isTeachMode: <span class="number">2</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> post(&#123;</span><br><span class="line">              <span class="string">'msgType'</span>: <span class="string">'getClassDataTeach'</span>,</span><br><span class="line">              <span class="string">'openId'</span>: getApp().data.openId</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            getApp().data.isTeachmodeGlobal = <span class="number">1</span>;</span><br><span class="line">            getApp().data.teachAuthStatus = res.status;</span><br><span class="line"></span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              isTeachMode: <span class="number">1</span></span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> post(&#123;</span><br><span class="line">              <span class="string">'msgType'</span>: <span class="string">'getReservedClass'</span>,</span><br><span class="line">              <span class="string">'openId'</span>: getApp().data.openId</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">"收到消息："</span>, res);</span><br><span class="line">          <span class="keyword">if</span> (getApp().data.isTeachmodeGlobal == <span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              reserveArray: format.timeFormat(res).reverse(),</span><br><span class="line">              emptyNote: <span class="string">''</span>,</span><br><span class="line">              emptyIntro: <span class="string">''</span>,</span><br><span class="line">              emptyUserName: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span> (res[<span class="number">0</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">              that.setData(&#123;</span><br><span class="line">                emptyNote: welcomeQuote,</span><br><span class="line">                emptyIntro: userWelcomeIntro,</span><br><span class="line">                emptyUserName: <span class="literal">false</span></span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            wx.stopPullDownRefresh();  </span><br><span class="line"></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              classArray: format.timeFormat(res).reverse(),</span><br><span class="line">              emptyNote: <span class="string">''</span>,</span><br><span class="line">              emptyIntro: <span class="string">''</span>,</span><br><span class="line">              emptyUserName: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span> (res[<span class="number">0</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">              that.setData(&#123;</span><br><span class="line">                emptyNote: getApp().data.teacherRealName + <span class="string">" 欢迎！"</span>,</span><br><span class="line">                emptyIntro: teacherWelcomeIntro,</span><br><span class="line">                emptyUserName: <span class="literal">false</span></span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            wx.stopPullDownRefresh();</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'发生错误：'</span>, error);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'获取用户登录态失败：'</span>, res.errMsg);        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>是不是超长无比。。。再联想一下刚才我演示的回调地狱，用回调不知道要套多少层了。。。<br>而且一个<code>post</code>函数可以反复使用，因为其传入的参数只有一个obj，就是发送到后端的json数据包，除此之外其他的操作都可以快速的复用，并且从后端返回的数据结果也可以由Promise传到下一个<code>.then</code>函数中。</p><p>除了<code>post</code>之外，我也仿造了信道通信方式，搞了一个<code>emit</code>函数。信道通信方式其实更加地先进，它是将所有的信道监听函数在初始化页面的时候就规定好了，也就是说把所有接收到后端数据之后的<code>success</code>操作都先写好了，之后再到需要向后端服务器发送数据的地方调用<code>emit</code>函数，这样也更加地灵活，发送数据时只管输入数据的格式和内容就OK了。</p><p>但是，本项目基本上除了用户在初始化数据或表单时需要将后端返回的数据进行存储和展示操作外，其他的通信操作基本上属于更新数据的范畴，也就是后端返回数据更新成功的结果后，只需调用一下数据刷新函数让服务器将更新好的数据回传即可。既然<code>emit</code>函数的功能如此确定，我也就直接将它封装好了，当然也得用用Promise了，既然都写好了，再多写个回调版本的函数就浪费了：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> emit = <span class="function">(<span class="params">obj,that</span>) =&gt;</span> &#123;</span><br><span class="line">    post(obj).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'收到消息：'</span>, res);</span><br><span class="line">        <span class="keyword">if</span> (getApp().data.isTeachModeGlobal == <span class="number">2</span>)</span><br><span class="line">            getApp().data.isTeachDataUpdated = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            getApp().data.isStuDataUpdated = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (obj.msgType == <span class="string">'reserveClass'</span> || obj.msgType == <span class="string">'editClass'</span> </span><br><span class="line">        || obj.msgType == <span class="string">'classDataUpload'</span>) &#123;</span><br><span class="line">            wx.showToast(&#123;</span><br><span class="line">                icon: <span class="string">'success'</span>,</span><br><span class="line">                title: <span class="string">'数据上传成功'</span>,</span><br><span class="line">                duration: <span class="number">3000</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        wx.startPullDownRefresh(&#123;</span><br><span class="line">            success: that.onPullDownRefresh</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'发生错误：'</span>, error);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>emit</code>函数实际用起来也就是这样的，多传了一个this指针而已：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">req.emit(&#123;</span><br><span class="line">  <span class="string">'msgType'</span>: <span class="string">'reserveClass'</span>,</span><br><span class="line">  <span class="string">'openId'</span>: getApp().data.openId,</span><br><span class="line">  <span class="string">'nickName'</span>: wx.getStorageSync(<span class="string">'nickName'</span>),</span><br><span class="line">  <span class="string">'classId'</span>: e.currentTarget.dataset.content.id</span><br><span class="line">&#125;,<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure></p><p>既然后端MySQL通信模块也要Promise封装，那么肯定也是要先定义一个用Promise封装的函数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> queryProm(sql, params) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        pool.getConnection(<span class="function">(<span class="params">error,connection</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(error) &#123; reject(error); <span class="keyword">throw</span> error; &#125; </span><br><span class="line">            connection.query(sql, params, (error, results, fields) =&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span>(results) &#123;</span><br><span class="line">                    resolve(results);</span><br><span class="line">                    connection.release();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当然，我后来也发现其实大部分的操作其实都只需要一步回调就能解决问题了，所以我也写了一个回调版本的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> query(sql, params, callback) &#123;</span><br><span class="line">    pool.getConnection(<span class="function">(<span class="params">error,connection</span>) =&gt;</span> &#123;</span><br><span class="line">      connection.query(sql, params, (error, results, fields) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line">        <span class="keyword">if</span> (results) &#123;</span><br><span class="line">          callback(error, results);</span><br><span class="line">          connection.release();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后这里也有一个比较模棱两可的经验，就是前端传到后端的json数据包内定义了<code>msgType</code>，可以在传入后端的地址是同一个时，根据msgType消息的类型进行不同的操作。<br>具体操作在后端是怎样分类的，我这里用了比较原始的switch-case语句，但是说实话，这样会造成代码整体的可读性下降。因为消息类型一多，全挤在一层switch里面了，修改和查找都相当困难，这也是我需要改进的地方——代码的合理化、层次化和结构化。</p><p>最后用Promise的效果就是这样的（这个就是之前在项目第一版中用async写过的那个操作）：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'reserveClass'</span>: </span><br><span class="line">    sql.queryProm(<span class="string">"SELECT * FROM user_reserve WHERE class_id=? AND user_id=?"</span>, </span><br><span class="line">            [req.query.classId, req.query.openId]</span><br><span class="line">        ).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(response[<span class="number">0</span>] == <span class="literal">null</span>) </span><br><span class="line">                <span class="keyword">return</span> sql.queryProm(</span><br><span class="line">                    <span class="string">"INSERT INTO user_reserve (user_id,user_nickname,class_id,submission_date) VALUES(?,?,?,NOW())"</span>,</span><br><span class="line">                    [req.query.openId, req.query.nickName, req.query.classId]</span><br><span class="line">                );</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> sql.queryProm(</span><br><span class="line">                    <span class="string">"UPDATE user_reserve SET status=1 WHERE class_id=? AND user_id=?"</span>,</span><br><span class="line">                    [req.query.classId, req.query.openId]</span><br><span class="line">                );</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">            res.send(&#123;<span class="attr">results</span>: response&#125;);</span><br><span class="line">        &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">            res.send(&#123;<span class="attr">error</span>: err&#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不要啥都写res，想啥呢</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure></p><p>这个“想啥呢”的注释是这样的，Express框架本身有一个回传数据功能的对象参数叫res，然后我写函数也习惯把数据本身叫res，这下好了，相当于我用回传的数据去调用他的成员函数send()，这一个数据哪儿来的send()函数啊？当然前端就没有收到任何回传的数据了。我纳闷了很久怎么Promise好好的就不能用了呢，最后登了服务器上去翻了翻log才发现问题，这也充分说明log在debug中的极端重要性。</p><p>当然用回调的效果是这样的： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">'cancelReserve'</span>:</span><br><span class="line">    sql.query(<span class="string">"UPDATE user_reserve SET status=0 WHERE class_id=? AND user_id=?"</span>,[req.query.classId, req.query.openId], (error, results) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(error) </span><br><span class="line">            res.send(&#123;<span class="attr">error</span>: error&#125;);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            res.send(&#123;<span class="attr">results</span>: results&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>那么既然也在服务器后端弃用了信道通信所在的腾讯云SDK，我也采用了Express原生的路由方式来将请求定位到以上MySQL通信模块所在的文件上。</p><h5 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h5><blockquote><p>别看我，我就是凑个小节数的，要不然就一个笔记太尴尬了。。。</p></blockquote><p>本次版本迭代，通过添加用户授权登录界面、从底层用原生请求方式重写前端通信模块和后端MySQL通信模块，并使用Promise进行异步编程封装，基本上修复了信道通信因登录API调整而无法使用，导致整个程序无法正常运行的bug。</p><h4 id="项目第三版"><a href="#项目第三版" class="headerlink" title="项目第三版"></a>项目第三版</h4><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP1.PNG" alt="WEAPP1"></p><p><center>小程序第三版主界面，更多预览请直接打开小程序或阅读本文后续内容</center><br></p><p>项目第三版的迭代原因是需求方提议加入普通学生用户端也能够发起一对一辅导预约，然后讲师能够对此进行接单的“辅导预约”功能。<br>我们开发方也趁着本次迭代的机会，对小程序的前端界面UI进行了大范围的重写，从而能够彻底弃用原先大范围采用腾讯云一站式小程序解决方案小程序demo的配色和界面元素的旧UI。</p><p><strong>在此特别感谢Jason Gao同学以及他的“有通知”小程序对本项目UI重写提供的设计参考和技术支持！</strong></p><p>在新UI的开发过程中的技术难点在于：</p><ol><li>取消了微信小程序的顶部、底部菜单栏后，小程序界面对于不同尺寸以及刘海屏手机的适配；</li><li>取消了底部菜单栏后，自行开发的底部菜单栏的路由结构问题；</li><li>取消了顶部菜单栏后，下拉刷新、返回导航、页面标题等顶部菜单栏功能不再实用的情况下的自主开发。</li><li>tab标签式导航栏的实现</li></ol><p>同时，我们也修复了众多之前两个版本未发现的、以及在本版本开发过程中遇到的逻辑功能上的bug，例如：</p><ol><li>预约时间相对于当前时间已经过期的未采取过期处理；</li><li>未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况；</li><li>对于人数上限、备注等留空项目的前端数据处理不当；</li><li>iOS系统下“我的页面”用户头像被背景图案覆盖的问题；</li><li>还有其他的一些细节小bug；</li></ol><h5 id="开发难点及笔记-2"><a href="#开发难点及笔记-2" class="headerlink" title="开发难点及笔记"></a>开发难点及笔记</h5><p>在谈UI开发之前，我首先得回答这个问题：为什么要隐藏顶部菜单栏以及底部菜单栏呢？</p><p>理由有两个：</p><ul><li>功能上的需要：主要是微信小程序自带的底部菜单栏定制性奇差，必须得每一个菜单项对应的路径、图标、颜色、文字，乃至菜单项的数量，全部都在<code>app.json</code>里写死了，而且样式清一色都是死板的文字/图标/文字+图标，无法进行更高级别的个性化定制。就像本项目这样<strong>加一个高度明显超出菜单栏本身的大大的加号按钮</strong>，或者加一点其他的特殊样式，用微信小程序自带的底部菜单栏都是无法实现的。同理，微信小程序自带的顶部菜单栏同样也无法像本项目这样<strong>放置一个可点击的刷新按钮</strong>。</li><li>设计上的需要：从本文中的小程序界面效果图可以看出，这种底色完全一致的、通透的视觉效果，明显区别于直接采用微信小程序自带方案的其他大多数小程序的界面，是十分夺人眼球的设计（虽然直接采用微信小程序自带方案也可以做得相当美观）。</li></ul><h6 id="UI难点之一：屏幕尺寸适配"><a href="#UI难点之一：屏幕尺寸适配" class="headerlink" title="UI难点之一：屏幕尺寸适配"></a>UI难点之一：屏幕尺寸适配</h6><p><strong>微信小程序事实上就是一种webview套壳应用的变体</strong>，这个是众所周知的事情了。所以不难联想到当使用微信小程序自带的顶部菜单栏时，小程序的wxml界面自上而下渲染的<strong>起点</strong>，应当是在顶部菜单栏的下方的，就像一般的带标题栏的安卓webview页面，都是顶部的元素帮助撑起了手机系统顶部的状态栏以及顶部的菜单栏在内的一个相当大的高度。<br>如果隐藏了顶部菜单栏的话，就会出现wxml界面直接从状态栏下方开始渲染的情况，而且一般状态栏都是最顶层的，也就是说状态栏会遮挡一部分wxml内容。。。大概像下面这样：</p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP9.PNG" alt="WEAPP9"></p><p><center>在iPhone X上有刘海的话就更加尴尬了。。。</center><br></p><p>所以需要的就是将这一部分的位置空出来，尤其是对iPhone X的刘海要额外进行适配（后来在开发者工具中的测试我们也发现了iPhone 4/iPhone 5这一类小尺寸屏幕的手机也需要额外适配）。所以我们的思路就是动态定义包裹所有其他元素的<code>&lt;view class=&quot;root&quot;&gt;</code>的<code>padding-top</code>wxss属性。尽管wxss无法使用JS进行动态更改，wxml还是能用JS进行动态更改的。所以就想出了动态定义<code>class</code>属性的内容就OK了，代码如下——<br>wxml代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"root &#123;&#123;isIpx?'root-ipx':''&#125;&#125; &#123;&#123;isIp4?'root-ip4':''&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- content --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>JS代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">wx.getSystemInfo(&#123;</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.model == <span class="string">'iPhone X'</span>)&#123;</span><br><span class="line">            getApp().data.isIpx = <span class="literal">true</span>;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                isIpx: getApp().data.isIpx</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(res.model == <span class="string">'iPhone 5'</span> || res.model == <span class="string">'iPhone 4'</span>)&#123;</span><br><span class="line">            getApp().data.isIp4 = <span class="literal">true</span>;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">                isIp4: getApp().data.isIp4</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>wxss代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.root-ip4</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">30</span>rpx; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.root-ipx</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">60</span>rpx; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是在之后的测试中发现，一旦预约课程的表单变长，可以滚动起来了以后，状态栏底下会出现本来应该被遮罩了的表单。。这是因为<code>padding-top</code>只是把顶部元素下移了，状态栏本身是透明的，所以肯定无法遮罩滚动到顶部的表单。解决方法和上面是一样的，自己再定义一个<code>&lt;view&gt;</code>元素，用来遮挡状态栏底部的其他元素就OK了，同样要对特殊尺寸的屏幕做适配，此处就不再赘述了。</p><h6 id="UI难点之二：自行开发的底部菜单栏的路由结构"><a href="#UI难点之二：自行开发的底部菜单栏的路由结构" class="headerlink" title="UI难点之二：自行开发的底部菜单栏的路由结构"></a>UI难点之二：自行开发的底部菜单栏的路由结构</h6><p>为什么要如此强调路由结构呢？因为你需要知道你当前用底部菜单栏打开的页面是哪一个。否则底部菜单栏如何将当前打开页面对应的按钮进行高亮或者其他处理，来对用户形成一种辅助的标识呢？我们在这里使用了一个<strong>相当讨巧的办法</strong>来解决这个问题：</p><p>我们并不删除底部菜单栏在<code>app.json</code>中的代码使之彻底消失，只是通过微信小程序API函数<code>wx.hideTabBar</code>对其进行隐藏，这样其基本的路由结构依然存在，无需另外写一个公共的路由代码。页面跳转可以使用<code>wx.switchTab</code>。然后由于自定义的底部菜单栏是重复出现在页面上的，准确来说应该是首页和“我的”页面上，所以我们采用了微信小程序的模板类型元素<code>&lt;template&gt;</code>来进行代码的复用：<br>wxml代码的写法是：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">"tabbar"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"tabbar-wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"tabbar-index"</span> <span class="attr">bindtap</span>=<span class="string">"tabbarRoute"</span> <span class="attr">data-index</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;indexActive?'/images/index-hl.png':'/images/index.png'&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">"color: &#123;&#123;indexActive?'#17abe3':'#bfbfbf'&#125;&#125;"</span>&gt;</span></span><br><span class="line">        首页</span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"tabbar-reserve"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"/images/new-hl.png"</span> <span class="attr">bindtap</span>=<span class="string">"tabbarRoute"</span> <span class="attr">data-index</span>=<span class="string">"1"</span> &gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"tabbar-user"</span> <span class="attr">bindtap</span>=<span class="string">"tabbarRoute"</span> <span class="attr">data-index</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;userpageActive?'/images/user-hl.png':'/images/user.png'&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">"color: &#123;&#123;userpageActive?'#17abe3':'#bfbfbf'&#125;&#125;"</span>&gt;</span></span><br><span class="line">        我的</span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在对应的页面中引用的方法也很简单<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">"/template/tabbar"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- content --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">"tabbar"</span> <span class="attr">data</span>=<span class="string">"&#123;&#123;...tabStatus&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其中，三点运算符表示传进<code>tabStatus</code>的全部子成员（这个<code>tabStatus</code>有两个成员：<code>indexActive</code>和<code>userpageActive</code>），也就意味着上面代码块里的<code>&lt;template&gt;</code>中的所有<code>indexActive</code>和<code>userpageActive</code>不用再写成<code>tabStatus.indexActive</code>和<code>tabStatus.userpageActive</code>了，很方便吧，这可是ES6的特性哦！<br>wxss的代码也贴一下，这样也可以直接套用样式：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tabbar-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">90</span>rpx;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">35</span>rpx;</span><br><span class="line">  <span class="attribute">border-top</span>: .<span class="number">5px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(256,256,256,0.9);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabbar-wrap</span> <span class="selector-tag">view</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabbar-wrap</span> <span class="selector-class">.tabbar-reserve</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>:fixed;</span><br><span class="line">  <span class="attribute">bottom</span>:<span class="number">30</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabbar-wrap</span> <span class="selector-tag">view</span> <span class="selector-tag">image</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60</span>rpx;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabbar-wrap</span> <span class="selector-class">.tabbar-reserve</span> <span class="selector-tag">image</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">115</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">115</span>rpx;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;  </span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tabbar-wrap</span> <span class="selector-tag">view</span> <span class="selector-tag">view</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">25</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">1</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以上操作的教程来源是<a href="https://blog.csdn.net/w10322331/article/details/80351713" target="_blank" rel="noopener">这里</a>。</p><h6 id="UI难点之三：重写返回导航、页面标题和刷新组件"><a href="#UI难点之三：重写返回导航、页面标题和刷新组件" class="headerlink" title="UI难点之三：重写返回导航、页面标题和刷新组件"></a>UI难点之三：重写返回导航、页面标题和刷新组件</h6><p>既然隐藏了顶部菜单栏，可以说也相当于在打开新页面时也失去了微信小程序自动生成的标题和返回按钮，然后下拉刷新也别扭了很多（尤其是在iPhone X上，你下拉刷新的时候根本看不到那个刷新动画。。。），这就意味着以上功能全部都得自主开发。</p><p>我的解决方案也异常简单，返回导航直接使用微信小程序的API函数<code>wx.navigateBack</code>，刷新也不过是在图标上绑定钩子函数，这里的主要难点在于<strong>刷新动画的协调性</strong>。<br>具体怎么说呢？wxss本质上就是CSS，刷新动画的一般实现都是一个圆形刷新图标的旋转，而这个旋转一般都是CSS的效果。但是若像本项目一样使用带箭头的圆环，则会出现一个很尴尬的情况：<br>当你正在“加载数据”这一状态时，圆环是不停旋转的，而当“数据加载结束”时，圆环需要处于一个静止的状态。若将静止状态设置为一个固定的图片，例如说刷新图标的箭头处于图标的正12点方向，则你会发现，”加载数据”这一状态结束时，箭头并不一定处于正12点，而在切换到“数据加载结束”这一状态时，箭头突然就跳到了正12点方向。</p><p>可以先看看“有通知”小程序的刷新动画实现方法，基本上就是点击刷新后固定地转一圈，这样既避免了上述尴尬的情况，也可以让用户体验到类似于“转了一圈就加载了”的“快速加载”的观感。</p><p>那么我们是如何实现的呢？可以说是一次很成功的尝试吧：让“数据加载结束”这一静止状态不再是一张固定的图片，而是在下一次加载时箭头直接从之前停下的方向继续开始转动！这样给用户的体验就不再是十分突兀的，反而有一种很自然自然的流畅感和美感。</p><p>实现方法也很简单，设定好不同状态下的CSS属性即可，只不过需要JS在与后端通信的加载过程中向wxml里刷新图标的<code>style=&quot;&quot;</code>传入不同的变量，以启用或关闭不同的动画。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line</span> <span class="selector-class">.title-wrap</span> <span class="selector-class">.refresh-button</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">45</span>rpx <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">90</span>rpx;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">10</span>rpx;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">15</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#6d6d72</span>;</span><br><span class="line">  <span class="attribute">animation</span>: spin <span class="number">800ms</span> infinite linear;  </span><br><span class="line">  <span class="attribute">animation-play-state</span>: paused;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.line</span> <span class="selector-class">.title-wrap</span> <span class="selector-class">.refresh-button</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">animation-play-state</span>: running;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">keyframes</span> spin &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">60%</span> <span class="number">55%</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(360deg);</span><br><span class="line">    <span class="attribute">-webkit-transform-origin</span>: <span class="number">60%</span> <span class="number">55%</span>;  </span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(0deg);</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">60%</span> <span class="number">55%</span>;  </span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(0deg);</span><br><span class="line">    <span class="attribute">-webkit-transform-origin</span>: <span class="number">60%</span> <span class="number">55%</span>;  </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这个<code>animation-play-state</code>相当关键，就是这一属性支持了我们的刷新开始和结束的自然切换。</p><p>哦对了，貌似还有页面标题没讲，这个其实就是自己添加标题写在相应的位置，如果需要动态标题则往wxml中添加变量。注意给返回、刷新之类的按钮留好位置即可。</p><h6 id="UI难点之四：tab标签式导航栏的实现"><a href="#UI难点之四：tab标签式导航栏的实现" class="headerlink" title="UI难点之四：tab标签式导航栏的实现"></a>UI难点之四：tab标签式导航栏的实现</h6><p>这个说实话网络上教程相当多，但是这里仍然有一些亮点，例如在高亮标签下的“下划线”。这并不是简单的用CSS的下划线属性实现的，而是使用了CSS的伪类概念。说实话，在后来其他项目的开发过程中，我才真正开始理解并有意识地使用起了伪类，给某一页面元素的正上方或正下方添加一些附属元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"navbar"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tabbar标签式导航栏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;navArrayStu&#125;&#125;"</span> <span class="attr">data-index</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"item &#123;&#123;currentNavTab==index?'active':''&#125;&#125;"</span> <span class="attr">wx:key</span>=<span class="string">"unique"</span> <span class="attr">bindtap</span>=<span class="string">"bindNavbarTap"</span>&gt;</span></span><br><span class="line">    &#123;&#123;item&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;currentNavTab==0&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当currentNavTab==0时显示这里的内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;currentNavTab==1&#125;&#125;"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当currentNavTab==1时显示这里的内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bindNavbarTap(e) &#123;</span><br><span class="line">  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">    currentNavTab: e.currentTarget.dataset.index</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.navbar</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: lighter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.navbar</span> <span class="selector-class">.item</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 伪类的使用 */</span></span><br><span class="line"><span class="selector-class">.navbar</span> <span class="selector-class">.item</span><span class="selector-class">.active</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5</span>rpx;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#6d6d72</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="BUG解决之一：预约时间相对于当前时间已经过期的未采取过期处理"><a href="#BUG解决之一：预约时间相对于当前时间已经过期的未采取过期处理" class="headerlink" title="BUG解决之一：预约时间相对于当前时间已经过期的未采取过期处理"></a>BUG解决之一：预约时间相对于当前时间已经过期的未采取过期处理</h6><p>过期处理说实话确实是个败笔，因为这个东西本来应该是后端完成的东西，我却非常不厚道的在小程序里面加入了这个功能（不是在批评某些“大前端”思想，但是这个确实后端来做会更好一点，毕竟数据量一大还不如后端处理好了再发给前端，某些过期数据的体积也可以适当压缩一下，况且<strong>我到现在都还没做分页</strong>，感觉药丸。。。）。而且这个过期处理确实挺重要的，在这种预约类小程序里面，所以我也在寻找更好的解决方案，希望（如果有坚持读到这里的）大佬能够联系我提供一些建议，不胜感激！</p><p>我的想法是一拿到数据就交给某个工具函数去处理数据，处理完之后再返回数据。这里我直接把过期处理添加到了时间处理函数里面，具体工具函数如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> curDate= utils.formatTime(<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line"><span class="keyword">var</span> curDateFull = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> timeFormat = <span class="function">(<span class="params">str, contentType</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (contentType == <span class="string">'class'</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> start = str[i].class_timestart;</span><br><span class="line">      <span class="keyword">var</span> end = str[i].class_timend;</span><br><span class="line">      <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(str[i].class_date.slice(<span class="number">0</span>, <span class="number">10</span>));</span><br><span class="line">      <span class="keyword">var</span> itemDate = str[i].class_date;      </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (contentType == <span class="string">'course'</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> start = str[i].course_timestart;</span><br><span class="line">      <span class="keyword">var</span> end = str[i].course_timend;</span><br><span class="line">      <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(str[i].course_date.slice(<span class="number">0</span>, <span class="number">10</span>));</span><br><span class="line">      <span class="keyword">var</span> itemDate = str[i].course_date;      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> curTime = curDateFull.toLocaleString(<span class="string">'chinese'</span>, &#123; <span class="attr">hour12</span>: <span class="literal">false</span> &#125;).slice(<span class="number">10</span>, <span class="number">18</span>).replace(<span class="regexp">/:/g</span>, <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">var</span> itemTime = start.replace(<span class="regexp">/:/g</span>, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 过期处理在这儿⬇️</span></span><br><span class="line">    <span class="comment">// 如果该记录的日期本身就小于当前的日期，一定过期</span></span><br><span class="line">    <span class="comment">// 如果该记录的日期与当前日期相同，但时间比当前时间要早，也一定过期</span></span><br><span class="line">    <span class="keyword">if</span>((itemDate &lt; curDate) || ((itemDate == curDate) &amp;&amp; (curTime &gt; itemTime)) )&#123;</span><br><span class="line">      str[i].overtime = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      str[i].overtime = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    date = date.getFullYear() + <span class="string">"年"</span> +</span><br><span class="line">      (<span class="built_in">parseInt</span>(date.getMonth()) + <span class="number">1</span>).toString() + <span class="string">"月"</span> +</span><br><span class="line">      date.getDate() + <span class="string">"日"</span>;</span><br><span class="line">    start = start.slice(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (start.slice(<span class="number">0</span>, <span class="number">1</span>) == <span class="string">"0"</span>) &#123;</span><br><span class="line">      start = start.slice(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    end = end.slice(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (end.slice(<span class="number">0</span>, <span class="number">1</span>) == <span class="string">"0"</span>) &#123;</span><br><span class="line">      end = end.slice(<span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (contentType == <span class="string">'class'</span>) &#123;</span><br><span class="line">      str[i].class_date = date;</span><br><span class="line">      str[i].class_timestart = start;</span><br><span class="line">      str[i].class_timend = end</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (contentType == <span class="string">'course'</span>) &#123;</span><br><span class="line">      str[i].course_date = date;</span><br><span class="line">      str[i].course_timestart = start;</span><br><span class="line">      str[i].course_timend = end</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"时间处理后："</span>, str);</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h6 id="BUG解决之二：未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况"><a href="#BUG解决之二：未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况" class="headerlink" title="BUG解决之二：未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况"></a>BUG解决之二：未对辅导预约进行一对一绑定而造成的多个讲师抢单重复预约的情况</h6><p>“辅导预约”这个功能事实上也就是用户“课程预约”功能的一个翻转：讲师自由发布课程，多个用户预约一个讲师的课程，人数上限可以有也可以不设置。反之，用户自由发布辅导需求，多个讲师预约一个用户的课程，但是是一对一的课程，所以人数上限其实是1。但我这里没有再使用人数上限的功能了，而是采用了一个很清奇的绑定思路：多表左联合查询。</p><p>这个说实话也是个败笔😂（没错，包括上面那个在内，你在本文看到的所有bug解决的思路，都是些让你觉得很滑稽的解决方式，因为我当时是真的没办法快速找到一些最佳实践的。。。）<br>正常情况下的思路应该是要去维护一个新的数据库字段，就是“是否已经有讲师预约”这样的一个标志字段。<br>但是我这里的处理思路就很清奇，既然已经被讲师预约了的话，那是不是可以让用户的预约数据库表和讲师的接单数据库表进行一个左联合查询，然后如果某个字段联合查询后查询不到讲师的信息（例如昵称nickname之类的）就可以认为是未被讲师接单呢？反之是不是就可以被认为是已经被接单呢？<br>这个清奇的思路事实上是很差劲的，因为这个涉及到一个查询效率的问题，联合查询总的来说肯定要比单表查询要慢很多，数据一多肯定影响性能，而且这样返回前台数据不可避免地泄露了讲师的信息。</p><p>当然，还是那句老话，安全起见，后端数据库表结构以及相应的SQL查询语句我是不可能公开的。所以这里就只有描述，没有代码了。</p><h6 id="BUG解决之三：对于人数上限、备注等留空项目的前端数据处理不当"><a href="#BUG解决之三：对于人数上限、备注等留空项目的前端数据处理不当" class="headerlink" title="BUG解决之三：对于人数上限、备注等留空项目的前端数据处理不当"></a>BUG解决之三：对于人数上限、备注等留空项目的前端数据处理不当</h6><p>这是个相当玄学的问题，什么叫“处理不当”呢？这涉及到用户体验与数据库管理之间的矛盾。用户当然希望这样的功能实现：在填写的时候，“人数上限”一栏留空，就代表人数上限为无上限，填入数字再表示有一个确定的上限，“备注”留空，就代表没有备注，填入备注就代表有一段备注。但是数据库管理的时候，一个字段的格式一般是固定的，我不可能为了存储“无上限”这一信息就让一个人数上限的字段同时支持整型数和字符或者别的什么，所以我只能无奈地让数字0代表无上限。同时，备注也可以存储为一个“NULL”来代表无备注。但是问题来了，当上传到后端时，前端至少需要对数据做一个预处理：把人数上限从<code>undefined</code>改成0，把备注从<code>undefined</code>改成NULL。我当时就考虑到这里，但是后来才发现：等等，那后端返回到前端呢？不是也得再经历一次相反的转换吗？</p><p>大概就是这样一个逻辑：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (classItem.student_limit == <span class="string">'0'</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        studentLimit: <span class="string">'无上限'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        studentLimit: classItem.student_limit</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (classItem.student_sum == <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        studentSum: <span class="string">'0'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        studentSum: classItem.student_sum</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (classItem.class_intro == <span class="string">"undefined"</span>) &#123;</span><br><span class="line">    classItem.class_intro = <span class="string">"无"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h6 id="BUG解决之四：iOS系统下“我的页面”用户头像被背景图案覆盖的问题"><a href="#BUG解决之四：iOS系统下“我的页面”用户头像被背景图案覆盖的问题" class="headerlink" title="BUG解决之四：iOS系统下“我的页面”用户头像被背景图案覆盖的问题"></a>BUG解决之四：iOS系统下“我的页面”用户头像被背景图案覆盖的问题</h6><p>这个确实是个意想不到的BUG，在正式上线之后才发现Safari浏览器的渲染引擎存在着这样的bug：当一个具有<code>transform</code>的CSS属性的元素作为背景，而另外一个图片元素在其上方时，将不能够通过<code>z-index</code>属性来控制它们的层级关系。</p><p>之后的解决方案是从网上搜索得出的<strong>“以毒攻毒”法</strong>。是的，你没有看错，这个方法就是用<code>transform</code>来解决<code>transform</code>带来的问题的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-class">.avatar-img</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">140</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">140</span>rpx;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">50</span>rpx auto <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfbfbf</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(100rpx) <span class="comment">/* 这个就是解决办法，“以毒攻毒”，简单粗暴 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.colored-top</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: -<span class="number">35</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#17abe3</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40%</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(8deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="其他小BUG"><a href="#其他小BUG" class="headerlink" title="其他小BUG"></a>其他小BUG</h6><p>这里将会根据项目当前进度，及时更新一些其他的小BUG以及处理方式，也就相当于一些后续了~</p><h5 id="小程序最终界面-1"><a href="#小程序最终界面-1" class="headerlink" title="小程序最终界面"></a>小程序最终界面</h5><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP1.PNG" alt="WEAPP1"></p><p><center>小程序第三版主界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP10.jpeg" alt="WEAPP1"></p><p><center>用户课程预约界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP11.jpeg" alt="WEAPP1"></p><p><center>用户辅导预约界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP12.jpeg" alt="WEAPP1"></p><p><center>讲师辅导接单界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP13.jpeg" alt="WEAPP1"></p><p><center>讲师辅导接单界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP14.jpeg" alt="WEAPP1"></p><p><center>讲师发布课程界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP15.jpeg" alt="WEAPP1"></p><p><center>“我的”界面</center><br></p><p><img src="/2018/06/28/Notes-About-Recent-Projects-3/WEAPP16.jpeg" alt="WEAPP1"></p><p><center>“关于”界面</center><br></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><blockquote><p>先。。。先容我吐槽一下吧。<br>讲了挺多的，确实，一看发现上千行了😂（至少在markdown里面是这样，1.3k），我打算以后有机会的话拆成两篇文章发布。<br>写的时间跨度一个月吧，因为各种事情，写写停停，甚至在某几次提笔重新开始继续写下去的时候，都发现自己都不知道之前到底写了什么，现在该写什么，写的初心是什么。都快被各种事情给搞忘了。<br>所以说，要想系统性的总结一个东西，很难。<br>况且我这个小程序至少前端代码是必须要放到GitHub上去的，要想再系统性地整理并分享一个东西，更难。</p></blockquote><p>首要的，我还是非常感谢明导和郑导、感谢搭档王云程同学（@fafnir）、感谢提供过帮助的高亦非同学（Jason Gao）以及感谢计通学院学生讲师团，给予了我这次项目实战的宝贵机会。如果没有这次实战机会的话，估计我也很难得出如此系统的经验，并写出内容如此（冗长而）丰富的文章了吧。这是一次从零开始、至少是从需求开始的一次系统性的开发，虽然过程不免因为个人水平仍处于成长期、个人其他事务的干扰等各种原因有着种种波折起伏，但是所有的过程都是在从宏观到微观、从代码开发到客户沟通再到界面设计，几乎是全方位地锻炼我的各种能力。</p><p>所以，再次感谢在开发过程中给予了我各种帮助和指导的所有人，谢谢大家！</p><blockquote><p>最后，这是本站的第七篇正式发文，感谢阅读。<br>如有意见和建议，欢迎通过首页的联系方式联系作者。<br>本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;The most stupid work&lt;br&gt;might be the most important one to cherish.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此处收录一些近期的项目笔记，&lt;br&gt;这次真的是最近正在干的事情了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>Environment Configuration for Yolo-darknet</title>
    <link href="http://lmy98129.github.io/2018/02/20/Environment-Configuration-for-Yolo-darknet/"/>
    <id>http://lmy98129.github.io/2018/02/20/Environment-Configuration-for-Yolo-darknet/</id>
    <published>2018-02-20T12:30:07.000Z</published>
    <updated>2018-02-20T14:58:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Just do it.<br>Just do something new and do it yourself.</p></blockquote><p>记录一些关于yolo-darknet环境配置踩过的坑。<br>能力有限，但求指点，欢迎交流。</p><a id="more"></a><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul><li>OS: Ubuntu 16.04 LTS</li><li>PC: ASUS K550J (EFI enable)</li><li>GPU: GTX950M</li><li>CPU: i5-4200H</li><li>RAM: 4G</li><li>DISK: 1T HDD (no SSD) </li></ul><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><h3 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h3><ol><li>用UltraISO把iso文件烧到你的U盘，<strong>进BIOS打开EFI引导，并选择EFI模式下的U盘为第一引导项</strong></li><li>安装Ubuntu到一个空白分区（可以通过分区压缩获得，如果是全新电脑就直接开始分区了）：<ul><li><strong>注意根据提示划分那块bios efi的小分区，几十K即可</strong>；</li><li><strong>划分swap交换分区，一般是你内存大小的3倍大，划在主分区后面</strong>；</li><li>剩下的划给主分区；</li><li>选择安装启动器到<strong>Windows使用的那个EFI启动分区</strong>。</li></ul></li><li>进入分区界面前有几个选项要注意：<ul><li>让你顺带安装更新的那个，<strong>不要勾选</strong>，更新的源大多自动匹配到了国外的，网速你懂的；</li><li>让你安装第三方闭源驱动和软件的，<strong>必须勾选</strong>，能解决很多开源驱动带来的问题。</li></ul></li><li>安装，然后回到BIOS里面你会惊奇的发现出现了Ubuntu的EFI模式引导项（准确来说是两个，估计是那次我多搞了一个/boot）选择它为第一个。</li><li>成功进入Ubuntu</li></ol><h3 id="安装OpenCV"><a href="#安装OpenCV" class="headerlink" title="安装OpenCV"></a>安装OpenCV</h3><p>安装OpenCV主要是为了使用外置摄像头进行图像采集。</p><p>GitHub上有自动安装版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo su </span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jayrambhia/Install-OpenCV/tree/master/Ubuntu</span><br></pre></td></tr></table></figure><p>进入安装目录下的/2.4，提升*.sh文件的权限并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">chmod a+x *.sh</span><br><span class="line">./opencv2_4_10.sh</span><br></pre></td></tr></table></figure><p>然后就会开始<strong>极其漫长</strong>的安装过程。</p><blockquote><p>第一次安装到某个阶段的时候卡死，<br>硬盘灯不闪，鼠标键盘没反应，我还以为安装失败强行重启了。<br>然后又开始一遍，又卡死。<br>我绝望了，但是冷静了下来，想了想<br>——怕是自己电脑配置太渣。<br>然后在安装前关闭了所有无关程序，<br>唯独打开了系统监视器（即Windows下的任务管理器）。<br>之后就非常惊奇地看到卡死的时候：<br>内存+CPU，全部占用100%<br>然后过了大概一个多小时，又全部降回去了，<br>没过三分钟，又是内存飙到100%，CPU反倒正常了<br>目测过了三个多小时，还是这个样子，倒是命令行每隔十几分钟跳一次字，<br>系统时钟已经卡到了和实际时间存在了十分钟到半小时不等的时差，<br>只有某几次命令行跳字的时候，内存占用下来了一点，系统时间一秒刷新了十几分钟<br>最后一脸无奈地睡了。<br>第二天打开笔记本盖子一看，<br>装好了，老大一个success。</p></blockquote><h3 id="安装darknet"><a href="#安装darknet" class="headerlink" title="安装darknet"></a>安装darknet</h3><p>打开终端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">git <span class="built_in">clone</span> http://github.com/pjreddie/darknet.git</span><br><span class="line"><span class="built_in">cd</span> darknet</span><br></pre></td></tr></table></figure></p><p>用gedit修改makefile文件<br><strong>令OPENCV=1</strong><br>然后在终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br></pre></td></tr></table></figure><h3 id="安装NVIDIA官方GPU驱动"><a href="#安装NVIDIA官方GPU驱动" class="headerlink" title="安装NVIDIA官方GPU驱动"></a>安装NVIDIA官方GPU驱动</h3><p>首先<strong>禁用开源驱动</strong></p><p>新建一个.conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist-nouveau.conf</span><br></pre></td></tr></table></figure><p>写入以下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">blacklist lbm-nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line">alias nouveau off</span><br><span class="line">alias lbm-nouveau off</span><br></pre></td></tr></table></figure></p><p>保存，重启后再打开终端，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure></p><p>无输出即禁用成功</p><p>正式开始安装NVIDIA官方驱动了<br>我这里选择的是<strong>直接到系统的“软件和更新”里的“附加驱动”选择安装NVIDIA的专有驱动</strong><br>（不要管他是否显示tested，安装就是了）</p><p>等待安装成功后，重启打开终端，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure></p><p>正确显示你当前GPU的状况就OK了</p><h3 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h3><p>CUDA下载地址：<a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-downloads</a><br>选项顺序是Linux-x86_64-Ubuntu-16.04-deb(local)<br>1点多G，然后找个下载速度快的地方下了它，推荐<strong>迅雷等下载工具</strong>，<br>虽然并没有加速，但毕竟服务器在境外，<strong>浏览器没法断点续传</strong>，连接一断就得重新下载。</p><p>然后把下载好的文件包拷到“/home/用户名/”目录下，在终端里面输入<br><strong>（注意你的deb文件名不一定是这个，这个是旧版的了）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i cuda-repo-ubuntu1404-7-5-local_7.5-18_amd64.deb</span><br><span class="line">sudo apt-get update </span><br><span class="line">sudo apt-get install cuda</span><br></pre></td></tr></table></figure><p>安装完成后输入<br><strong>（注意你的cuda文件夹不一定是这个7.5的，这个是旧版的了）</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="built_in">local</span>/cuda/lib64:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/cuda-7.5/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><h3 id="再次安装darknet"><a href="#再次安装darknet" class="headerlink" title="再次安装darknet"></a>再次安装darknet</h3><p>再次用gedit打开makefile<br><strong>（注意你的cuda文件夹不一定是这个7.5的，这个是旧版的了）</strong><br>令开头GPU=1，同时令NVCC = /usr/local/cuda-7.5/bin/nvcc后保存退出<br>然后在终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j8</span><br></pre></td></tr></table></figure><h2 id="测试darknet"><a href="#测试darknet" class="headerlink" title="测试darknet"></a>测试darknet</h2><h3 id="下载模型-测试模型"><a href="#下载模型-测试模型" class="headerlink" title="下载模型+测试模型"></a>下载模型+测试模型</h3><p>到这儿下载*.weight格式的模型：<a href="http://pjreddie.com/darknet/yolo/" target="_blank" rel="noopener">http://pjreddie.com/darknet/yolo/</a></p><p>终端切换到darknet的安装目录下<br>示例命令如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./darknet detect cfg/yolo.cfg yolo.weight data/horses.jpg</span><br><span class="line">./darknet yolo <span class="built_in">test</span> cfg/yolo-tiny.cfg yolo-tiny.weight</span><br></pre></td></tr></table></figure></p><h3 id="使用电脑-手机摄像头采集图像"><a href="#使用电脑-手机摄像头采集图像" class="headerlink" title="使用电脑/手机摄像头采集图像"></a>使用电脑/手机摄像头采集图像</h3><p>电脑摄像头：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detector demo cfg/voc.data cfg/tiny-yolo-voc.cfg weights/tiny-yolo-voc.weights</span><br></pre></td></tr></table></figure></p><p>手机摄像头：</p><p>先在手机上安装好<strong>IP摄像头</strong>APP，配置好地址后，先用浏览器访问以确定视频源的路径<br><strong>(因此这里的地址是你配置并确定好视频源的地址)</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./darknet detector demo data/coco.data yolo.cfg yolo.weights http://192.168.191.2:8080/video</span><br></pre></td></tr></table></figure></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="http://blog.csdn.net/samylee/article/details/51684856" target="_blank" rel="noopener">http://blog.csdn.net/samylee/article/details/51684856</a></li><li><a href="http://blog.csdn.net/wjbwjbwjbwjb/article/details/52125475" target="_blank" rel="noopener">http://blog.csdn.net/wjbwjbwjbwjb/article/details/52125475</a></li><li><a href="http://blog.csdn.net/u014696921/article/details/65626751" target="_blank" rel="noopener">http://blog.csdn.net/u014696921/article/details/65626751</a></li><li><a href="http://blog.csdn.net/wuzuyu365/article/details/52469131" target="_blank" rel="noopener">http://blog.csdn.net/wuzuyu365/article/details/52469131</a></li><li><a href="http://blog.csdn.net/zafir_410/article/details/73188228" target="_blank" rel="noopener">http://blog.csdn.net/zafir_410/article/details/73188228</a></li><li><a href="http://blog.csdn.net/u013832707/article/details/53438574" target="_blank" rel="noopener">http://blog.csdn.net/u013832707/article/details/53438574</a></li><li><a href="https://www.cnblogs.com/jackchen-Net/p/7954138.html" target="_blank" rel="noopener">https://www.cnblogs.com/jackchen-Net/p/7954138.html</a></li></ol><blockquote><p>最后，这是本站的第六篇正式发文，感谢阅读。<br>如有意见和建议，欢迎通过首页的联系方式联系作者，<br>本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Just do it.&lt;br&gt;Just do something new and do it yourself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;记录一些关于yolo-darknet环境配置踩过的坑。&lt;br&gt;能力有限，但求指点，欢迎交流。&lt;/p&gt;
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>Some Tips of Web Programming</title>
    <link href="http://lmy98129.github.io/2018/02/18/Some-Tips-of-Web-Programming/"/>
    <id>http://lmy98129.github.io/2018/02/18/Some-Tips-of-Web-Programming/</id>
    <published>2018-02-18T13:40:24.000Z</published>
    <updated>2018-02-19T01:39:28.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Why did you hate tips but not so now?<br>‘Cause I don’t think it bad to become hateful.</p></blockquote><p>作为一个新手，分享一些毫无技术含量的小技巧<br>水平有限，如有错漏，多多包涵。</p><a id="more"></a><h2 id="工具-·-关联性"><a href="#工具-·-关联性" class="headerlink" title="工具 · 关联性"></a>工具 · 关联性</h2><p>如果需要在线编辑服务器上的代码，<br>你，<br>或许有一百种方法把文件下载下来；<br>或许有一百种方法把文件上传上去；<br>或许有一百种方法让项目本地测试；<br>或许有一百种方法让项目上线测试。</p><p>那么，作为一个（至少没我菜的）新手，<br>如何做一些事情，<br>让一些过程自动简化，<br>哪怕只是那么一丁点呢？</p><p>所以就到了让你使用的工具之间具有关联性的时候了。<br>虽然我也没走版本控制、自动测试之类的正道（哭笑.jpg</p><blockquote><p>好的好的，我知道了。<br>以后会改的，以后会改的。。。</p></blockquote><p>此处示例为：FileZila+Putty+VSCode+Chrome Dev Tool</p><h3 id="在线编辑文件（自动上传下载）"><a href="#在线编辑文件（自动上传下载）" class="headerlink" title="在线编辑文件（自动上传下载）"></a>在线编辑文件（自动上传下载）</h3><ol><li>将服务器上你需要在线编辑的文件格式的默认打开方式修改为VSCode（或其他你需要的编辑器）</li><li>重新打开你的FTP上传下载工具（例如FileZila），登录你的服务器，右键你想要编辑的文件，选择“编辑”（或其他的类似选项，试试便知）</li><li>此时你会发现，你的FTP工具自动使用你之前设定的编辑器，打开了这个文件。</li><li>你编辑了文件并按了保存。</li><li>你的FTP工具提醒你是否要上传该文件的最新版本（你甚至可以设置为无需提醒）</li><li>你点击了确定</li><li>完美</li></ol><p>是不是不需要刻意下载和上传就完成了更改？<br>原理就是FTP工具其实是将服务器上的文件存放在了一个临时文件夹中，供你设定好的编辑器打开它，<br><strong>与此同时，FTP工具顺带存下了文件在服务器上的地址</strong><br>当它发生了更改时，再询问你是否上传或者自动上传，自动按照之前保存的地址，回传并替换了它。</p><blockquote><p>好处？能吃吗？<br>……当，当然啦。</p></blockquote><p>当你需要同时更改好几个不同位置的文件时：</p><ul><li>你<strong>不需要</strong>记得哪些文件是之前改完传上去了的，哪些是还没改完的</li><li>你<strong>不需要</strong>记得这些乱糟糟的文件各自到底存放到了哪里</li><li>你<strong>只需要</strong>找到它，修改它，保存它。</li></ul><p>一气呵成，和<strong>操作本地文件</strong>的逻辑高度一致了</p><h3 id="在线备份项目（打包和下载）"><a href="#在线备份项目（打包和下载）" class="headerlink" title="在线备份项目（打包和下载）"></a>在线备份项目（打包和下载）</h3><ol><li>使用Putty输入命令对项目文件进行zip打包或者数据导出</li><li>使用FileZila对打包好的文件批量下载</li><li>没了，你就备份好了呗（不放心的本地搭个环境再本地测试下有没有哪里不对的地方就是了</li></ol><blockquote><p>简单吗？<br>简单。</p></blockquote><p>但是大部分新手想备份下所有的东西，肯定会纠结这么一秒钟：</p><ul><li>“噢，我的SSH工具下载不了文件。”</li><li>“唉，我的FTP工具下载文件夹的时间全花在打开路径上啦！”</li><li><strong>用你的SSH工具打个包不就好了吗？</strong></li></ul><p>所有人最初都有一个一无所知的时候。过去就好。</p><h3 id="在线调试项目（开发者工具的应用）"><a href="#在线调试项目（开发者工具的应用）" class="headerlink" title="在线调试项目（开发者工具的应用）"></a>在线调试项目（开发者工具的应用）</h3><p>当你想测试一段JS（尤其是jQuery）代码的是否正确应用到相应元素、达到相应效果的时候<br>当你想修改一下你Web项目的CSS属性同时想直接看到效果的时候<br>当你想直接往在线的html页面内添加、修改代码并看到效果的时候<br>当你想看到不同屏幕尺寸下、连续变化的窗口尺寸下响应式界面的变化是否符合预期的时候</p><p>开发者工具的重要性就凸显了，<br>没错，按下那个你有些生疏的快捷键，打开它。</p><p>有时间多读读它的文档或教程——<br>经过一些简单的配置，你不仅仅能够实时预览的你的更改，<br>抓到看似平稳运行的表面下各种奇形怪状的bug，<br>你甚至还能实时保存你的更改（<strong>例如Chrome Dev Tool的WorkSpace功能</strong>）</p><p>多了解各个选项卡的功能和含义，它们存在的背后都是一个又一个鲜活的需求：<br>响应式页面、加载时间、性能优化、bug修复……</p><p>出现错误和提示时别怕——<br>它意味着你仍然有让你的项目继续优化的方向</p><blockquote><p>低能预警：之后的就不大像Tips了……<br>没错，我在强行凑字数（哭笑.jpg</p></blockquote><h2 id="知识-·-广谱性"><a href="#知识-·-广谱性" class="headerlink" title="知识 · 广谱性"></a>知识 · 广谱性</h2><p>是的，我用了一个医药学的名词。<br>只想说明：知识不仅仅在于积累的深度和广度<br>而更在于应用的深度和广度</p><p><strong>善于使用搜索引擎</strong><br><strong>善于使用Ctrl+F</strong></p><p>这段话永不过时。我举双手赞成。</p><p>但是，不能只局限于</p><blockquote><p>这段代码好厉害<br>Look, it works!</p></blockquote><p>而是要多想一步：</p><blockquote><p>How does it work?<br>Where does it work?<br>How might it work better?<br>Where might it work as well? </p></blockquote><p>以及</p><blockquote><p>Where and how can I find something good like this?<br>Why not try something new? </p></blockquote><p>广积粮。</p><h2 id="方案-·-普适性"><a href="#方案-·-普适性" class="headerlink" title="方案 · 普适性"></a>方案 · 普适性</h2><p>当你还没有到达通过造轮子解决问题这种水平的时候，<br>选择一个使用最广泛的解决方案是最直接、最经济、也是最恰当的。</p><p>选择的方案越小众、越特殊，在出现问题以及遇到疑惑时，<br>你能够得到的帮助是越稀少的<br>你的问题越专一，你能够获得对应解决方案的概率也是递减的<br>而一个普适性的方案选择，不仅能够提升工作效率<br>也能有益于你作为一个新手的学习</p><p>所以，当你还是一个新手的时候，选择一个普适性的解决方案是最佳的。</p><p>坑总会有的，但不是现在。<br><strong>避免踩坑，快速成长</strong></p><blockquote><p>最后，这是本站的第五篇正式发文，感谢阅读。<br>如有意见和建议，欢迎通过首页的联系方式联系作者，<br>本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Why did you hate tips but not so now?&lt;br&gt;‘Cause I don’t think it bad to become hateful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一个新手，分享一些毫无技术含量的小技巧&lt;br&gt;水平有限，如有错漏，多多包涵。&lt;/p&gt;
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
      <category term="understanding" scheme="http://lmy98129.github.io/tags/understanding/"/>
    
  </entry>
  
  <entry>
    <title>Notes About Recent Projects 2</title>
    <link href="http://lmy98129.github.io/2018/02/17/Notes-About-Recent-Projects-2/"/>
    <id>http://lmy98129.github.io/2018/02/17/Notes-About-Recent-Projects-2/</id>
    <published>2018-02-17T13:49:14.000Z</published>
    <updated>2018-07-02T10:43:02.000Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="Enter password here." />    <label for="pass">Enter password here.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome. Sorry but password is required to read my notes.
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>Notes About Recent Projects 1</title>
    <link href="http://lmy98129.github.io/2018/02/15/Notes-About-Recent-Projects-1/"/>
    <id>http://lmy98129.github.io/2018/02/15/Notes-About-Recent-Projects-1/</id>
    <published>2018-02-15T08:01:17.000Z</published>
    <updated>2018-07-02T10:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="security">  <div class="input-container">  <input type="password" class="form-control" id="pass" placeholder="Enter password here." />    <label for="pass">Enter password here.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome. Sorry but password is required to read my notes.
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>Understanding on HTML</title>
    <link href="http://lmy98129.github.io/2018/02/14/Understanding-on-HTML/"/>
    <id>http://lmy98129.github.io/2018/02/14/Understanding-on-HTML/</id>
    <published>2018-02-14T07:58:30.000Z</published>
    <updated>2018-02-23T03:44:55.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Take something for example,<br>which seems to be far more effctive at times. </p></blockquote><p>讲一些对于HTML的理解，顺带讲讲CSS和JavaScript<br>水平有限，如有偏颇，多多包涵。</p><a id="more"></a><h2 id="框架-·-模板-·-控制"><a href="#框架-·-模板-·-控制" class="headerlink" title="框架 · 模板 · 控制"></a>框架 · 模板 · 控制</h2><p>HTML，全称是“超文本标记语言”<a href="https://baike.baidu.com/item/HTML/97049" target="_blank" rel="noopener">百度百科</a><br>CSS，全称是“层叠样式表”<a href="https://baike.baidu.com/item/CSS/5457" target="_blank" rel="noopener">百度百科</a><br>JavaScript，额……没有全称，不要在意这些细节。<a href="https://baike.baidu.com/item/javascript/321142" target="_blank" rel="noopener">百度百科</a></p><p>首先，概念不可避。此处不是科普，而是经验谈，有需要的同学可以上百度百科先阅读一下~</p><p>虽然正统的MVC框架其实是<a href="https://baike.baidu.com/item/MVC%E6%A1%86%E6%9E%B6?fromtitle=mvc&amp;fromid=85990#2" target="_blank" rel="noopener">这样</a>的，但是我仍然想套用它的概念，毕竟是比较经典的讲法，能够在一定程度上提高本文的逼格。（以及，能够被以后前来访问的大牛和我自己笑话一下。）</p><p>我这么菜，我也很无奈呀.jpg</p><h3 id="框架——HTML"><a href="#框架——HTML" class="headerlink" title="框架——HTML"></a>框架——HTML</h3><p><img src="/2018/02/14/Understanding-on-HTML/F12.PNG" alt="Chrome Developer Tool"></p><p><center>Chrome开发者工具中显示的HTML代码</center><br></p><p>HTML代码是网页最根本的骨架，也是大部分网页呈现在浏览器上的最终形式之一。<br>举个栗子，请打开你正在使用的任意一款浏览器，访问任意一个页面，然后打开浏览器自带的开发者工具（如果不知道如何打开，百度一下）。该开发者工具中的某一个选项卡（通常是第一个）中展示的正是该网站的HTML代码。大致结构一般如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这些用尖括号和斜杠组成的HTML标签，是网页的框架，正如你阅读的书籍，在初始状态下是从上到下，自然地顺序排版的。被标签包裹着的文本内容、各种由诸如<code>&lt;img&gt;</code>、<code>&lt;video&gt;</code>等标签衍生出的图片、视频等多媒体内容，都在HTML这个框架之下，分布于整个网页的各自位置当中。看着十分理想，场面非常和谐。</p><p>但是，燃鹅，BUT……</p><h3 id="模板——CSS"><a href="#模板——CSS" class="headerlink" title="模板——CSS"></a>模板——CSS</h3><blockquote><p>“这个对话框我想浮在页面最顶层，然后点完就消失，对，要有特效的那种！”<br>“给我弄个像这个图纸这样的网页。什么？两个纵向栏，报纸都排版得出来，你写不出来？”<br>“怎么都是黑漆漆一片的，文字和按钮要有颜色，有质感，有特效，这么丑会辣眼睛的啦！”<br>“……哼！”</p></blockquote><p>是的，你眼前的网页之所以不是一场灾难，一坨从左往右写，从上往下读的纯文本，<br>正是因为除HTML代码之外，还有CSS代码，作为网页样式的模板，批量而精确地定义着每一个网页元素的各种属性。</p><p>是的，各种属性：<br>长宽，距离，边框，形状，颜色，排版，显示，隐藏……</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.mod-class</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#special-item</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的css代码，作用于形如以下的html元素中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mod-class"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"special-item"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>元素标签可以不仅仅是<code>&lt;div&gt;</code>，<br><strong>而只要<code>class</code>或<code>id</code>吻合，无论这个元素是什么</strong>，<br>就会受到相应CSS语句的约束，<br><strong>就像一个放之四海而皆准的模板一样</strong><br>这就是CSS作为页面样式模板的力量。</p><p>而且，这不仅仅是静态的。现代的CSS版本，拥有着能够做出各种动态特效、多平台响应等一系列高级特性。</p><blockquote><p>“那么CSS代码在哪里呢？我在开发者工具中找了半天没找到诶。”</p></blockquote><p><img src="/2018/02/14/Understanding-on-HTML/CSS.PNG" alt="Chrome Developer Tool"></p><p><center>Chrome开发者工具中显示的CSS代码</center><br></p><p>一般在显示HTML代码的开发者工具界面的右侧。而这些CSS属性都是通过在HTML文件中引用.css格式的文件、或者直接插入<code>&lt;style&gt;</code>标签来实现的：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//引入文件</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"./***.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>/&gt;</span></span><br><span class="line">//引入文件</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">   @<span class="keyword">import</span>"<span class="keyword">mystyle</span>.<span class="keyword">css</span>"; </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">//直接插入代码</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.custom-class</span>&#123;</span></span><br><span class="line"><span class="undefined">        ....</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">//直接在元素中插入代码</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是，燃鹅，BUT……</p><h3 id="控制——JavaScript，以及更多"><a href="#控制——JavaScript，以及更多" class="headerlink" title="控制——JavaScript，以及更多"></a>控制——JavaScript，以及更多</h3><blockquote><p>“网页不错, 我想弄个账户登录什么的。这样可以让用户有个性化的体验”<br>“弄个banner挂幻灯片吧，自动播放的那种，现在网站主页不都这么做吗？”<br>“听说小游戏挺火的，‘跳一跳’啥的，什么写的，难不成是flash？”<br>“额……”</p></blockquote><p>如果网页是纯HTML和CSS编写出来的话，同样是一场灾难：</p><ul><li>无论何时，所有人都只能访问通过一模一样的网页</li><li>要创建新的网页，只能手工重新编写新的网页文件</li><li>无法提供用户输入的功能，更无法在浏览过程的前中后，对用户输出特定的反馈（内容的变化，事件的产生）</li><li>……</li></ul><p>那么如果网页引入了我们熟悉的程序代码呢？</p><ul><li>不同的用户，访问具有不同内容的同一个网页，正如我们打开同一个APP，看不同的推荐一样</li><li>创建新的网页，正如安装新的程序一样，是一个自动的过程</li><li>每一次手指的触摸、鼠标的单击，程序的界面都会有相应的变化</li><li>……</li></ul><p>那么就需要一种、多种编程语言参与到网页乃至网站的编写过程中来了。<br>JavaScript，这个带着Java名字，却和Java毫无关系的编程语言应运而生，担负了赋予网页灵魂的工作——控制网页的各类功能。</p><p>在你看着网页加载的时候，在你浏览网页的时候，<br>在你按下网页上一个提交按钮的时候，在你点击屏幕跳一跳的时候<br>（没错，微信小游戏的游戏逻辑也是JS写的）</p><p>JavaScript都在你看不见的地方，静静地运行着。<br>（它和HTML、CSS一样，被下载到浏览器，在浏览器提供的本地引擎中运行着，而不是服务器之类的远程平台）<br>是的，它是货真价实的编程语言，让网页拥有程序一样的功能。</p><p><img src="/2018/02/14/Understanding-on-HTML/JS.PNG" alt="Chrome Developer Tool"></p><p><center>Chrome开发者工具中显示的可调试jQuery（JS的一个分支）代码的控制台</center></p><p><center>（一般在开发者工具显示HTML代码界面的下方，或者名为控制台的选项卡内）</center><br><br></p><p>与css一样，它也有引入文件和使用<code>&lt;script&gt;</code>标签直接插入代码的方式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"***.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">//或者</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    var a = 0;</span></span><br><span class="line"><span class="undefined">    ...</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是，燃鹅，BUT……</p><p>好了好了，这里就不另开一小节讲了。</p><p>JS的优势正是所有浏览器都拥有的统一的JavaScript引擎，可以让JS一次编写，处处下载，均能兼容运行。<br>但是它的劣势也就在于本地运行，占用了本地的资源，增大了客户端设备的负担，不能在网页加载之前对网页结构进行灵活的改变，（举个简单的栗子，如果要根据不同省份、地区、国家的访客的ip地址，提供大量的不同内容，对于网页的处理总不可能永远都是边加载边修改）。况且，JS并没有解决：</p><ul><li>既然有了用户数据交互的渠道，那数据存在哪里？又从哪里取出？</li><li>如何在部署了网站的服务器上设定好域名、访问权限等，并且能够自动地拒绝非法的请求</li></ul><p>所以，需要：</p><ul><li>一个能够在服务器端，根据客户端提交来的请求，在加载之前就能够将内容做一定处理的编程语言</li><li>一个能够规范地管理并与网页进行实时数据交换的数据库</li><li>一个能够有效管理服务器上传下载、ip域名映射、访问进程等事项的服务器管理程序</li></ul><p>是的，这些服务器端的需求，与我们之前提到的浏览器端，也即客户端的需求相对。<br>两者的对比就产生了网页开发中最重要的两大分类：</p><p><strong>前端和后端</strong></p><p>网页前端开发：HTML+CSS+JS<br>网页后端开发：服务器管理+数据库管理+预处理控制（后端框架）</p><p>两者有着很多很有趣的矛盾统一性，例如：</p><ul><li>网页前端开发因为需要跨浏览器甚至跨平台的兼容，因此使用的技术一般是统一的HTML+CSS+JS。</li><li>后端开发却相反，由于服务器本身平台的多样性（Linux或Windows）以及对其性能、规模等其他需求的多样性，导致后端采用的技术框架呈现百花齐放的姿态，例如WordPress采用的LAMP或LNMP，基于python的Django，基于Node.js的Express，基于Java的Spring等等，此处就不过多赘述了。</li><li>……</li></ul><p>PS：不仅仅是网页开发分前端和后端，任意一个web项目，例如手机APP、桌面程序、微信小程序……都需要有前端后端的开发划分，以便于厘清项目结构和开发安排</p><h2 id="总结：在跑题万里之后"><a href="#总结：在跑题万里之后" class="headerlink" title="总结：在跑题万里之后"></a>总结：在跑题万里之后</h2><blockquote><p>（以及，能够被以后前来访问的大牛和我自己笑话一下。）<br> 我这么菜，我也很无奈呀.jpg</p></blockquote><p>我一直在思考自己为什么会跑题。最后发现答案就在上面这两句引用里面。<br>是啊，我很菜。</p><p>我当前对于技术的理解，根本无法给予我把控这些庞杂概念的能力。<br>说是讲自己对HTML的理解，但更多的是谈到了围绕HTML+CSS+JS的网页前端基础。<br>虽然也没什么毛病，俗话说“不讲相关知识点的讲评，就是在耍流氓”。</p><p>但是我依然要写，毕竟只有写出来点什么，才能知道自己脑袋里面装的东西是有多么地可笑，才能放下自己那些绷在脸面上放不下的所谓自大和狂妄。正如高中时期孜孜不倦地在一切空白处记下的笔记，就算我记下之后不再去看它，至少在我记录的时候，知识在我的大脑中不断流转、不断处理，最终呈现在我的笔下，我的眼前。这个过程，不正是自我纠错、自我提高的过程吗？</p><p>为自己而写，调动自己的思维，不要让大脑日渐沦为一台生锈的机器。</p><p>那么最后总结一下吧：HTML作为现代网页的基本骨架，只有在CSS、JavaScript乃至整个服务器后端的协同下，才能够正常地发挥现代网页的基本机能，以及为更多新鲜的需求、新颖的功能带来无限的开发潜能。</p><p>学习网页开发，最重要的不是一句两句语法，而是在动手和借鉴的过程中，从微观的角度，理解整个项目的运作逻辑，和技术背后的高明之处。（虽然我还是在需求导向型的歧途上越走越远，但是读得懂源码的程序员，才能开发出真正的好产品，这是不变的真理，迟早有一天我仍然会兜一个大圈子，回到这里的）</p><h2 id="建议-·-福利"><a href="#建议-·-福利" class="headerlink" title="建议 · 福利"></a>建议 · 福利</h2><p>其实上面已经写一些建议了。但是我还想另外开一个大节讲一讲。</p><p>建议不多，就是先不要想着自己搭一个什么牛逼的网站，先做一个简单的HTML+CSS+JS的小页面，理解清楚他们之间的作用机理，顺带踩一部分的坑。</p><p>之后或许你会停滞一段时间，因为说实话，其实在修改一些开源项目供你自己项目需求的时候，这些已经完全够用了，前辈写的足够优秀了，后端的东西你一旦配置好了就可以专心改界面了。</p><p>但是，会有一个时刻，你会发现只搞这些根本满足不了需求，或许是你自己看到了别人写的项目，或许是你突然要调用数据库做一个新的功能，或许是你发现项目提供的API根本没法用，要自己写一个。</p><p>不懂后端的前端，只可能是个巨坑。所以你从一个大坑（网页前端），纵身一跃，跳进了另一个大坑（网页后端）。之后再多跳几次，从网站到移动APP，从移动APP到桌面端，从软件到物联网硬件，然后，然后……</p><p>然后，你就乖乖回前端啦！（并不）</p><blockquote><p>福利？福利是不可能有的，这辈子都不可能有的。<br>就是稍微推荐几个网站把读者带坑里去这样子</p></blockquote><p>学习站点：</p><ul><li><a href="https://freecodecamp.cn/" target="_blank" rel="noopener">FreeCodeCamp.cn</a>：闯（shua）关（ti）式的前端编程教学网站（也是我真正开始接触前端编程的地方）</li><li><a href="http://www.w3school.com.cn" target="_blank" rel="noopener">w3school</a>：可以当工具书用，有些知识点较老，但是不影响使用（百度HTML相关知识点，不出意外前几个就是它了）</li><li><a href="http://www.mengma.com/" target="_blank" rel="noopener">萌码</a>：又一个闯（shua）关（ti）式的编程练习平台（虽然没用过但是身边的同学在用）</li></ul><p>练手推荐：</p><ul><li><a href="https://github.com" target="_blank" rel="noopener">GitHub</a>：多看优秀项目的代码，并且多练习一些优秀项目的部署和使用，如果不知道找什么就去看排行榜上的项目。（CSDN同理）</li><li><a href="https://education.github.com/pack" target="_blank" rel="noopener">Student Developer Pack</a>：使用学校提供的学生邮箱注册GitHub账号，可以领取Education Pack，内含免费一年DigitalOcean服务器和Namecheap域名。（踩坑提示：DO的服务器要使用VISA卡或者PayPal预交约合32元人民币才能开户，建议使用PayPal，一年后全价略坑，现已转bandwagon。服务器在境外，可以找教程kexueshangwang）</li><li><a href="https://cn.wordpress.org/" target="_blank" rel="noopener">WordPress</a>：搜一个教程并对照着在服务器上搭建一个WordPress站点吧！本博客程序是Hexo，但我依然推荐WP，毕竟越著名的程序出问题时能够获得的帮助（教程）也就阅读。同时也有助于你理解LNMP/LAMP内部各个部分的联系和配置方法。如果肯花心思去美化、修改你的站点那就更好了。<br>（WordPress是一个优秀的PHP项目，类似的还有论坛程序Discuz、PHPwind、Wecenter、Tipask，在修改它们的过程中你也可以理解PHP在站点中起到的作用，如果你还想尝试其他架构的例如Java或Python的，也可以去搜索并尝试部署到你的服务器上）</li><li><a href="https://mp.weixin.qq.com/cgi-bin/wx" target="_blank" rel="noopener">微信小程序</a>：使用你当前掌握的前端、后端知识去开发微信小程序吧~</li></ul><p>工具下载：</p><ul><li><a href="https://www.baidu.com" target="_blank" rel="noopener">Baidu</a>：是的，搜索引擎是知识的源泉，（貌似并不用下载），掌握好问题的描述方式，输入少量的、但足以描述整体的关键词，大部分的问题都能够找得到答案。</li><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code</a>：近乎万能的代码编辑器，你值得拥有。</li><li><a href="https://filezilla-project.org/" target="_blank" rel="noopener">FileZila</a>：好用的FTP上传下载工具，与服务器进行文件传输的首选。</li><li><a href="https://www.putty.org/" target="_blank" rel="noopener">Putty</a>：SSH客户端，使用命令行远程操作你的服务器，顺带学习一下Linux命令的使用</li><li><a href="https://lnmp.org/" target="_blank" rel="noopener">LNMP</a>：在你的服务器上快速配置LNMP环境，免除各种依赖冲突的烦恼</li><li><a href="https://www.apachefriends.org/" target="_blank" rel="noopener">XAMPP</a>：在你的服务器上快速配置LAMP环境，同样也支持在本地环境（Windows桌面端）配置，便于你站点的本地调试（本地调试后上传能避免很多不必要的麻烦）</li></ul><blockquote><p>最后，这是本站的第二篇正式发文，感谢阅读。<br>如有意见和建议，欢迎通过首页的联系方式联系作者，<br>本文参考资料均来源于网络，作者保留相关权利，转载请注明出处。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Take something for example,&lt;br&gt;which seems to be far more effctive at times. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;讲一些对于HTML的理解，顺带讲讲CSS和JavaScript&lt;br&gt;水平有限，如有偏颇，多多包涵。&lt;/p&gt;
    
    </summary>
    
    
      <category term="experience" scheme="http://lmy98129.github.io/tags/experience/"/>
    
      <category term="understanding" scheme="http://lmy98129.github.io/tags/understanding/"/>
    
  </entry>
  
  <entry>
    <title>First to NeXT</title>
    <link href="http://lmy98129.github.io/2018/02/14/First-to-NeXT/"/>
    <id>http://lmy98129.github.io/2018/02/14/First-to-NeXT/</id>
    <published>2018-02-14T07:46:58.000Z</published>
    <updated>2018-02-15T07:24:45.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Maybe it is the first.<br>But in my view, that may be the NeXT.</p></blockquote><p>名字不重要，形式也不重要，重要的是内容。<br>这里将会陆续发布一些技术工作的经验谈，然而仅仅是经验谈而已。</p><a id="more"></a><p>更多的都是需要读者自己去探索，<br>这一方天地下，比我们的视野更远的地方。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"First to NeXT"</span></span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><blockquote><p>这是本站第一篇正式发文，感谢阅读！</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Maybe it is the first.&lt;br&gt;But in my view, that may be the NeXT.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;名字不重要，形式也不重要，重要的是内容。&lt;br&gt;这里将会陆续发布一些技术工作的经验谈，然而仅仅是经验谈而已。&lt;/p&gt;
    
    </summary>
    
    
      <category term="intro" scheme="http://lmy98129.github.io/tags/intro/"/>
    
  </entry>
  
</feed>
